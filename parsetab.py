
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAY ARROW ARROWMAP AS BOOL BREAK CASE CATCH CLASS CLOSETAG COLON COMMA CONCATENATEEQUAL CONST DEFAULT DIVIDE DO DOT DOUBLEMINUS DOUBLEPLUS ECHO ELSE ELSEIF EMPTY ENDSWITCH EQ EQUALS EXCEPTION EXTENDS FGETS FINAL FINALLY FLOAT FN FOR FOREACH FUNCTION GEQ GT ID IF IMPLEMENTS INCLUDE INSTANCEOF INT INTERFACE LBRACE LBRACKET LEQ LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LT MINUS MINUSEQUAL MODULO NAMESPACE NEQ NEW NOT NULL OPENTAG OR PLUS PLUSEQUAL POTENCIA PRINT PRIVATE PROTECTED PUBLIC QUESTION RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STDIN STRICTEQ STRICTNEQ STRING SWITCH THIS THROW TIMES TRY VARIABLE VOID WHILEinicio : OPENTAG programa CLOSETAGprograma : sentencia\n| sentencia programasentencia : asignacion\n| comparacion\n| impresion\n| estructurasProgramaasignacion : VARIABLE EQUALS operaArit SEMICOLONoperaArit : valor\n| valor operador operaAritvalor : INT\n| FLOAT\n| VARIABLE\n| STRINGoperador : PLUS\n| MINUS\n| TIMES\n| DIVIDE\n| MODULOcomparacion : valor comparador valorcomparador : LT\n| GT\n| LEQ\n| GEQimpresion : ECHO imprimir SEMICOLON\n| PRINT imprimir SEMICOLONimprimir : LPAREN repiteValores RPAREN\n| LPAREN RPAREN\n| repiteValores\n| emptyrepiteValores : valor\n| valor COMMA repiteValoresempty :estructurasPrograma : controlStructurecontrolStructure : if\n| for\n| while\n| switchif : IF LPAREN conditions RPAREN LBRACE body RBRACE\n| IF LPAREN conditions RPAREN LBRACE body RBRACE else_blockselse_blocks : ELSE LBRACE body RBRACE\n| ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocksconditions : condition\n| condition opLogic conditionscondition : valor opSymbol valoropSymbol : EQ\n| NEQ\n| STRICTEQ\n| STRICTNEQ\n| LT\n| GT\n| LEQ\n| GEQopLogic : AND\n| LOGICAL_AND\n| OR\n| LOGICAL_OR\n| NOT\n| LOGICAL_NOTbody : sentenciaList\n| emptysentenciaList : sentencia\n| sentencia sentenciaListfor : forStatementforStatement : FOR LPAREN forcondition RPAREN LBRACE body RBRACEforcondition : VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS\n| VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUSwhile : WHILE LPAREN condition RPAREN LBRACE body RBRACE\n| WHILE LPAREN condition RPAREN LBRACE RBRACEswitch : SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE\n| SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLONcaseLists : cases\n| cases default\n| default\n| emptycases : case\n| case casescase : CASE valor COLON body BREAK SEMICOLON\n| CASE valor SEMICOLON body BREAK SEMICOLON\n| CASE valor COLON body\n| CASE valor SEMICOLON\n| CASE valordefault : DEFAULT COLON body BREAK SEMICOLON\n| DEFAULT SEMICOLON body BREAK SEMICOLON\n| DEFAULT COLON body\n| DEFAULT SEMICOLON body\n| DEFAULT'
    
_lr_action_items = {'OPENTAG':([0,],[2,]),'$end':([1,26,],[0,-1,]),'VARIABLE':([2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,22,28,29,30,31,32,33,35,39,41,42,43,44,47,48,51,52,60,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,97,102,104,111,114,115,117,118,121,122,125,127,132,133,134,136,137,149,150,155,160,],[9,9,-4,-5,-6,-7,39,39,-34,-11,-12,-14,-35,-36,-37,-38,-64,39,39,-21,-22,-23,-24,39,-13,39,39,39,59,-20,-25,39,-26,-8,39,-15,-16,-17,-18,-19,39,-54,-55,-56,-57,-58,-59,39,-46,-47,-48,-49,-50,-51,-52,-53,9,9,9,9,-69,39,126,-39,-68,-70,9,9,-65,-40,9,9,-71,9,39,154,-41,9,-42,]),'ECHO':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,97,102,104,115,117,118,121,122,125,127,132,133,134,136,150,155,160,],[11,11,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,11,11,11,11,-69,-39,-68,-70,11,11,-65,-40,11,11,-71,11,-41,11,-42,]),'PRINT':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,97,102,104,115,117,118,121,122,125,127,132,133,134,136,150,155,160,],[12,12,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,12,12,12,12,-69,-39,-68,-70,12,12,-65,-40,12,12,-71,12,-41,12,-42,]),'INT':([2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,22,28,29,30,31,32,33,35,39,41,42,43,47,48,51,52,60,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,91,94,97,102,104,111,115,117,118,121,122,125,127,132,133,134,135,136,137,150,155,160,],[14,14,-4,-5,-6,-7,14,14,-34,-11,-12,-14,-35,-36,-37,-38,-64,14,14,-21,-22,-23,-24,14,-13,14,14,14,-20,-25,14,-26,-8,14,-15,-16,-17,-18,-19,14,-54,-55,-56,-57,-58,-59,14,-46,-47,-48,-49,-50,-51,-52,-53,98,14,14,14,14,-69,14,-39,-68,-70,14,14,-65,-40,14,14,-71,142,14,14,-41,14,-42,]),'FLOAT':([2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,22,28,29,30,31,32,33,35,39,41,42,43,47,48,51,52,60,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,97,102,104,111,115,117,118,121,122,125,127,132,133,134,136,137,150,155,160,],[15,15,-4,-5,-6,-7,15,15,-34,-11,-12,-14,-35,-36,-37,-38,-64,15,15,-21,-22,-23,-24,15,-13,15,15,15,-20,-25,15,-26,-8,15,-15,-16,-17,-18,-19,15,-54,-55,-56,-57,-58,-59,15,-46,-47,-48,-49,-50,-51,-52,-53,15,15,15,15,-69,15,-39,-68,-70,15,15,-65,-40,15,15,-71,15,15,-41,15,-42,]),'STRING':([2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,22,28,29,30,31,32,33,35,39,41,42,43,47,48,51,52,60,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,94,97,102,104,111,115,117,118,121,122,125,127,132,133,134,136,137,150,155,160,],[16,16,-4,-5,-6,-7,16,16,-34,-11,-12,-14,-35,-36,-37,-38,-64,16,16,-21,-22,-23,-24,16,-13,16,16,16,-20,-25,16,-26,-8,16,-15,-16,-17,-18,-19,16,-54,-55,-56,-57,-58,-59,16,-46,-47,-48,-49,-50,-51,-52,-53,16,16,16,16,-69,16,-39,-68,-70,16,16,-65,-40,16,16,-71,16,16,-41,16,-42,]),'IF':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,97,102,104,115,117,118,121,122,125,127,132,133,134,136,150,155,160,],[21,21,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,21,21,21,21,-69,-39,-68,-70,21,21,-65,-40,21,21,-71,21,-41,21,-42,]),'WHILE':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,97,102,104,115,117,118,121,122,125,127,132,133,134,136,150,155,160,],[23,23,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,23,23,23,23,-69,-39,-68,-70,23,23,-65,-40,23,23,-71,23,-41,23,-42,]),'SWITCH':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,97,102,104,115,117,118,121,122,125,127,132,133,134,136,150,155,160,],[24,24,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,24,24,24,24,-69,-39,-68,-70,24,24,-65,-40,24,24,-71,24,-41,24,-42,]),'FOR':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,97,102,104,115,117,118,121,122,125,127,132,133,134,136,150,155,160,],[25,25,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,25,25,25,25,-69,-39,-68,-70,25,25,-65,-40,25,25,-71,25,-41,25,-42,]),'CLOSETAG':([3,4,5,6,7,8,13,14,15,16,17,18,19,20,22,27,39,47,48,52,60,104,115,117,118,125,127,134,150,160,],[26,-2,-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-3,-13,-20,-25,-26,-8,-69,-39,-68,-70,-65,-40,-71,-41,-42,]),'RBRACE':([5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,91,94,95,97,99,100,101,102,103,104,105,106,107,108,109,110,113,115,116,117,118,119,120,121,122,123,125,127,130,131,132,133,134,136,140,143,145,146,150,152,153,155,158,160,],[-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,-33,104,-33,-33,115,-60,-61,-62,117,-69,118,-72,-74,-75,-76,-87,125,-39,-63,-68,-70,-73,-77,-33,-33,-82,-65,-40,-85,-86,-33,-81,-71,-33,-80,150,-83,-84,-41,-78,-79,-33,159,-42,]),'BREAK':([5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,100,101,102,104,115,116,117,118,121,122,125,127,130,131,132,133,134,140,141,150,160,],[-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,-60,-61,-62,-69,-39,-63,-68,-70,-33,-33,-65,-40,138,139,-33,-33,-71,147,148,-41,-42,]),'ENDSWITCH':([5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,96,100,101,102,104,106,107,108,109,110,112,115,116,117,118,119,120,121,122,123,125,127,130,131,132,133,134,140,145,146,150,152,153,160,],[-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,-33,-60,-61,-62,-69,-72,-74,-75,-76,-87,124,-39,-63,-68,-70,-73,-77,-33,-33,-82,-65,-40,-85,-86,-33,-81,-71,-80,-83,-84,-41,-78,-79,-42,]),'CASE':([5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,95,96,100,101,102,104,109,115,116,117,118,123,125,127,132,133,134,140,150,152,153,160,],[-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,111,111,-60,-61,-62,-69,111,-39,-63,-68,-70,-82,-65,-40,-33,-81,-71,-80,-41,-78,-79,-42,]),'DEFAULT':([5,6,7,8,13,14,15,16,17,18,19,20,22,39,47,48,52,60,95,96,100,101,102,104,106,109,115,116,117,118,120,123,125,127,132,133,134,140,150,152,153,160,],[-4,-5,-6,-7,-34,-11,-12,-14,-35,-36,-37,-38,-64,-13,-20,-25,-26,-8,110,110,-60,-61,-62,-69,110,-76,-39,-63,-68,-70,-77,-82,-65,-40,-33,-81,-71,-80,-41,-78,-79,-42,]),'EQUALS':([9,59,],[28,89,]),'LT':([9,10,14,15,16,39,55,126,],[-13,30,-11,-12,-14,-13,82,82,]),'GT':([9,10,14,15,16,39,55,126,],[-13,31,-11,-12,-14,-13,83,83,]),'LEQ':([9,10,14,15,16,39,55,126,],[-13,32,-11,-12,-14,-13,84,84,]),'GEQ':([9,10,14,15,16,39,55,126,],[-13,33,-11,-12,-14,-13,85,85,]),'LPAREN':([11,12,21,23,24,25,129,],[35,35,41,42,43,44,137,]),'SEMICOLON':([11,12,14,15,16,34,36,37,38,39,40,45,46,50,67,68,90,98,110,123,124,138,139,142,147,148,],[-33,-33,-11,-12,-14,48,-29,-30,-31,-13,52,60,-9,-28,-27,-32,-10,114,122,133,134,145,146,149,152,153,]),'COMMA':([14,15,16,38,39,],[-11,-12,-14,51,-13,]),'PLUS':([14,15,16,39,46,],[-11,-12,-14,-13,62,]),'MINUS':([14,15,16,39,46,],[-11,-12,-14,-13,63,]),'TIMES':([14,15,16,39,46,],[-11,-12,-14,-13,64,]),'DIVIDE':([14,15,16,39,46,],[-11,-12,-14,-13,65,]),'MODULO':([14,15,16,39,46,],[-11,-12,-14,-13,66,]),'RPAREN':([14,15,16,35,38,39,49,53,54,56,57,58,68,92,93,144,156,157,],[-11,-12,-14,50,-31,-13,67,69,-43,86,87,88,-32,-44,-45,151,-66,-67,]),'EQ':([14,15,16,39,55,126,],[-11,-12,-14,-13,78,78,]),'NEQ':([14,15,16,39,55,126,],[-11,-12,-14,-13,79,79,]),'STRICTEQ':([14,15,16,39,55,126,],[-11,-12,-14,-13,80,80,]),'STRICTNEQ':([14,15,16,39,55,126,],[-11,-12,-14,-13,81,81,]),'AND':([14,15,16,39,54,93,],[-11,-12,-14,-13,71,-45,]),'LOGICAL_AND':([14,15,16,39,54,93,],[-11,-12,-14,-13,72,-45,]),'OR':([14,15,16,39,54,93,],[-11,-12,-14,-13,73,-45,]),'LOGICAL_OR':([14,15,16,39,54,93,],[-11,-12,-14,-13,74,-45,]),'NOT':([14,15,16,39,54,93,],[-11,-12,-14,-13,75,-45,]),'LOGICAL_NOT':([14,15,16,39,54,93,],[-11,-12,-14,-13,76,-45,]),'COLON':([14,15,16,39,87,110,123,],[-11,-12,-14,-13,96,121,132,]),'LBRACE':([69,86,87,88,128,151,],[91,94,95,97,136,155,]),'ELSE':([115,159,],[128,128,]),'ELSEIF':([115,159,],[129,129,]),'DOUBLEPLUS':([154,],[156,]),'DOUBLEMINUS':([154,],[157,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'programa':([2,4,],[3,27,]),'sentencia':([2,4,91,94,97,102,121,122,132,133,136,155,],[4,4,102,102,102,102,102,102,102,102,102,102,]),'asignacion':([2,4,91,94,97,102,121,122,132,133,136,155,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'comparacion':([2,4,91,94,97,102,121,122,132,133,136,155,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'impresion':([2,4,91,94,97,102,121,122,132,133,136,155,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'estructurasPrograma':([2,4,91,94,97,102,121,122,132,133,136,155,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'valor':([2,4,11,12,28,29,35,41,42,43,51,61,70,77,91,94,97,102,111,121,122,132,133,136,137,155,],[10,10,38,38,46,47,38,55,55,57,38,46,55,93,10,10,10,10,123,10,10,10,10,10,55,10,]),'controlStructure':([2,4,91,94,97,102,121,122,132,133,136,155,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'if':([2,4,91,94,97,102,121,122,132,133,136,155,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'for':([2,4,91,94,97,102,121,122,132,133,136,155,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'while':([2,4,91,94,97,102,121,122,132,133,136,155,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([2,4,91,94,97,102,121,122,132,133,136,155,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'forStatement':([2,4,91,94,97,102,121,122,132,133,136,155,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'comparador':([10,],[29,]),'imprimir':([11,12,],[34,40,]),'repiteValores':([11,12,35,51,],[36,36,49,68,]),'empty':([11,12,91,94,95,96,97,121,122,132,133,136,155,],[37,37,101,101,108,108,101,101,101,101,101,101,101,]),'operaArit':([28,61,],[45,90,]),'conditions':([41,70,137,],[53,92,144,]),'condition':([41,42,70,137,],[54,56,54,54,]),'forcondition':([44,],[58,]),'operador':([46,],[61,]),'opLogic':([54,],[70,]),'opSymbol':([55,126,],[77,135,]),'body':([91,94,97,121,122,132,133,136,155,],[99,103,113,130,131,140,141,143,158,]),'sentenciaList':([91,94,97,102,121,122,132,133,136,155,],[100,100,100,116,100,100,100,100,100,100,]),'caseLists':([95,96,],[105,112,]),'cases':([95,96,109,],[106,106,120,]),'default':([95,96,106,],[107,107,119,]),'case':([95,96,109,],[109,109,109,]),'else_blocks':([115,159,],[127,160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OPENTAG programa CLOSETAG','inicio',3,'p_inicio','main.py',7),
  ('programa -> sentencia','programa',1,'p_programa','main.py',10),
  ('programa -> sentencia programa','programa',2,'p_programa','main.py',11),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','main.py',14),
  ('sentencia -> comparacion','sentencia',1,'p_sentencia','main.py',15),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','main.py',16),
  ('sentencia -> estructurasPrograma','sentencia',1,'p_sentencia','main.py',17),
  ('asignacion -> VARIABLE EQUALS operaArit SEMICOLON','asignacion',4,'p_asignacion','main.py',20),
  ('operaArit -> valor','operaArit',1,'p_operaArit','main.py',23),
  ('operaArit -> valor operador operaArit','operaArit',3,'p_operaArit','main.py',24),
  ('valor -> INT','valor',1,'p_valor','main.py',27),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',28),
  ('valor -> VARIABLE','valor',1,'p_valor','main.py',29),
  ('valor -> STRING','valor',1,'p_valor','main.py',30),
  ('operador -> PLUS','operador',1,'p_operador','main.py',33),
  ('operador -> MINUS','operador',1,'p_operador','main.py',34),
  ('operador -> TIMES','operador',1,'p_operador','main.py',35),
  ('operador -> DIVIDE','operador',1,'p_operador','main.py',36),
  ('operador -> MODULO','operador',1,'p_operador','main.py',37),
  ('comparacion -> valor comparador valor','comparacion',3,'p_comparacion','main.py',40),
  ('comparador -> LT','comparador',1,'p_comparador','main.py',43),
  ('comparador -> GT','comparador',1,'p_comparador','main.py',44),
  ('comparador -> LEQ','comparador',1,'p_comparador','main.py',45),
  ('comparador -> GEQ','comparador',1,'p_comparador','main.py',46),
  ('impresion -> ECHO imprimir SEMICOLON','impresion',3,'p_impresion','main.py',49),
  ('impresion -> PRINT imprimir SEMICOLON','impresion',3,'p_impresion','main.py',50),
  ('imprimir -> LPAREN repiteValores RPAREN','imprimir',3,'p_imprimir','main.py',53),
  ('imprimir -> LPAREN RPAREN','imprimir',2,'p_imprimir','main.py',54),
  ('imprimir -> repiteValores','imprimir',1,'p_imprimir','main.py',55),
  ('imprimir -> empty','imprimir',1,'p_imprimir','main.py',56),
  ('repiteValores -> valor','repiteValores',1,'p_repiteValores','main.py',59),
  ('repiteValores -> valor COMMA repiteValores','repiteValores',3,'p_repiteValores','main.py',60),
  ('empty -> <empty>','empty',0,'p_empty','main.py',63),
  ('estructurasPrograma -> controlStructure','estructurasPrograma',1,'p_estructurasPrograma','main.py',66),
  ('controlStructure -> if','controlStructure',1,'p_controlStructure','main.py',69),
  ('controlStructure -> for','controlStructure',1,'p_controlStructure','main.py',70),
  ('controlStructure -> while','controlStructure',1,'p_controlStructure','main.py',71),
  ('controlStructure -> switch','controlStructure',1,'p_controlStructure','main.py',72),
  ('if -> IF LPAREN conditions RPAREN LBRACE body RBRACE','if',7,'p_if','main.py',75),
  ('if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks','if',8,'p_if','main.py',76),
  ('else_blocks -> ELSE LBRACE body RBRACE','else_blocks',4,'p_else_blocks','main.py',79),
  ('else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks','else_blocks',8,'p_else_blocks','main.py',80),
  ('conditions -> condition','conditions',1,'p_conditions','main.py',84),
  ('conditions -> condition opLogic conditions','conditions',3,'p_conditions','main.py',85),
  ('condition -> valor opSymbol valor','condition',3,'p_condition','main.py',88),
  ('opSymbol -> EQ','opSymbol',1,'p_opSymbol','main.py',91),
  ('opSymbol -> NEQ','opSymbol',1,'p_opSymbol','main.py',92),
  ('opSymbol -> STRICTEQ','opSymbol',1,'p_opSymbol','main.py',93),
  ('opSymbol -> STRICTNEQ','opSymbol',1,'p_opSymbol','main.py',94),
  ('opSymbol -> LT','opSymbol',1,'p_opSymbol','main.py',95),
  ('opSymbol -> GT','opSymbol',1,'p_opSymbol','main.py',96),
  ('opSymbol -> LEQ','opSymbol',1,'p_opSymbol','main.py',97),
  ('opSymbol -> GEQ','opSymbol',1,'p_opSymbol','main.py',98),
  ('opLogic -> AND','opLogic',1,'p_opLogic','main.py',101),
  ('opLogic -> LOGICAL_AND','opLogic',1,'p_opLogic','main.py',102),
  ('opLogic -> OR','opLogic',1,'p_opLogic','main.py',103),
  ('opLogic -> LOGICAL_OR','opLogic',1,'p_opLogic','main.py',104),
  ('opLogic -> NOT','opLogic',1,'p_opLogic','main.py',105),
  ('opLogic -> LOGICAL_NOT','opLogic',1,'p_opLogic','main.py',106),
  ('body -> sentenciaList','body',1,'p_body','main.py',109),
  ('body -> empty','body',1,'p_body','main.py',110),
  ('sentenciaList -> sentencia','sentenciaList',1,'p_sentenciaList','main.py',113),
  ('sentenciaList -> sentencia sentenciaList','sentenciaList',2,'p_sentenciaList','main.py',114),
  ('for -> forStatement','for',1,'p_for','main.py',117),
  ('forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE','forStatement',7,'p_forStatement','main.py',120),
  ('forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS','forcondition',10,'p_forcondition','main.py',123),
  ('forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS','forcondition',10,'p_forcondition','main.py',124),
  ('while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE','while',7,'p_while','main.py',127),
  ('while -> WHILE LPAREN condition RPAREN LBRACE RBRACE','while',6,'p_while','main.py',128),
  ('switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE','switch',7,'p_switch','main.py',131),
  ('switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON','switch',8,'p_switch','main.py',132),
  ('caseLists -> cases','caseLists',1,'p_caseLists','main.py',136),
  ('caseLists -> cases default','caseLists',2,'p_caseLists','main.py',137),
  ('caseLists -> default','caseLists',1,'p_caseLists','main.py',138),
  ('caseLists -> empty','caseLists',1,'p_caseLists','main.py',139),
  ('cases -> case','cases',1,'p_cases','main.py',143),
  ('cases -> case cases','cases',2,'p_cases','main.py',144),
  ('case -> CASE valor COLON body BREAK SEMICOLON','case',6,'p_case','main.py',147),
  ('case -> CASE valor SEMICOLON body BREAK SEMICOLON','case',6,'p_case','main.py',148),
  ('case -> CASE valor COLON body','case',4,'p_case','main.py',149),
  ('case -> CASE valor SEMICOLON','case',3,'p_case','main.py',150),
  ('case -> CASE valor','case',2,'p_case','main.py',151),
  ('default -> DEFAULT COLON body BREAK SEMICOLON','default',5,'p_default','main.py',154),
  ('default -> DEFAULT SEMICOLON body BREAK SEMICOLON','default',5,'p_default','main.py',155),
  ('default -> DEFAULT COLON body','default',3,'p_default','main.py',156),
  ('default -> DEFAULT SEMICOLON body','default',3,'p_default','main.py',157),
  ('default -> DEFAULT','default',1,'p_default','main.py',158),
]
