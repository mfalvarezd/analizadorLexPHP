Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONCATENATEEQUAL
    OBJECT_TYPE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OPENTAG programa CLOSETAG
Rule 2     programa -> sentencia
Rule 3     programa -> sentencia programa
Rule 4     sentencia -> asignacion
Rule 5     sentencia -> asignacion_fgets
Rule 6     sentencia -> comparacion
Rule 7     sentencia -> impresion
Rule 8     sentencia -> estructurasPrograma
Rule 9     sentencia -> try
Rule 10    sentencia -> funcionDeclaration
Rule 11    sentencia -> returnStatement
Rule 12    sentencia -> llamadaFuncion
Rule 13    sentencia -> classDeclarate
Rule 14    sentencia -> interface
Rule 15    sentencia -> objeto
Rule 16    sentencia -> includes
Rule 17    sentencia -> namespace
Rule 18    sentencia -> anonymousFunction
Rule 19    sentencia -> throw
Rule 20    sentencia -> instance
Rule 21    sentencia -> constdeclaration
Rule 22    sentencia -> thisdeclaration
Rule 23    sentencia -> concatenate
Rule 24    sentencia -> alterVar
Rule 25    returnStatement -> RETURN expresion SEMICOLON
Rule 26    returnStatement -> RETURN SEMICOLON
Rule 27    funci -> ID LPAREN RPAREN
Rule 28    funci -> ID LPAREN argumentos RPAREN SEMICOLON
Rule 29    funci -> ID LPAREN RPAREN SEMICOLON
Rule 30    funci -> LPAREN argumentos RPAREN
Rule 31    asignacion -> VARIABLE EQUALS expresion SEMICOLON
Rule 32    asignacion -> VARIABLE minuse SEMICOLON
Rule 33    asignacion -> VARIABLE pluse SEMICOLON
Rule 34    asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON
Rule 35    expresion -> valor
Rule 36    expresion -> expresion opLogic expresion
Rule 37    expresion -> comparacion
Rule 38    expresion -> LPAREN comparacion RPAREN
Rule 39    expresion -> operaArit
Rule 40    expresion -> LPAREN expresion RPAREN
Rule 41    expresion -> llamadaFuncion
Rule 42    expresion -> concatenate
Rule 43    expresion -> minuse
Rule 44    expresion -> pluse
Rule 45    asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
Rule 46    operaArit -> valornumerico
Rule 47    operaArit -> operaArit operador operaArit
Rule 48    operaArit -> LPAREN operaArit RPAREN
Rule 49    valornumerico -> INT
Rule 50    valornumerico -> FLOAT
Rule 51    valornumerico -> VARIABLE
Rule 52    valor -> INT
Rule 53    valor -> VARIABLE
Rule 54    valor -> FLOAT
Rule 55    valor -> STRING
Rule 56    valor -> BOOL
Rule 57    valor -> NULL
Rule 58    valor -> ARRAY
Rule 59    valor -> llamadaFuncion
Rule 60    operador -> PLUS
Rule 61    operador -> MINUS
Rule 62    operador -> TIMES
Rule 63    operador -> DIVIDE
Rule 64    operador -> MODULO
Rule 65    operador -> POTENCIA
Rule 66    comparacion -> valornumerico opSymbol valornumerico
Rule 67    impresion -> ECHO imprimir SEMICOLON
Rule 68    impresion -> PRINT imprimir SEMICOLON
Rule 69    imprimir -> LPAREN repiteValores RPAREN
Rule 70    imprimir -> LPAREN RPAREN
Rule 71    imprimir -> repiteValores
Rule 72    imprimir -> empty
Rule 73    repiteValores -> valor
Rule 74    repiteValores -> valor COMMA repiteValores
Rule 75    empty -> <empty>
Rule 76    estructurasPrograma -> controlStructure
Rule 77    estructurasPrograma -> dataStructure
Rule 78    alterVar -> VARIABLE DOUBLEPLUS SEMICOLON
Rule 79    alterVar -> VARIABLE DOUBLEMINUS SEMICOLON
Rule 80    controlStructure -> if
Rule 81    controlStructure -> for
Rule 82    controlStructure -> while
Rule 83    controlStructure -> dowhile
Rule 84    controlStructure -> switch
Rule 85    controlStructure -> foreach
Rule 86    if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
Rule 87    if -> IF LPAREN conditions RPAREN body SEMICOLON
Rule 88    else_blocks -> ELSE LBRACE body RBRACE
Rule 89    else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
Rule 90    else_blocks -> empty
Rule 91    conditions -> condition
Rule 92    conditions -> condition opLogic conditions
Rule 93    conditions -> LPAREN conditions RPAREN
Rule 94    condition -> valor
Rule 95    condition -> valor opSymbol valor
Rule 96    condition -> NOT condition
Rule 97    condition -> LPAREN conditions RPAREN
Rule 98    opSymbol -> EQ
Rule 99    opSymbol -> NEQ
Rule 100   opSymbol -> STRICTEQ
Rule 101   opSymbol -> STRICTNEQ
Rule 102   opSymbol -> LT
Rule 103   opSymbol -> GT
Rule 104   opSymbol -> LEQ
Rule 105   opSymbol -> GEQ
Rule 106   opLogic -> AND
Rule 107   opLogic -> LOGICAL_AND
Rule 108   opLogic -> OR
Rule 109   opLogic -> LOGICAL_OR
Rule 110   body -> sentenciaList
Rule 111   body -> empty
Rule 112   sentenciaList -> sentencia
Rule 113   sentenciaList -> sentencia sentenciaList
Rule 114   for -> forStatement
Rule 115   forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE
Rule 116   forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
Rule 117   forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS
Rule 118   while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE
Rule 119   while -> WHILE LPAREN condition RPAREN LBRACE RBRACE
Rule 120   dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
Rule 121   switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
Rule 122   switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
Rule 123   caseLists -> cases
Rule 124   caseLists -> cases default
Rule 125   caseLists -> default
Rule 126   caseLists -> empty
Rule 127   cases -> case
Rule 128   cases -> case cases
Rule 129   foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
Rule 130   case -> CASE valor COLON body BREAK SEMICOLON
Rule 131   case -> CASE valor SEMICOLON body BREAK SEMICOLON
Rule 132   case -> CASE valor COLON body
Rule 133   case -> CASE valor SEMICOLON
Rule 134   case -> CASE valor
Rule 135   dataStructure -> array
Rule 136   array -> VARIABLE EQUALS arrays SEMICOLON
Rule 137   array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
Rule 138   array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
Rule 139   array -> map
Rule 140   arrays -> LBRACKET repiteValores RBRACKET
Rule 141   arrayAnidado -> arrays
Rule 142   arrayAnidado -> arrays COMMA arrayAnidado
Rule 143   map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
Rule 144   map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON
Rule 145   maps -> mapArrow
Rule 146   maps -> mapArrow COMMA maps
Rule 147   mapArrow -> valor ARROWMAP valor
Rule 148   default -> DEFAULT COLON body BREAK SEMICOLON
Rule 149   default -> DEFAULT SEMICOLON body BREAK SEMICOLON
Rule 150   default -> DEFAULT COLON body
Rule 151   default -> DEFAULT SEMICOLON body
Rule 152   default -> DEFAULT
Rule 153   argumentos -> argumento
Rule 154   argumentos -> argumento COMMA argumentos
Rule 155   argumento -> valor
Rule 156   argumento -> type VARIABLE
Rule 157   argumento -> VARIABLE EQUALS valor
Rule 158   argumento -> type VARIABLE EQUALS valor
Rule 159   argumento -> empty
Rule 160   type -> INT_TYPE
Rule 161   type -> FLOAT_TYPE
Rule 162   type -> STRING_TYPE
Rule 163   type -> BOOL_TYPE
Rule 164   type -> ARRAY_TYPE
Rule 165   type -> VOID
Rule 166   try -> TRY LBRACE body RBRACE catchs
Rule 167   try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
Rule 168   catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE
Rule 169   catchs -> catch
Rule 170   catchs -> catch catchs
Rule 171   objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
Rule 172   funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
Rule 173   funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
Rule 174   llamadaFuncion -> ID LPAREN argumentos RPAREN
Rule 175   llamadaFuncion -> EMPTY LPAREN argumentos RPAREN
Rule 176   classDeclarate -> CLASS ID LBRACE classBody RBRACE
Rule 177   classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE
Rule 178   classDeclarate -> data CLASS ID LBRACE classBody RBRACE
Rule 179   classDeclarate -> classInterface
Rule 180   classBody -> classMember
Rule 181   classBody -> classMember classBody
Rule 182   classMember -> type VARIABLE SEMICOLON
Rule 183   classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
Rule 184   classMember -> objectInstantiation
Rule 185   objectInstantiation -> NEW ID LPAREN argumentos RPAREN
Rule 186   objectInstantiation -> NEW ID LPAREN RPAREN
Rule 187   classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 188   classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 189   classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 190   classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 191   impInterface -> ID
Rule 192   impInterface -> ID COMMA impInterface
Rule 193   data -> ABSTRACT
Rule 194   data -> PRIVATE
Rule 195   data -> PROTECTED
Rule 196   data -> PUBLIC
Rule 197   data -> STATIC
Rule 198   data -> FINAL
Rule 199   interface -> INTERFACE ID LBRACE sentenciaList RBRACE
Rule 200   includes -> INCLUDE STRING SEMICOLON
Rule 201   includes -> INCLUDE STRING DOT STRING SEMICOLON
Rule 202   namespace -> NAMESPACE ID SEMICOLON
Rule 203   anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
Rule 204   throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
Rule 205   throw -> THROW valor SEMICOLON
Rule 206   instance -> VARIABLE INSTANCEOF ID
Rule 207   constdeclaration -> CONST ID EQUALS valor SEMICOLON
Rule 208   thisdeclaration -> THIS ARROW ID SEMICOLON
Rule 209   thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON
Rule 210   concatenate -> valor DOT STRING
Rule 211   minuse -> MINUSEQUAL INT
Rule 212   pluse -> PLUSEQUAL INT
Rule 213   funcion_strlen -> STRLEN LPAREN STRING RPAREN

Terminals, with rules where they appear

ABSTRACT             : 193
AND                  : 106
ARRAY                : 58 138 144
ARRAY_TYPE           : 164
ARROW                : 171 208 209
ARROWMAP             : 147 203
AS                   : 129
BOOL                 : 56
BOOL_TYPE            : 163
BREAK                : 130 131 148 149
CASE                 : 130 131 132 133 134
CATCH                : 168
CLASS                : 176 177 178 187 188 189 190
CLOSETAG             : 1
COLON                : 122 130 132 148 150
COMMA                : 74 142 146 154 192
CONCATENATEEQUAL     : 
CONST                : 207
DEFAULT              : 148 149 150 151 152
DIVIDE               : 63
DO                   : 120
DOT                  : 201 210
DOUBLEMINUS          : 79 117
DOUBLEPLUS           : 78 116
ECHO                 : 67
ELSE                 : 88
ELSEIF               : 89
EMPTY                : 175
ENDSWITCH            : 122
EQ                   : 98
EQUALS               : 31 34 45 116 117 136 137 138 143 144 157 158 203 207
EXCEPTION            : 168 204
EXTENDS              : 177 188 190
FGETS                : 45
FINAL                : 198
FINALLY              : 167
FLOAT                : 50 54
FLOAT_TYPE           : 161
FN                   : 203
FOR                  : 115
FOREACH              : 129
FUNCTION             : 172 173 183
GEQ                  : 105
GT                   : 103
ID                   : 27 28 29 171 172 173 174 176 177 177 178 183 185 186 187 188 188 189 190 190 191 192 199 202 206 207 208 209
IF                   : 86 87
IMPLEMENTS           : 187 188 189 190
INCLUDE              : 200 201
INSTANCEOF           : 206
INT                  : 49 52 116 116 117 117 211 212
INTERFACE            : 199
INT_TYPE             : 160
LBRACE               : 86 88 89 115 118 119 120 121 129 166 167 167 168 172 173 176 177 178 183 187 188 189 190 199
LBRACKET             : 137 140 143
LEQ                  : 104
LOGICAL_AND          : 107
LOGICAL_OR           : 109
LPAREN               : 27 28 29 30 38 40 45 48 69 70 86 87 89 93 97 115 118 119 120 121 122 129 138 144 168 171 172 173 174 175 183 185 186 203 204 209 213
LT                   : 102
MINUS                : 61
MINUSEQUAL           : 211
MODULO               : 64
NAMESPACE            : 202
NEQ                  : 99
NEW                  : 185 186 204
NOT                  : 96
NULL                 : 57
OBJECT_TYPE          : 
OPENTAG              : 1
OR                   : 108
PLUS                 : 60
PLUSEQUAL            : 212
POTENCIA             : 65
PRINT                : 68
PRIVATE              : 194
PROTECTED            : 195
PUBLIC               : 196
RBRACE               : 86 88 89 115 118 119 120 121 129 166 167 167 168 172 173 176 177 178 183 187 188 189 190 199
RBRACKET             : 137 140 143
RETURN               : 25 26
RPAREN               : 27 28 29 30 38 40 45 48 69 70 86 87 89 93 97 115 118 119 120 121 122 129 138 144 168 171 172 173 174 175 183 185 186 203 204 209 213
SEMICOLON            : 25 26 28 29 31 32 33 34 45 67 68 78 79 87 116 116 117 117 120 122 130 131 131 133 136 137 138 143 144 148 149 149 151 171 182 200 201 202 203 204 205 207 208 209
STATIC               : 197
STDIN                : 45
STRICTEQ             : 100
STRICTNEQ            : 101
STRING               : 55 200 201 201 210 213
STRING_TYPE          : 162
STRLEN               : 213
SWITCH               : 121 122
THIS                 : 208 209
THROW                : 204 205
TIMES                : 62
TRY                  : 166 167
VARIABLE             : 31 32 33 34 45 51 53 78 79 116 116 116 117 117 117 129 129 136 137 138 143 144 156 157 158 168 171 182 203 206
VOID                 : 165
WHILE                : 118 119 120
error                : 

Nonterminals, with rules where they appear

alterVar             : 24
anonymousFunction    : 18
argumento            : 153 154
argumentos           : 28 30 154 171 172 173 174 175 183 185
array                : 135
arrayAnidado         : 137 142
arrays               : 136 141 142
asignacion           : 4
asignacion_fgets     : 5
body                 : 86 87 88 89 115 118 120 129 130 131 132 148 149 150 151 166 167 167 168 172 173 183
case                 : 127 128
caseLists            : 121 122
cases                : 123 124 128
catch                : 169 170
catchs               : 166 167 170
classBody            : 176 177 178 181 187 188 189 190
classDeclarate       : 13
classInterface       : 179
classMember          : 180 181
comparacion          : 6 37 38 203
concatenate          : 23 42
condition            : 91 92 96 118 119 120
conditions           : 86 87 89 92 93 97
constdeclaration     : 21
controlStructure     : 76
data                 : 173 178 189 190
dataStructure        : 77
default              : 124 125
dowhile              : 83
else_blocks          : 86 89
empty                : 72 90 111 126 159
estructurasPrograma  : 8
expresion            : 25 31 36 36 40
for                  : 81
forStatement         : 114
forcondition         : 115
foreach              : 85
funci                : 
funcionDeclaration   : 10
funcion_strlen       : 34
if                   : 80
impInterface         : 187 188 189 190 192
impresion            : 7
imprimir             : 67 68
includes             : 16
inicio               : 0
instance             : 20
interface            : 14
llamadaFuncion       : 12 41 59
map                  : 139
mapArrow             : 145 146
maps                 : 143 144 146
minuse               : 32 43
namespace            : 17
objectInstantiation  : 184
objeto               : 15
opLogic              : 36 92
opSymbol             : 66 95 116 117
operaArit            : 39 47 47 48
operador             : 47
pluse                : 33 44
programa             : 1 3
repiteValores        : 69 71 74 138 140 204
returnStatement      : 11
sentencia            : 2 3 112 113
sentenciaList        : 110 113 199
switch               : 84
thisdeclaration      : 22
throw                : 19
try                  : 9
type                 : 156 158 182 183
valor                : 35 73 74 94 95 95 121 122 130 131 132 133 134 147 147 155 157 158 205 207 210
valornumerico        : 46 66 66
while                : 82

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OPENTAG programa CLOSETAG

    OPENTAG         shift and go to state 2

    inicio                         shift and go to state 1

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OPENTAG . programa CLOSETAG
    (2) programa -> . sentencia
    (3) programa -> . sentencia programa
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    programa                       shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 3

    (1) inicio -> OPENTAG programa . CLOSETAG

    CLOSETAG        shift and go to state 74


state 4

    (2) programa -> sentencia .
    (3) programa -> sentencia . programa
    (2) programa -> . sentencia
    (3) programa -> . sentencia programa
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    CLOSETAG        reduce using rule 2 (programa -> sentencia .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    sentencia                      shift and go to state 4
    programa                       shift and go to state 75
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 5

    (4) sentencia -> asignacion .

    VARIABLE        reduce using rule 4 (sentencia -> asignacion .)
    ECHO            reduce using rule 4 (sentencia -> asignacion .)
    PRINT           reduce using rule 4 (sentencia -> asignacion .)
    TRY             reduce using rule 4 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 4 (sentencia -> asignacion .)
    RETURN          reduce using rule 4 (sentencia -> asignacion .)
    ID              reduce using rule 4 (sentencia -> asignacion .)
    EMPTY           reduce using rule 4 (sentencia -> asignacion .)
    CLASS           reduce using rule 4 (sentencia -> asignacion .)
    INTERFACE       reduce using rule 4 (sentencia -> asignacion .)
    INCLUDE         reduce using rule 4 (sentencia -> asignacion .)
    NAMESPACE       reduce using rule 4 (sentencia -> asignacion .)
    THROW           reduce using rule 4 (sentencia -> asignacion .)
    CONST           reduce using rule 4 (sentencia -> asignacion .)
    THIS            reduce using rule 4 (sentencia -> asignacion .)
    INT             reduce using rule 4 (sentencia -> asignacion .)
    FLOAT           reduce using rule 4 (sentencia -> asignacion .)
    ABSTRACT        reduce using rule 4 (sentencia -> asignacion .)
    PRIVATE         reduce using rule 4 (sentencia -> asignacion .)
    PROTECTED       reduce using rule 4 (sentencia -> asignacion .)
    PUBLIC          reduce using rule 4 (sentencia -> asignacion .)
    STATIC          reduce using rule 4 (sentencia -> asignacion .)
    FINAL           reduce using rule 4 (sentencia -> asignacion .)
    STRING          reduce using rule 4 (sentencia -> asignacion .)
    BOOL            reduce using rule 4 (sentencia -> asignacion .)
    NULL            reduce using rule 4 (sentencia -> asignacion .)
    ARRAY           reduce using rule 4 (sentencia -> asignacion .)
    IF              reduce using rule 4 (sentencia -> asignacion .)
    WHILE           reduce using rule 4 (sentencia -> asignacion .)
    DO              reduce using rule 4 (sentencia -> asignacion .)
    SWITCH          reduce using rule 4 (sentencia -> asignacion .)
    FOREACH         reduce using rule 4 (sentencia -> asignacion .)
    FOR             reduce using rule 4 (sentencia -> asignacion .)
    CLOSETAG        reduce using rule 4 (sentencia -> asignacion .)
    RBRACE          reduce using rule 4 (sentencia -> asignacion .)
    SEMICOLON       reduce using rule 4 (sentencia -> asignacion .)
    BREAK           reduce using rule 4 (sentencia -> asignacion .)
    ENDSWITCH       reduce using rule 4 (sentencia -> asignacion .)
    CASE            reduce using rule 4 (sentencia -> asignacion .)
    DEFAULT         reduce using rule 4 (sentencia -> asignacion .)


state 6

    (5) sentencia -> asignacion_fgets .

    VARIABLE        reduce using rule 5 (sentencia -> asignacion_fgets .)
    ECHO            reduce using rule 5 (sentencia -> asignacion_fgets .)
    PRINT           reduce using rule 5 (sentencia -> asignacion_fgets .)
    TRY             reduce using rule 5 (sentencia -> asignacion_fgets .)
    FUNCTION        reduce using rule 5 (sentencia -> asignacion_fgets .)
    RETURN          reduce using rule 5 (sentencia -> asignacion_fgets .)
    ID              reduce using rule 5 (sentencia -> asignacion_fgets .)
    EMPTY           reduce using rule 5 (sentencia -> asignacion_fgets .)
    CLASS           reduce using rule 5 (sentencia -> asignacion_fgets .)
    INTERFACE       reduce using rule 5 (sentencia -> asignacion_fgets .)
    INCLUDE         reduce using rule 5 (sentencia -> asignacion_fgets .)
    NAMESPACE       reduce using rule 5 (sentencia -> asignacion_fgets .)
    THROW           reduce using rule 5 (sentencia -> asignacion_fgets .)
    CONST           reduce using rule 5 (sentencia -> asignacion_fgets .)
    THIS            reduce using rule 5 (sentencia -> asignacion_fgets .)
    INT             reduce using rule 5 (sentencia -> asignacion_fgets .)
    FLOAT           reduce using rule 5 (sentencia -> asignacion_fgets .)
    ABSTRACT        reduce using rule 5 (sentencia -> asignacion_fgets .)
    PRIVATE         reduce using rule 5 (sentencia -> asignacion_fgets .)
    PROTECTED       reduce using rule 5 (sentencia -> asignacion_fgets .)
    PUBLIC          reduce using rule 5 (sentencia -> asignacion_fgets .)
    STATIC          reduce using rule 5 (sentencia -> asignacion_fgets .)
    FINAL           reduce using rule 5 (sentencia -> asignacion_fgets .)
    STRING          reduce using rule 5 (sentencia -> asignacion_fgets .)
    BOOL            reduce using rule 5 (sentencia -> asignacion_fgets .)
    NULL            reduce using rule 5 (sentencia -> asignacion_fgets .)
    ARRAY           reduce using rule 5 (sentencia -> asignacion_fgets .)
    IF              reduce using rule 5 (sentencia -> asignacion_fgets .)
    WHILE           reduce using rule 5 (sentencia -> asignacion_fgets .)
    DO              reduce using rule 5 (sentencia -> asignacion_fgets .)
    SWITCH          reduce using rule 5 (sentencia -> asignacion_fgets .)
    FOREACH         reduce using rule 5 (sentencia -> asignacion_fgets .)
    FOR             reduce using rule 5 (sentencia -> asignacion_fgets .)
    CLOSETAG        reduce using rule 5 (sentencia -> asignacion_fgets .)
    RBRACE          reduce using rule 5 (sentencia -> asignacion_fgets .)
    SEMICOLON       reduce using rule 5 (sentencia -> asignacion_fgets .)
    BREAK           reduce using rule 5 (sentencia -> asignacion_fgets .)
    ENDSWITCH       reduce using rule 5 (sentencia -> asignacion_fgets .)
    CASE            reduce using rule 5 (sentencia -> asignacion_fgets .)
    DEFAULT         reduce using rule 5 (sentencia -> asignacion_fgets .)


state 7

    (6) sentencia -> comparacion .

    VARIABLE        reduce using rule 6 (sentencia -> comparacion .)
    ECHO            reduce using rule 6 (sentencia -> comparacion .)
    PRINT           reduce using rule 6 (sentencia -> comparacion .)
    TRY             reduce using rule 6 (sentencia -> comparacion .)
    FUNCTION        reduce using rule 6 (sentencia -> comparacion .)
    RETURN          reduce using rule 6 (sentencia -> comparacion .)
    ID              reduce using rule 6 (sentencia -> comparacion .)
    EMPTY           reduce using rule 6 (sentencia -> comparacion .)
    CLASS           reduce using rule 6 (sentencia -> comparacion .)
    INTERFACE       reduce using rule 6 (sentencia -> comparacion .)
    INCLUDE         reduce using rule 6 (sentencia -> comparacion .)
    NAMESPACE       reduce using rule 6 (sentencia -> comparacion .)
    THROW           reduce using rule 6 (sentencia -> comparacion .)
    CONST           reduce using rule 6 (sentencia -> comparacion .)
    THIS            reduce using rule 6 (sentencia -> comparacion .)
    INT             reduce using rule 6 (sentencia -> comparacion .)
    FLOAT           reduce using rule 6 (sentencia -> comparacion .)
    ABSTRACT        reduce using rule 6 (sentencia -> comparacion .)
    PRIVATE         reduce using rule 6 (sentencia -> comparacion .)
    PROTECTED       reduce using rule 6 (sentencia -> comparacion .)
    PUBLIC          reduce using rule 6 (sentencia -> comparacion .)
    STATIC          reduce using rule 6 (sentencia -> comparacion .)
    FINAL           reduce using rule 6 (sentencia -> comparacion .)
    STRING          reduce using rule 6 (sentencia -> comparacion .)
    BOOL            reduce using rule 6 (sentencia -> comparacion .)
    NULL            reduce using rule 6 (sentencia -> comparacion .)
    ARRAY           reduce using rule 6 (sentencia -> comparacion .)
    IF              reduce using rule 6 (sentencia -> comparacion .)
    WHILE           reduce using rule 6 (sentencia -> comparacion .)
    DO              reduce using rule 6 (sentencia -> comparacion .)
    SWITCH          reduce using rule 6 (sentencia -> comparacion .)
    FOREACH         reduce using rule 6 (sentencia -> comparacion .)
    FOR             reduce using rule 6 (sentencia -> comparacion .)
    CLOSETAG        reduce using rule 6 (sentencia -> comparacion .)
    RBRACE          reduce using rule 6 (sentencia -> comparacion .)
    SEMICOLON       reduce using rule 6 (sentencia -> comparacion .)
    BREAK           reduce using rule 6 (sentencia -> comparacion .)
    ENDSWITCH       reduce using rule 6 (sentencia -> comparacion .)
    CASE            reduce using rule 6 (sentencia -> comparacion .)
    DEFAULT         reduce using rule 6 (sentencia -> comparacion .)


state 8

    (7) sentencia -> impresion .

    VARIABLE        reduce using rule 7 (sentencia -> impresion .)
    ECHO            reduce using rule 7 (sentencia -> impresion .)
    PRINT           reduce using rule 7 (sentencia -> impresion .)
    TRY             reduce using rule 7 (sentencia -> impresion .)
    FUNCTION        reduce using rule 7 (sentencia -> impresion .)
    RETURN          reduce using rule 7 (sentencia -> impresion .)
    ID              reduce using rule 7 (sentencia -> impresion .)
    EMPTY           reduce using rule 7 (sentencia -> impresion .)
    CLASS           reduce using rule 7 (sentencia -> impresion .)
    INTERFACE       reduce using rule 7 (sentencia -> impresion .)
    INCLUDE         reduce using rule 7 (sentencia -> impresion .)
    NAMESPACE       reduce using rule 7 (sentencia -> impresion .)
    THROW           reduce using rule 7 (sentencia -> impresion .)
    CONST           reduce using rule 7 (sentencia -> impresion .)
    THIS            reduce using rule 7 (sentencia -> impresion .)
    INT             reduce using rule 7 (sentencia -> impresion .)
    FLOAT           reduce using rule 7 (sentencia -> impresion .)
    ABSTRACT        reduce using rule 7 (sentencia -> impresion .)
    PRIVATE         reduce using rule 7 (sentencia -> impresion .)
    PROTECTED       reduce using rule 7 (sentencia -> impresion .)
    PUBLIC          reduce using rule 7 (sentencia -> impresion .)
    STATIC          reduce using rule 7 (sentencia -> impresion .)
    FINAL           reduce using rule 7 (sentencia -> impresion .)
    STRING          reduce using rule 7 (sentencia -> impresion .)
    BOOL            reduce using rule 7 (sentencia -> impresion .)
    NULL            reduce using rule 7 (sentencia -> impresion .)
    ARRAY           reduce using rule 7 (sentencia -> impresion .)
    IF              reduce using rule 7 (sentencia -> impresion .)
    WHILE           reduce using rule 7 (sentencia -> impresion .)
    DO              reduce using rule 7 (sentencia -> impresion .)
    SWITCH          reduce using rule 7 (sentencia -> impresion .)
    FOREACH         reduce using rule 7 (sentencia -> impresion .)
    FOR             reduce using rule 7 (sentencia -> impresion .)
    CLOSETAG        reduce using rule 7 (sentencia -> impresion .)
    RBRACE          reduce using rule 7 (sentencia -> impresion .)
    SEMICOLON       reduce using rule 7 (sentencia -> impresion .)
    BREAK           reduce using rule 7 (sentencia -> impresion .)
    ENDSWITCH       reduce using rule 7 (sentencia -> impresion .)
    CASE            reduce using rule 7 (sentencia -> impresion .)
    DEFAULT         reduce using rule 7 (sentencia -> impresion .)


state 9

    (8) sentencia -> estructurasPrograma .

    VARIABLE        reduce using rule 8 (sentencia -> estructurasPrograma .)
    ECHO            reduce using rule 8 (sentencia -> estructurasPrograma .)
    PRINT           reduce using rule 8 (sentencia -> estructurasPrograma .)
    TRY             reduce using rule 8 (sentencia -> estructurasPrograma .)
    FUNCTION        reduce using rule 8 (sentencia -> estructurasPrograma .)
    RETURN          reduce using rule 8 (sentencia -> estructurasPrograma .)
    ID              reduce using rule 8 (sentencia -> estructurasPrograma .)
    EMPTY           reduce using rule 8 (sentencia -> estructurasPrograma .)
    CLASS           reduce using rule 8 (sentencia -> estructurasPrograma .)
    INTERFACE       reduce using rule 8 (sentencia -> estructurasPrograma .)
    INCLUDE         reduce using rule 8 (sentencia -> estructurasPrograma .)
    NAMESPACE       reduce using rule 8 (sentencia -> estructurasPrograma .)
    THROW           reduce using rule 8 (sentencia -> estructurasPrograma .)
    CONST           reduce using rule 8 (sentencia -> estructurasPrograma .)
    THIS            reduce using rule 8 (sentencia -> estructurasPrograma .)
    INT             reduce using rule 8 (sentencia -> estructurasPrograma .)
    FLOAT           reduce using rule 8 (sentencia -> estructurasPrograma .)
    ABSTRACT        reduce using rule 8 (sentencia -> estructurasPrograma .)
    PRIVATE         reduce using rule 8 (sentencia -> estructurasPrograma .)
    PROTECTED       reduce using rule 8 (sentencia -> estructurasPrograma .)
    PUBLIC          reduce using rule 8 (sentencia -> estructurasPrograma .)
    STATIC          reduce using rule 8 (sentencia -> estructurasPrograma .)
    FINAL           reduce using rule 8 (sentencia -> estructurasPrograma .)
    STRING          reduce using rule 8 (sentencia -> estructurasPrograma .)
    BOOL            reduce using rule 8 (sentencia -> estructurasPrograma .)
    NULL            reduce using rule 8 (sentencia -> estructurasPrograma .)
    ARRAY           reduce using rule 8 (sentencia -> estructurasPrograma .)
    IF              reduce using rule 8 (sentencia -> estructurasPrograma .)
    WHILE           reduce using rule 8 (sentencia -> estructurasPrograma .)
    DO              reduce using rule 8 (sentencia -> estructurasPrograma .)
    SWITCH          reduce using rule 8 (sentencia -> estructurasPrograma .)
    FOREACH         reduce using rule 8 (sentencia -> estructurasPrograma .)
    FOR             reduce using rule 8 (sentencia -> estructurasPrograma .)
    CLOSETAG        reduce using rule 8 (sentencia -> estructurasPrograma .)
    RBRACE          reduce using rule 8 (sentencia -> estructurasPrograma .)
    SEMICOLON       reduce using rule 8 (sentencia -> estructurasPrograma .)
    BREAK           reduce using rule 8 (sentencia -> estructurasPrograma .)
    ENDSWITCH       reduce using rule 8 (sentencia -> estructurasPrograma .)
    CASE            reduce using rule 8 (sentencia -> estructurasPrograma .)
    DEFAULT         reduce using rule 8 (sentencia -> estructurasPrograma .)


state 10

    (9) sentencia -> try .

    VARIABLE        reduce using rule 9 (sentencia -> try .)
    ECHO            reduce using rule 9 (sentencia -> try .)
    PRINT           reduce using rule 9 (sentencia -> try .)
    TRY             reduce using rule 9 (sentencia -> try .)
    FUNCTION        reduce using rule 9 (sentencia -> try .)
    RETURN          reduce using rule 9 (sentencia -> try .)
    ID              reduce using rule 9 (sentencia -> try .)
    EMPTY           reduce using rule 9 (sentencia -> try .)
    CLASS           reduce using rule 9 (sentencia -> try .)
    INTERFACE       reduce using rule 9 (sentencia -> try .)
    INCLUDE         reduce using rule 9 (sentencia -> try .)
    NAMESPACE       reduce using rule 9 (sentencia -> try .)
    THROW           reduce using rule 9 (sentencia -> try .)
    CONST           reduce using rule 9 (sentencia -> try .)
    THIS            reduce using rule 9 (sentencia -> try .)
    INT             reduce using rule 9 (sentencia -> try .)
    FLOAT           reduce using rule 9 (sentencia -> try .)
    ABSTRACT        reduce using rule 9 (sentencia -> try .)
    PRIVATE         reduce using rule 9 (sentencia -> try .)
    PROTECTED       reduce using rule 9 (sentencia -> try .)
    PUBLIC          reduce using rule 9 (sentencia -> try .)
    STATIC          reduce using rule 9 (sentencia -> try .)
    FINAL           reduce using rule 9 (sentencia -> try .)
    STRING          reduce using rule 9 (sentencia -> try .)
    BOOL            reduce using rule 9 (sentencia -> try .)
    NULL            reduce using rule 9 (sentencia -> try .)
    ARRAY           reduce using rule 9 (sentencia -> try .)
    IF              reduce using rule 9 (sentencia -> try .)
    WHILE           reduce using rule 9 (sentencia -> try .)
    DO              reduce using rule 9 (sentencia -> try .)
    SWITCH          reduce using rule 9 (sentencia -> try .)
    FOREACH         reduce using rule 9 (sentencia -> try .)
    FOR             reduce using rule 9 (sentencia -> try .)
    CLOSETAG        reduce using rule 9 (sentencia -> try .)
    RBRACE          reduce using rule 9 (sentencia -> try .)
    SEMICOLON       reduce using rule 9 (sentencia -> try .)
    BREAK           reduce using rule 9 (sentencia -> try .)
    ENDSWITCH       reduce using rule 9 (sentencia -> try .)
    CASE            reduce using rule 9 (sentencia -> try .)
    DEFAULT         reduce using rule 9 (sentencia -> try .)


state 11

    (10) sentencia -> funcionDeclaration .

    VARIABLE        reduce using rule 10 (sentencia -> funcionDeclaration .)
    ECHO            reduce using rule 10 (sentencia -> funcionDeclaration .)
    PRINT           reduce using rule 10 (sentencia -> funcionDeclaration .)
    TRY             reduce using rule 10 (sentencia -> funcionDeclaration .)
    FUNCTION        reduce using rule 10 (sentencia -> funcionDeclaration .)
    RETURN          reduce using rule 10 (sentencia -> funcionDeclaration .)
    ID              reduce using rule 10 (sentencia -> funcionDeclaration .)
    EMPTY           reduce using rule 10 (sentencia -> funcionDeclaration .)
    CLASS           reduce using rule 10 (sentencia -> funcionDeclaration .)
    INTERFACE       reduce using rule 10 (sentencia -> funcionDeclaration .)
    INCLUDE         reduce using rule 10 (sentencia -> funcionDeclaration .)
    NAMESPACE       reduce using rule 10 (sentencia -> funcionDeclaration .)
    THROW           reduce using rule 10 (sentencia -> funcionDeclaration .)
    CONST           reduce using rule 10 (sentencia -> funcionDeclaration .)
    THIS            reduce using rule 10 (sentencia -> funcionDeclaration .)
    INT             reduce using rule 10 (sentencia -> funcionDeclaration .)
    FLOAT           reduce using rule 10 (sentencia -> funcionDeclaration .)
    ABSTRACT        reduce using rule 10 (sentencia -> funcionDeclaration .)
    PRIVATE         reduce using rule 10 (sentencia -> funcionDeclaration .)
    PROTECTED       reduce using rule 10 (sentencia -> funcionDeclaration .)
    PUBLIC          reduce using rule 10 (sentencia -> funcionDeclaration .)
    STATIC          reduce using rule 10 (sentencia -> funcionDeclaration .)
    FINAL           reduce using rule 10 (sentencia -> funcionDeclaration .)
    STRING          reduce using rule 10 (sentencia -> funcionDeclaration .)
    BOOL            reduce using rule 10 (sentencia -> funcionDeclaration .)
    NULL            reduce using rule 10 (sentencia -> funcionDeclaration .)
    ARRAY           reduce using rule 10 (sentencia -> funcionDeclaration .)
    IF              reduce using rule 10 (sentencia -> funcionDeclaration .)
    WHILE           reduce using rule 10 (sentencia -> funcionDeclaration .)
    DO              reduce using rule 10 (sentencia -> funcionDeclaration .)
    SWITCH          reduce using rule 10 (sentencia -> funcionDeclaration .)
    FOREACH         reduce using rule 10 (sentencia -> funcionDeclaration .)
    FOR             reduce using rule 10 (sentencia -> funcionDeclaration .)
    CLOSETAG        reduce using rule 10 (sentencia -> funcionDeclaration .)
    RBRACE          reduce using rule 10 (sentencia -> funcionDeclaration .)
    SEMICOLON       reduce using rule 10 (sentencia -> funcionDeclaration .)
    BREAK           reduce using rule 10 (sentencia -> funcionDeclaration .)
    ENDSWITCH       reduce using rule 10 (sentencia -> funcionDeclaration .)
    CASE            reduce using rule 10 (sentencia -> funcionDeclaration .)
    DEFAULT         reduce using rule 10 (sentencia -> funcionDeclaration .)


state 12

    (11) sentencia -> returnStatement .

    VARIABLE        reduce using rule 11 (sentencia -> returnStatement .)
    ECHO            reduce using rule 11 (sentencia -> returnStatement .)
    PRINT           reduce using rule 11 (sentencia -> returnStatement .)
    TRY             reduce using rule 11 (sentencia -> returnStatement .)
    FUNCTION        reduce using rule 11 (sentencia -> returnStatement .)
    RETURN          reduce using rule 11 (sentencia -> returnStatement .)
    ID              reduce using rule 11 (sentencia -> returnStatement .)
    EMPTY           reduce using rule 11 (sentencia -> returnStatement .)
    CLASS           reduce using rule 11 (sentencia -> returnStatement .)
    INTERFACE       reduce using rule 11 (sentencia -> returnStatement .)
    INCLUDE         reduce using rule 11 (sentencia -> returnStatement .)
    NAMESPACE       reduce using rule 11 (sentencia -> returnStatement .)
    THROW           reduce using rule 11 (sentencia -> returnStatement .)
    CONST           reduce using rule 11 (sentencia -> returnStatement .)
    THIS            reduce using rule 11 (sentencia -> returnStatement .)
    INT             reduce using rule 11 (sentencia -> returnStatement .)
    FLOAT           reduce using rule 11 (sentencia -> returnStatement .)
    ABSTRACT        reduce using rule 11 (sentencia -> returnStatement .)
    PRIVATE         reduce using rule 11 (sentencia -> returnStatement .)
    PROTECTED       reduce using rule 11 (sentencia -> returnStatement .)
    PUBLIC          reduce using rule 11 (sentencia -> returnStatement .)
    STATIC          reduce using rule 11 (sentencia -> returnStatement .)
    FINAL           reduce using rule 11 (sentencia -> returnStatement .)
    STRING          reduce using rule 11 (sentencia -> returnStatement .)
    BOOL            reduce using rule 11 (sentencia -> returnStatement .)
    NULL            reduce using rule 11 (sentencia -> returnStatement .)
    ARRAY           reduce using rule 11 (sentencia -> returnStatement .)
    IF              reduce using rule 11 (sentencia -> returnStatement .)
    WHILE           reduce using rule 11 (sentencia -> returnStatement .)
    DO              reduce using rule 11 (sentencia -> returnStatement .)
    SWITCH          reduce using rule 11 (sentencia -> returnStatement .)
    FOREACH         reduce using rule 11 (sentencia -> returnStatement .)
    FOR             reduce using rule 11 (sentencia -> returnStatement .)
    CLOSETAG        reduce using rule 11 (sentencia -> returnStatement .)
    RBRACE          reduce using rule 11 (sentencia -> returnStatement .)
    SEMICOLON       reduce using rule 11 (sentencia -> returnStatement .)
    BREAK           reduce using rule 11 (sentencia -> returnStatement .)
    ENDSWITCH       reduce using rule 11 (sentencia -> returnStatement .)
    CASE            reduce using rule 11 (sentencia -> returnStatement .)
    DEFAULT         reduce using rule 11 (sentencia -> returnStatement .)


state 13

    (12) sentencia -> llamadaFuncion .
    (59) valor -> llamadaFuncion .

    VARIABLE        reduce using rule 12 (sentencia -> llamadaFuncion .)
    ECHO            reduce using rule 12 (sentencia -> llamadaFuncion .)
    PRINT           reduce using rule 12 (sentencia -> llamadaFuncion .)
    TRY             reduce using rule 12 (sentencia -> llamadaFuncion .)
    FUNCTION        reduce using rule 12 (sentencia -> llamadaFuncion .)
    RETURN          reduce using rule 12 (sentencia -> llamadaFuncion .)
    ID              reduce using rule 12 (sentencia -> llamadaFuncion .)
    EMPTY           reduce using rule 12 (sentencia -> llamadaFuncion .)
    CLASS           reduce using rule 12 (sentencia -> llamadaFuncion .)
    INTERFACE       reduce using rule 12 (sentencia -> llamadaFuncion .)
    INCLUDE         reduce using rule 12 (sentencia -> llamadaFuncion .)
    NAMESPACE       reduce using rule 12 (sentencia -> llamadaFuncion .)
    THROW           reduce using rule 12 (sentencia -> llamadaFuncion .)
    CONST           reduce using rule 12 (sentencia -> llamadaFuncion .)
    THIS            reduce using rule 12 (sentencia -> llamadaFuncion .)
    INT             reduce using rule 12 (sentencia -> llamadaFuncion .)
    FLOAT           reduce using rule 12 (sentencia -> llamadaFuncion .)
    ABSTRACT        reduce using rule 12 (sentencia -> llamadaFuncion .)
    PRIVATE         reduce using rule 12 (sentencia -> llamadaFuncion .)
    PROTECTED       reduce using rule 12 (sentencia -> llamadaFuncion .)
    PUBLIC          reduce using rule 12 (sentencia -> llamadaFuncion .)
    STATIC          reduce using rule 12 (sentencia -> llamadaFuncion .)
    FINAL           reduce using rule 12 (sentencia -> llamadaFuncion .)
    STRING          reduce using rule 12 (sentencia -> llamadaFuncion .)
    BOOL            reduce using rule 12 (sentencia -> llamadaFuncion .)
    NULL            reduce using rule 12 (sentencia -> llamadaFuncion .)
    ARRAY           reduce using rule 12 (sentencia -> llamadaFuncion .)
    IF              reduce using rule 12 (sentencia -> llamadaFuncion .)
    WHILE           reduce using rule 12 (sentencia -> llamadaFuncion .)
    DO              reduce using rule 12 (sentencia -> llamadaFuncion .)
    SWITCH          reduce using rule 12 (sentencia -> llamadaFuncion .)
    FOREACH         reduce using rule 12 (sentencia -> llamadaFuncion .)
    FOR             reduce using rule 12 (sentencia -> llamadaFuncion .)
    CLOSETAG        reduce using rule 12 (sentencia -> llamadaFuncion .)
    RBRACE          reduce using rule 12 (sentencia -> llamadaFuncion .)
    SEMICOLON       reduce using rule 12 (sentencia -> llamadaFuncion .)
    BREAK           reduce using rule 12 (sentencia -> llamadaFuncion .)
    ENDSWITCH       reduce using rule 12 (sentencia -> llamadaFuncion .)
    CASE            reduce using rule 12 (sentencia -> llamadaFuncion .)
    DEFAULT         reduce using rule 12 (sentencia -> llamadaFuncion .)
    DOT             reduce using rule 59 (valor -> llamadaFuncion .)


state 14

    (13) sentencia -> classDeclarate .

    VARIABLE        reduce using rule 13 (sentencia -> classDeclarate .)
    ECHO            reduce using rule 13 (sentencia -> classDeclarate .)
    PRINT           reduce using rule 13 (sentencia -> classDeclarate .)
    TRY             reduce using rule 13 (sentencia -> classDeclarate .)
    FUNCTION        reduce using rule 13 (sentencia -> classDeclarate .)
    RETURN          reduce using rule 13 (sentencia -> classDeclarate .)
    ID              reduce using rule 13 (sentencia -> classDeclarate .)
    EMPTY           reduce using rule 13 (sentencia -> classDeclarate .)
    CLASS           reduce using rule 13 (sentencia -> classDeclarate .)
    INTERFACE       reduce using rule 13 (sentencia -> classDeclarate .)
    INCLUDE         reduce using rule 13 (sentencia -> classDeclarate .)
    NAMESPACE       reduce using rule 13 (sentencia -> classDeclarate .)
    THROW           reduce using rule 13 (sentencia -> classDeclarate .)
    CONST           reduce using rule 13 (sentencia -> classDeclarate .)
    THIS            reduce using rule 13 (sentencia -> classDeclarate .)
    INT             reduce using rule 13 (sentencia -> classDeclarate .)
    FLOAT           reduce using rule 13 (sentencia -> classDeclarate .)
    ABSTRACT        reduce using rule 13 (sentencia -> classDeclarate .)
    PRIVATE         reduce using rule 13 (sentencia -> classDeclarate .)
    PROTECTED       reduce using rule 13 (sentencia -> classDeclarate .)
    PUBLIC          reduce using rule 13 (sentencia -> classDeclarate .)
    STATIC          reduce using rule 13 (sentencia -> classDeclarate .)
    FINAL           reduce using rule 13 (sentencia -> classDeclarate .)
    STRING          reduce using rule 13 (sentencia -> classDeclarate .)
    BOOL            reduce using rule 13 (sentencia -> classDeclarate .)
    NULL            reduce using rule 13 (sentencia -> classDeclarate .)
    ARRAY           reduce using rule 13 (sentencia -> classDeclarate .)
    IF              reduce using rule 13 (sentencia -> classDeclarate .)
    WHILE           reduce using rule 13 (sentencia -> classDeclarate .)
    DO              reduce using rule 13 (sentencia -> classDeclarate .)
    SWITCH          reduce using rule 13 (sentencia -> classDeclarate .)
    FOREACH         reduce using rule 13 (sentencia -> classDeclarate .)
    FOR             reduce using rule 13 (sentencia -> classDeclarate .)
    CLOSETAG        reduce using rule 13 (sentencia -> classDeclarate .)
    RBRACE          reduce using rule 13 (sentencia -> classDeclarate .)
    SEMICOLON       reduce using rule 13 (sentencia -> classDeclarate .)
    BREAK           reduce using rule 13 (sentencia -> classDeclarate .)
    ENDSWITCH       reduce using rule 13 (sentencia -> classDeclarate .)
    CASE            reduce using rule 13 (sentencia -> classDeclarate .)
    DEFAULT         reduce using rule 13 (sentencia -> classDeclarate .)


state 15

    (14) sentencia -> interface .

    VARIABLE        reduce using rule 14 (sentencia -> interface .)
    ECHO            reduce using rule 14 (sentencia -> interface .)
    PRINT           reduce using rule 14 (sentencia -> interface .)
    TRY             reduce using rule 14 (sentencia -> interface .)
    FUNCTION        reduce using rule 14 (sentencia -> interface .)
    RETURN          reduce using rule 14 (sentencia -> interface .)
    ID              reduce using rule 14 (sentencia -> interface .)
    EMPTY           reduce using rule 14 (sentencia -> interface .)
    CLASS           reduce using rule 14 (sentencia -> interface .)
    INTERFACE       reduce using rule 14 (sentencia -> interface .)
    INCLUDE         reduce using rule 14 (sentencia -> interface .)
    NAMESPACE       reduce using rule 14 (sentencia -> interface .)
    THROW           reduce using rule 14 (sentencia -> interface .)
    CONST           reduce using rule 14 (sentencia -> interface .)
    THIS            reduce using rule 14 (sentencia -> interface .)
    INT             reduce using rule 14 (sentencia -> interface .)
    FLOAT           reduce using rule 14 (sentencia -> interface .)
    ABSTRACT        reduce using rule 14 (sentencia -> interface .)
    PRIVATE         reduce using rule 14 (sentencia -> interface .)
    PROTECTED       reduce using rule 14 (sentencia -> interface .)
    PUBLIC          reduce using rule 14 (sentencia -> interface .)
    STATIC          reduce using rule 14 (sentencia -> interface .)
    FINAL           reduce using rule 14 (sentencia -> interface .)
    STRING          reduce using rule 14 (sentencia -> interface .)
    BOOL            reduce using rule 14 (sentencia -> interface .)
    NULL            reduce using rule 14 (sentencia -> interface .)
    ARRAY           reduce using rule 14 (sentencia -> interface .)
    IF              reduce using rule 14 (sentencia -> interface .)
    WHILE           reduce using rule 14 (sentencia -> interface .)
    DO              reduce using rule 14 (sentencia -> interface .)
    SWITCH          reduce using rule 14 (sentencia -> interface .)
    FOREACH         reduce using rule 14 (sentencia -> interface .)
    FOR             reduce using rule 14 (sentencia -> interface .)
    CLOSETAG        reduce using rule 14 (sentencia -> interface .)
    RBRACE          reduce using rule 14 (sentencia -> interface .)
    SEMICOLON       reduce using rule 14 (sentencia -> interface .)
    BREAK           reduce using rule 14 (sentencia -> interface .)
    ENDSWITCH       reduce using rule 14 (sentencia -> interface .)
    CASE            reduce using rule 14 (sentencia -> interface .)
    DEFAULT         reduce using rule 14 (sentencia -> interface .)


state 16

    (15) sentencia -> objeto .

    VARIABLE        reduce using rule 15 (sentencia -> objeto .)
    ECHO            reduce using rule 15 (sentencia -> objeto .)
    PRINT           reduce using rule 15 (sentencia -> objeto .)
    TRY             reduce using rule 15 (sentencia -> objeto .)
    FUNCTION        reduce using rule 15 (sentencia -> objeto .)
    RETURN          reduce using rule 15 (sentencia -> objeto .)
    ID              reduce using rule 15 (sentencia -> objeto .)
    EMPTY           reduce using rule 15 (sentencia -> objeto .)
    CLASS           reduce using rule 15 (sentencia -> objeto .)
    INTERFACE       reduce using rule 15 (sentencia -> objeto .)
    INCLUDE         reduce using rule 15 (sentencia -> objeto .)
    NAMESPACE       reduce using rule 15 (sentencia -> objeto .)
    THROW           reduce using rule 15 (sentencia -> objeto .)
    CONST           reduce using rule 15 (sentencia -> objeto .)
    THIS            reduce using rule 15 (sentencia -> objeto .)
    INT             reduce using rule 15 (sentencia -> objeto .)
    FLOAT           reduce using rule 15 (sentencia -> objeto .)
    ABSTRACT        reduce using rule 15 (sentencia -> objeto .)
    PRIVATE         reduce using rule 15 (sentencia -> objeto .)
    PROTECTED       reduce using rule 15 (sentencia -> objeto .)
    PUBLIC          reduce using rule 15 (sentencia -> objeto .)
    STATIC          reduce using rule 15 (sentencia -> objeto .)
    FINAL           reduce using rule 15 (sentencia -> objeto .)
    STRING          reduce using rule 15 (sentencia -> objeto .)
    BOOL            reduce using rule 15 (sentencia -> objeto .)
    NULL            reduce using rule 15 (sentencia -> objeto .)
    ARRAY           reduce using rule 15 (sentencia -> objeto .)
    IF              reduce using rule 15 (sentencia -> objeto .)
    WHILE           reduce using rule 15 (sentencia -> objeto .)
    DO              reduce using rule 15 (sentencia -> objeto .)
    SWITCH          reduce using rule 15 (sentencia -> objeto .)
    FOREACH         reduce using rule 15 (sentencia -> objeto .)
    FOR             reduce using rule 15 (sentencia -> objeto .)
    CLOSETAG        reduce using rule 15 (sentencia -> objeto .)
    RBRACE          reduce using rule 15 (sentencia -> objeto .)
    SEMICOLON       reduce using rule 15 (sentencia -> objeto .)
    BREAK           reduce using rule 15 (sentencia -> objeto .)
    ENDSWITCH       reduce using rule 15 (sentencia -> objeto .)
    CASE            reduce using rule 15 (sentencia -> objeto .)
    DEFAULT         reduce using rule 15 (sentencia -> objeto .)


state 17

    (16) sentencia -> includes .

    VARIABLE        reduce using rule 16 (sentencia -> includes .)
    ECHO            reduce using rule 16 (sentencia -> includes .)
    PRINT           reduce using rule 16 (sentencia -> includes .)
    TRY             reduce using rule 16 (sentencia -> includes .)
    FUNCTION        reduce using rule 16 (sentencia -> includes .)
    RETURN          reduce using rule 16 (sentencia -> includes .)
    ID              reduce using rule 16 (sentencia -> includes .)
    EMPTY           reduce using rule 16 (sentencia -> includes .)
    CLASS           reduce using rule 16 (sentencia -> includes .)
    INTERFACE       reduce using rule 16 (sentencia -> includes .)
    INCLUDE         reduce using rule 16 (sentencia -> includes .)
    NAMESPACE       reduce using rule 16 (sentencia -> includes .)
    THROW           reduce using rule 16 (sentencia -> includes .)
    CONST           reduce using rule 16 (sentencia -> includes .)
    THIS            reduce using rule 16 (sentencia -> includes .)
    INT             reduce using rule 16 (sentencia -> includes .)
    FLOAT           reduce using rule 16 (sentencia -> includes .)
    ABSTRACT        reduce using rule 16 (sentencia -> includes .)
    PRIVATE         reduce using rule 16 (sentencia -> includes .)
    PROTECTED       reduce using rule 16 (sentencia -> includes .)
    PUBLIC          reduce using rule 16 (sentencia -> includes .)
    STATIC          reduce using rule 16 (sentencia -> includes .)
    FINAL           reduce using rule 16 (sentencia -> includes .)
    STRING          reduce using rule 16 (sentencia -> includes .)
    BOOL            reduce using rule 16 (sentencia -> includes .)
    NULL            reduce using rule 16 (sentencia -> includes .)
    ARRAY           reduce using rule 16 (sentencia -> includes .)
    IF              reduce using rule 16 (sentencia -> includes .)
    WHILE           reduce using rule 16 (sentencia -> includes .)
    DO              reduce using rule 16 (sentencia -> includes .)
    SWITCH          reduce using rule 16 (sentencia -> includes .)
    FOREACH         reduce using rule 16 (sentencia -> includes .)
    FOR             reduce using rule 16 (sentencia -> includes .)
    CLOSETAG        reduce using rule 16 (sentencia -> includes .)
    RBRACE          reduce using rule 16 (sentencia -> includes .)
    SEMICOLON       reduce using rule 16 (sentencia -> includes .)
    BREAK           reduce using rule 16 (sentencia -> includes .)
    ENDSWITCH       reduce using rule 16 (sentencia -> includes .)
    CASE            reduce using rule 16 (sentencia -> includes .)
    DEFAULT         reduce using rule 16 (sentencia -> includes .)


state 18

    (17) sentencia -> namespace .

    VARIABLE        reduce using rule 17 (sentencia -> namespace .)
    ECHO            reduce using rule 17 (sentencia -> namespace .)
    PRINT           reduce using rule 17 (sentencia -> namespace .)
    TRY             reduce using rule 17 (sentencia -> namespace .)
    FUNCTION        reduce using rule 17 (sentencia -> namespace .)
    RETURN          reduce using rule 17 (sentencia -> namespace .)
    ID              reduce using rule 17 (sentencia -> namespace .)
    EMPTY           reduce using rule 17 (sentencia -> namespace .)
    CLASS           reduce using rule 17 (sentencia -> namespace .)
    INTERFACE       reduce using rule 17 (sentencia -> namespace .)
    INCLUDE         reduce using rule 17 (sentencia -> namespace .)
    NAMESPACE       reduce using rule 17 (sentencia -> namespace .)
    THROW           reduce using rule 17 (sentencia -> namespace .)
    CONST           reduce using rule 17 (sentencia -> namespace .)
    THIS            reduce using rule 17 (sentencia -> namespace .)
    INT             reduce using rule 17 (sentencia -> namespace .)
    FLOAT           reduce using rule 17 (sentencia -> namespace .)
    ABSTRACT        reduce using rule 17 (sentencia -> namespace .)
    PRIVATE         reduce using rule 17 (sentencia -> namespace .)
    PROTECTED       reduce using rule 17 (sentencia -> namespace .)
    PUBLIC          reduce using rule 17 (sentencia -> namespace .)
    STATIC          reduce using rule 17 (sentencia -> namespace .)
    FINAL           reduce using rule 17 (sentencia -> namespace .)
    STRING          reduce using rule 17 (sentencia -> namespace .)
    BOOL            reduce using rule 17 (sentencia -> namespace .)
    NULL            reduce using rule 17 (sentencia -> namespace .)
    ARRAY           reduce using rule 17 (sentencia -> namespace .)
    IF              reduce using rule 17 (sentencia -> namespace .)
    WHILE           reduce using rule 17 (sentencia -> namespace .)
    DO              reduce using rule 17 (sentencia -> namespace .)
    SWITCH          reduce using rule 17 (sentencia -> namespace .)
    FOREACH         reduce using rule 17 (sentencia -> namespace .)
    FOR             reduce using rule 17 (sentencia -> namespace .)
    CLOSETAG        reduce using rule 17 (sentencia -> namespace .)
    RBRACE          reduce using rule 17 (sentencia -> namespace .)
    SEMICOLON       reduce using rule 17 (sentencia -> namespace .)
    BREAK           reduce using rule 17 (sentencia -> namespace .)
    ENDSWITCH       reduce using rule 17 (sentencia -> namespace .)
    CASE            reduce using rule 17 (sentencia -> namespace .)
    DEFAULT         reduce using rule 17 (sentencia -> namespace .)


state 19

    (18) sentencia -> anonymousFunction .

    VARIABLE        reduce using rule 18 (sentencia -> anonymousFunction .)
    ECHO            reduce using rule 18 (sentencia -> anonymousFunction .)
    PRINT           reduce using rule 18 (sentencia -> anonymousFunction .)
    TRY             reduce using rule 18 (sentencia -> anonymousFunction .)
    FUNCTION        reduce using rule 18 (sentencia -> anonymousFunction .)
    RETURN          reduce using rule 18 (sentencia -> anonymousFunction .)
    ID              reduce using rule 18 (sentencia -> anonymousFunction .)
    EMPTY           reduce using rule 18 (sentencia -> anonymousFunction .)
    CLASS           reduce using rule 18 (sentencia -> anonymousFunction .)
    INTERFACE       reduce using rule 18 (sentencia -> anonymousFunction .)
    INCLUDE         reduce using rule 18 (sentencia -> anonymousFunction .)
    NAMESPACE       reduce using rule 18 (sentencia -> anonymousFunction .)
    THROW           reduce using rule 18 (sentencia -> anonymousFunction .)
    CONST           reduce using rule 18 (sentencia -> anonymousFunction .)
    THIS            reduce using rule 18 (sentencia -> anonymousFunction .)
    INT             reduce using rule 18 (sentencia -> anonymousFunction .)
    FLOAT           reduce using rule 18 (sentencia -> anonymousFunction .)
    ABSTRACT        reduce using rule 18 (sentencia -> anonymousFunction .)
    PRIVATE         reduce using rule 18 (sentencia -> anonymousFunction .)
    PROTECTED       reduce using rule 18 (sentencia -> anonymousFunction .)
    PUBLIC          reduce using rule 18 (sentencia -> anonymousFunction .)
    STATIC          reduce using rule 18 (sentencia -> anonymousFunction .)
    FINAL           reduce using rule 18 (sentencia -> anonymousFunction .)
    STRING          reduce using rule 18 (sentencia -> anonymousFunction .)
    BOOL            reduce using rule 18 (sentencia -> anonymousFunction .)
    NULL            reduce using rule 18 (sentencia -> anonymousFunction .)
    ARRAY           reduce using rule 18 (sentencia -> anonymousFunction .)
    IF              reduce using rule 18 (sentencia -> anonymousFunction .)
    WHILE           reduce using rule 18 (sentencia -> anonymousFunction .)
    DO              reduce using rule 18 (sentencia -> anonymousFunction .)
    SWITCH          reduce using rule 18 (sentencia -> anonymousFunction .)
    FOREACH         reduce using rule 18 (sentencia -> anonymousFunction .)
    FOR             reduce using rule 18 (sentencia -> anonymousFunction .)
    CLOSETAG        reduce using rule 18 (sentencia -> anonymousFunction .)
    RBRACE          reduce using rule 18 (sentencia -> anonymousFunction .)
    SEMICOLON       reduce using rule 18 (sentencia -> anonymousFunction .)
    BREAK           reduce using rule 18 (sentencia -> anonymousFunction .)
    ENDSWITCH       reduce using rule 18 (sentencia -> anonymousFunction .)
    CASE            reduce using rule 18 (sentencia -> anonymousFunction .)
    DEFAULT         reduce using rule 18 (sentencia -> anonymousFunction .)


state 20

    (19) sentencia -> throw .

    VARIABLE        reduce using rule 19 (sentencia -> throw .)
    ECHO            reduce using rule 19 (sentencia -> throw .)
    PRINT           reduce using rule 19 (sentencia -> throw .)
    TRY             reduce using rule 19 (sentencia -> throw .)
    FUNCTION        reduce using rule 19 (sentencia -> throw .)
    RETURN          reduce using rule 19 (sentencia -> throw .)
    ID              reduce using rule 19 (sentencia -> throw .)
    EMPTY           reduce using rule 19 (sentencia -> throw .)
    CLASS           reduce using rule 19 (sentencia -> throw .)
    INTERFACE       reduce using rule 19 (sentencia -> throw .)
    INCLUDE         reduce using rule 19 (sentencia -> throw .)
    NAMESPACE       reduce using rule 19 (sentencia -> throw .)
    THROW           reduce using rule 19 (sentencia -> throw .)
    CONST           reduce using rule 19 (sentencia -> throw .)
    THIS            reduce using rule 19 (sentencia -> throw .)
    INT             reduce using rule 19 (sentencia -> throw .)
    FLOAT           reduce using rule 19 (sentencia -> throw .)
    ABSTRACT        reduce using rule 19 (sentencia -> throw .)
    PRIVATE         reduce using rule 19 (sentencia -> throw .)
    PROTECTED       reduce using rule 19 (sentencia -> throw .)
    PUBLIC          reduce using rule 19 (sentencia -> throw .)
    STATIC          reduce using rule 19 (sentencia -> throw .)
    FINAL           reduce using rule 19 (sentencia -> throw .)
    STRING          reduce using rule 19 (sentencia -> throw .)
    BOOL            reduce using rule 19 (sentencia -> throw .)
    NULL            reduce using rule 19 (sentencia -> throw .)
    ARRAY           reduce using rule 19 (sentencia -> throw .)
    IF              reduce using rule 19 (sentencia -> throw .)
    WHILE           reduce using rule 19 (sentencia -> throw .)
    DO              reduce using rule 19 (sentencia -> throw .)
    SWITCH          reduce using rule 19 (sentencia -> throw .)
    FOREACH         reduce using rule 19 (sentencia -> throw .)
    FOR             reduce using rule 19 (sentencia -> throw .)
    CLOSETAG        reduce using rule 19 (sentencia -> throw .)
    RBRACE          reduce using rule 19 (sentencia -> throw .)
    SEMICOLON       reduce using rule 19 (sentencia -> throw .)
    BREAK           reduce using rule 19 (sentencia -> throw .)
    ENDSWITCH       reduce using rule 19 (sentencia -> throw .)
    CASE            reduce using rule 19 (sentencia -> throw .)
    DEFAULT         reduce using rule 19 (sentencia -> throw .)


state 21

    (20) sentencia -> instance .

    VARIABLE        reduce using rule 20 (sentencia -> instance .)
    ECHO            reduce using rule 20 (sentencia -> instance .)
    PRINT           reduce using rule 20 (sentencia -> instance .)
    TRY             reduce using rule 20 (sentencia -> instance .)
    FUNCTION        reduce using rule 20 (sentencia -> instance .)
    RETURN          reduce using rule 20 (sentencia -> instance .)
    ID              reduce using rule 20 (sentencia -> instance .)
    EMPTY           reduce using rule 20 (sentencia -> instance .)
    CLASS           reduce using rule 20 (sentencia -> instance .)
    INTERFACE       reduce using rule 20 (sentencia -> instance .)
    INCLUDE         reduce using rule 20 (sentencia -> instance .)
    NAMESPACE       reduce using rule 20 (sentencia -> instance .)
    THROW           reduce using rule 20 (sentencia -> instance .)
    CONST           reduce using rule 20 (sentencia -> instance .)
    THIS            reduce using rule 20 (sentencia -> instance .)
    INT             reduce using rule 20 (sentencia -> instance .)
    FLOAT           reduce using rule 20 (sentencia -> instance .)
    ABSTRACT        reduce using rule 20 (sentencia -> instance .)
    PRIVATE         reduce using rule 20 (sentencia -> instance .)
    PROTECTED       reduce using rule 20 (sentencia -> instance .)
    PUBLIC          reduce using rule 20 (sentencia -> instance .)
    STATIC          reduce using rule 20 (sentencia -> instance .)
    FINAL           reduce using rule 20 (sentencia -> instance .)
    STRING          reduce using rule 20 (sentencia -> instance .)
    BOOL            reduce using rule 20 (sentencia -> instance .)
    NULL            reduce using rule 20 (sentencia -> instance .)
    ARRAY           reduce using rule 20 (sentencia -> instance .)
    IF              reduce using rule 20 (sentencia -> instance .)
    WHILE           reduce using rule 20 (sentencia -> instance .)
    DO              reduce using rule 20 (sentencia -> instance .)
    SWITCH          reduce using rule 20 (sentencia -> instance .)
    FOREACH         reduce using rule 20 (sentencia -> instance .)
    FOR             reduce using rule 20 (sentencia -> instance .)
    CLOSETAG        reduce using rule 20 (sentencia -> instance .)
    RBRACE          reduce using rule 20 (sentencia -> instance .)
    SEMICOLON       reduce using rule 20 (sentencia -> instance .)
    BREAK           reduce using rule 20 (sentencia -> instance .)
    ENDSWITCH       reduce using rule 20 (sentencia -> instance .)
    CASE            reduce using rule 20 (sentencia -> instance .)
    DEFAULT         reduce using rule 20 (sentencia -> instance .)


state 22

    (21) sentencia -> constdeclaration .

    VARIABLE        reduce using rule 21 (sentencia -> constdeclaration .)
    ECHO            reduce using rule 21 (sentencia -> constdeclaration .)
    PRINT           reduce using rule 21 (sentencia -> constdeclaration .)
    TRY             reduce using rule 21 (sentencia -> constdeclaration .)
    FUNCTION        reduce using rule 21 (sentencia -> constdeclaration .)
    RETURN          reduce using rule 21 (sentencia -> constdeclaration .)
    ID              reduce using rule 21 (sentencia -> constdeclaration .)
    EMPTY           reduce using rule 21 (sentencia -> constdeclaration .)
    CLASS           reduce using rule 21 (sentencia -> constdeclaration .)
    INTERFACE       reduce using rule 21 (sentencia -> constdeclaration .)
    INCLUDE         reduce using rule 21 (sentencia -> constdeclaration .)
    NAMESPACE       reduce using rule 21 (sentencia -> constdeclaration .)
    THROW           reduce using rule 21 (sentencia -> constdeclaration .)
    CONST           reduce using rule 21 (sentencia -> constdeclaration .)
    THIS            reduce using rule 21 (sentencia -> constdeclaration .)
    INT             reduce using rule 21 (sentencia -> constdeclaration .)
    FLOAT           reduce using rule 21 (sentencia -> constdeclaration .)
    ABSTRACT        reduce using rule 21 (sentencia -> constdeclaration .)
    PRIVATE         reduce using rule 21 (sentencia -> constdeclaration .)
    PROTECTED       reduce using rule 21 (sentencia -> constdeclaration .)
    PUBLIC          reduce using rule 21 (sentencia -> constdeclaration .)
    STATIC          reduce using rule 21 (sentencia -> constdeclaration .)
    FINAL           reduce using rule 21 (sentencia -> constdeclaration .)
    STRING          reduce using rule 21 (sentencia -> constdeclaration .)
    BOOL            reduce using rule 21 (sentencia -> constdeclaration .)
    NULL            reduce using rule 21 (sentencia -> constdeclaration .)
    ARRAY           reduce using rule 21 (sentencia -> constdeclaration .)
    IF              reduce using rule 21 (sentencia -> constdeclaration .)
    WHILE           reduce using rule 21 (sentencia -> constdeclaration .)
    DO              reduce using rule 21 (sentencia -> constdeclaration .)
    SWITCH          reduce using rule 21 (sentencia -> constdeclaration .)
    FOREACH         reduce using rule 21 (sentencia -> constdeclaration .)
    FOR             reduce using rule 21 (sentencia -> constdeclaration .)
    CLOSETAG        reduce using rule 21 (sentencia -> constdeclaration .)
    RBRACE          reduce using rule 21 (sentencia -> constdeclaration .)
    SEMICOLON       reduce using rule 21 (sentencia -> constdeclaration .)
    BREAK           reduce using rule 21 (sentencia -> constdeclaration .)
    ENDSWITCH       reduce using rule 21 (sentencia -> constdeclaration .)
    CASE            reduce using rule 21 (sentencia -> constdeclaration .)
    DEFAULT         reduce using rule 21 (sentencia -> constdeclaration .)


state 23

    (22) sentencia -> thisdeclaration .

    VARIABLE        reduce using rule 22 (sentencia -> thisdeclaration .)
    ECHO            reduce using rule 22 (sentencia -> thisdeclaration .)
    PRINT           reduce using rule 22 (sentencia -> thisdeclaration .)
    TRY             reduce using rule 22 (sentencia -> thisdeclaration .)
    FUNCTION        reduce using rule 22 (sentencia -> thisdeclaration .)
    RETURN          reduce using rule 22 (sentencia -> thisdeclaration .)
    ID              reduce using rule 22 (sentencia -> thisdeclaration .)
    EMPTY           reduce using rule 22 (sentencia -> thisdeclaration .)
    CLASS           reduce using rule 22 (sentencia -> thisdeclaration .)
    INTERFACE       reduce using rule 22 (sentencia -> thisdeclaration .)
    INCLUDE         reduce using rule 22 (sentencia -> thisdeclaration .)
    NAMESPACE       reduce using rule 22 (sentencia -> thisdeclaration .)
    THROW           reduce using rule 22 (sentencia -> thisdeclaration .)
    CONST           reduce using rule 22 (sentencia -> thisdeclaration .)
    THIS            reduce using rule 22 (sentencia -> thisdeclaration .)
    INT             reduce using rule 22 (sentencia -> thisdeclaration .)
    FLOAT           reduce using rule 22 (sentencia -> thisdeclaration .)
    ABSTRACT        reduce using rule 22 (sentencia -> thisdeclaration .)
    PRIVATE         reduce using rule 22 (sentencia -> thisdeclaration .)
    PROTECTED       reduce using rule 22 (sentencia -> thisdeclaration .)
    PUBLIC          reduce using rule 22 (sentencia -> thisdeclaration .)
    STATIC          reduce using rule 22 (sentencia -> thisdeclaration .)
    FINAL           reduce using rule 22 (sentencia -> thisdeclaration .)
    STRING          reduce using rule 22 (sentencia -> thisdeclaration .)
    BOOL            reduce using rule 22 (sentencia -> thisdeclaration .)
    NULL            reduce using rule 22 (sentencia -> thisdeclaration .)
    ARRAY           reduce using rule 22 (sentencia -> thisdeclaration .)
    IF              reduce using rule 22 (sentencia -> thisdeclaration .)
    WHILE           reduce using rule 22 (sentencia -> thisdeclaration .)
    DO              reduce using rule 22 (sentencia -> thisdeclaration .)
    SWITCH          reduce using rule 22 (sentencia -> thisdeclaration .)
    FOREACH         reduce using rule 22 (sentencia -> thisdeclaration .)
    FOR             reduce using rule 22 (sentencia -> thisdeclaration .)
    CLOSETAG        reduce using rule 22 (sentencia -> thisdeclaration .)
    RBRACE          reduce using rule 22 (sentencia -> thisdeclaration .)
    SEMICOLON       reduce using rule 22 (sentencia -> thisdeclaration .)
    BREAK           reduce using rule 22 (sentencia -> thisdeclaration .)
    ENDSWITCH       reduce using rule 22 (sentencia -> thisdeclaration .)
    CASE            reduce using rule 22 (sentencia -> thisdeclaration .)
    DEFAULT         reduce using rule 22 (sentencia -> thisdeclaration .)


state 24

    (23) sentencia -> concatenate .

    VARIABLE        reduce using rule 23 (sentencia -> concatenate .)
    ECHO            reduce using rule 23 (sentencia -> concatenate .)
    PRINT           reduce using rule 23 (sentencia -> concatenate .)
    TRY             reduce using rule 23 (sentencia -> concatenate .)
    FUNCTION        reduce using rule 23 (sentencia -> concatenate .)
    RETURN          reduce using rule 23 (sentencia -> concatenate .)
    ID              reduce using rule 23 (sentencia -> concatenate .)
    EMPTY           reduce using rule 23 (sentencia -> concatenate .)
    CLASS           reduce using rule 23 (sentencia -> concatenate .)
    INTERFACE       reduce using rule 23 (sentencia -> concatenate .)
    INCLUDE         reduce using rule 23 (sentencia -> concatenate .)
    NAMESPACE       reduce using rule 23 (sentencia -> concatenate .)
    THROW           reduce using rule 23 (sentencia -> concatenate .)
    CONST           reduce using rule 23 (sentencia -> concatenate .)
    THIS            reduce using rule 23 (sentencia -> concatenate .)
    INT             reduce using rule 23 (sentencia -> concatenate .)
    FLOAT           reduce using rule 23 (sentencia -> concatenate .)
    ABSTRACT        reduce using rule 23 (sentencia -> concatenate .)
    PRIVATE         reduce using rule 23 (sentencia -> concatenate .)
    PROTECTED       reduce using rule 23 (sentencia -> concatenate .)
    PUBLIC          reduce using rule 23 (sentencia -> concatenate .)
    STATIC          reduce using rule 23 (sentencia -> concatenate .)
    FINAL           reduce using rule 23 (sentencia -> concatenate .)
    STRING          reduce using rule 23 (sentencia -> concatenate .)
    BOOL            reduce using rule 23 (sentencia -> concatenate .)
    NULL            reduce using rule 23 (sentencia -> concatenate .)
    ARRAY           reduce using rule 23 (sentencia -> concatenate .)
    IF              reduce using rule 23 (sentencia -> concatenate .)
    WHILE           reduce using rule 23 (sentencia -> concatenate .)
    DO              reduce using rule 23 (sentencia -> concatenate .)
    SWITCH          reduce using rule 23 (sentencia -> concatenate .)
    FOREACH         reduce using rule 23 (sentencia -> concatenate .)
    FOR             reduce using rule 23 (sentencia -> concatenate .)
    CLOSETAG        reduce using rule 23 (sentencia -> concatenate .)
    RBRACE          reduce using rule 23 (sentencia -> concatenate .)
    SEMICOLON       reduce using rule 23 (sentencia -> concatenate .)
    BREAK           reduce using rule 23 (sentencia -> concatenate .)
    ENDSWITCH       reduce using rule 23 (sentencia -> concatenate .)
    CASE            reduce using rule 23 (sentencia -> concatenate .)
    DEFAULT         reduce using rule 23 (sentencia -> concatenate .)


state 25

    (24) sentencia -> alterVar .

    VARIABLE        reduce using rule 24 (sentencia -> alterVar .)
    ECHO            reduce using rule 24 (sentencia -> alterVar .)
    PRINT           reduce using rule 24 (sentencia -> alterVar .)
    TRY             reduce using rule 24 (sentencia -> alterVar .)
    FUNCTION        reduce using rule 24 (sentencia -> alterVar .)
    RETURN          reduce using rule 24 (sentencia -> alterVar .)
    ID              reduce using rule 24 (sentencia -> alterVar .)
    EMPTY           reduce using rule 24 (sentencia -> alterVar .)
    CLASS           reduce using rule 24 (sentencia -> alterVar .)
    INTERFACE       reduce using rule 24 (sentencia -> alterVar .)
    INCLUDE         reduce using rule 24 (sentencia -> alterVar .)
    NAMESPACE       reduce using rule 24 (sentencia -> alterVar .)
    THROW           reduce using rule 24 (sentencia -> alterVar .)
    CONST           reduce using rule 24 (sentencia -> alterVar .)
    THIS            reduce using rule 24 (sentencia -> alterVar .)
    INT             reduce using rule 24 (sentencia -> alterVar .)
    FLOAT           reduce using rule 24 (sentencia -> alterVar .)
    ABSTRACT        reduce using rule 24 (sentencia -> alterVar .)
    PRIVATE         reduce using rule 24 (sentencia -> alterVar .)
    PROTECTED       reduce using rule 24 (sentencia -> alterVar .)
    PUBLIC          reduce using rule 24 (sentencia -> alterVar .)
    STATIC          reduce using rule 24 (sentencia -> alterVar .)
    FINAL           reduce using rule 24 (sentencia -> alterVar .)
    STRING          reduce using rule 24 (sentencia -> alterVar .)
    BOOL            reduce using rule 24 (sentencia -> alterVar .)
    NULL            reduce using rule 24 (sentencia -> alterVar .)
    ARRAY           reduce using rule 24 (sentencia -> alterVar .)
    IF              reduce using rule 24 (sentencia -> alterVar .)
    WHILE           reduce using rule 24 (sentencia -> alterVar .)
    DO              reduce using rule 24 (sentencia -> alterVar .)
    SWITCH          reduce using rule 24 (sentencia -> alterVar .)
    FOREACH         reduce using rule 24 (sentencia -> alterVar .)
    FOR             reduce using rule 24 (sentencia -> alterVar .)
    CLOSETAG        reduce using rule 24 (sentencia -> alterVar .)
    RBRACE          reduce using rule 24 (sentencia -> alterVar .)
    SEMICOLON       reduce using rule 24 (sentencia -> alterVar .)
    BREAK           reduce using rule 24 (sentencia -> alterVar .)
    ENDSWITCH       reduce using rule 24 (sentencia -> alterVar .)
    CASE            reduce using rule 24 (sentencia -> alterVar .)
    DEFAULT         reduce using rule 24 (sentencia -> alterVar .)


state 26

    (31) asignacion -> VARIABLE . EQUALS expresion SEMICOLON
    (32) asignacion -> VARIABLE . minuse SEMICOLON
    (33) asignacion -> VARIABLE . pluse SEMICOLON
    (34) asignacion -> VARIABLE . EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> VARIABLE . EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (171) objeto -> VARIABLE . ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (203) anonymousFunction -> VARIABLE . EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (206) instance -> VARIABLE . INSTANCEOF ID
    (78) alterVar -> VARIABLE . DOUBLEPLUS SEMICOLON
    (79) alterVar -> VARIABLE . DOUBLEMINUS SEMICOLON
    (51) valornumerico -> VARIABLE .
    (53) valor -> VARIABLE .
    (136) array -> VARIABLE . EQUALS arrays SEMICOLON
    (137) array -> VARIABLE . EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> VARIABLE . EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (143) map -> VARIABLE . EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> VARIABLE . EQUALS ARRAY LPAREN maps RPAREN SEMICOLON
    (211) minuse -> . MINUSEQUAL INT
    (212) pluse -> . PLUSEQUAL INT

    EQUALS          shift and go to state 76
    ARROW           shift and go to state 79
    INSTANCEOF      shift and go to state 80
    DOUBLEPLUS      shift and go to state 81
    DOUBLEMINUS     shift and go to state 82
    EQ              reduce using rule 51 (valornumerico -> VARIABLE .)
    NEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTEQ        reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTNEQ       reduce using rule 51 (valornumerico -> VARIABLE .)
    LT              reduce using rule 51 (valornumerico -> VARIABLE .)
    GT              reduce using rule 51 (valornumerico -> VARIABLE .)
    LEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    GEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    DOT             reduce using rule 53 (valor -> VARIABLE .)
    MINUSEQUAL      shift and go to state 83
    PLUSEQUAL       shift and go to state 84

    minuse                         shift and go to state 77
    pluse                          shift and go to state 78

state 27

    (66) comparacion -> valornumerico . opSymbol valornumerico
    (98) opSymbol -> . EQ
    (99) opSymbol -> . NEQ
    (100) opSymbol -> . STRICTEQ
    (101) opSymbol -> . STRICTNEQ
    (102) opSymbol -> . LT
    (103) opSymbol -> . GT
    (104) opSymbol -> . LEQ
    (105) opSymbol -> . GEQ

    EQ              shift and go to state 86
    NEQ             shift and go to state 87
    STRICTEQ        shift and go to state 88
    STRICTNEQ       shift and go to state 89
    LT              shift and go to state 90
    GT              shift and go to state 91
    LEQ             shift and go to state 92
    GEQ             shift and go to state 93

    opSymbol                       shift and go to state 85

state 28

    (67) impresion -> ECHO . imprimir SEMICOLON
    (69) imprimir -> . LPAREN repiteValores RPAREN
    (70) imprimir -> . LPAREN RPAREN
    (71) imprimir -> . repiteValores
    (72) imprimir -> . empty
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (75) empty -> .
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 95
    SEMICOLON       reduce using rule 75 (empty -> .)
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    imprimir                       shift and go to state 94
    repiteValores                  shift and go to state 96
    empty                          shift and go to state 97
    valor                          shift and go to state 98
    llamadaFuncion                 shift and go to state 102

state 29

    (68) impresion -> PRINT . imprimir SEMICOLON
    (69) imprimir -> . LPAREN repiteValores RPAREN
    (70) imprimir -> . LPAREN RPAREN
    (71) imprimir -> . repiteValores
    (72) imprimir -> . empty
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (75) empty -> .
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 95
    SEMICOLON       reduce using rule 75 (empty -> .)
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    imprimir                       shift and go to state 103
    repiteValores                  shift and go to state 96
    empty                          shift and go to state 97
    valor                          shift and go to state 98
    llamadaFuncion                 shift and go to state 102

state 30

    (76) estructurasPrograma -> controlStructure .

    VARIABLE        reduce using rule 76 (estructurasPrograma -> controlStructure .)
    ECHO            reduce using rule 76 (estructurasPrograma -> controlStructure .)
    PRINT           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    TRY             reduce using rule 76 (estructurasPrograma -> controlStructure .)
    FUNCTION        reduce using rule 76 (estructurasPrograma -> controlStructure .)
    RETURN          reduce using rule 76 (estructurasPrograma -> controlStructure .)
    ID              reduce using rule 76 (estructurasPrograma -> controlStructure .)
    EMPTY           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    CLASS           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    INTERFACE       reduce using rule 76 (estructurasPrograma -> controlStructure .)
    INCLUDE         reduce using rule 76 (estructurasPrograma -> controlStructure .)
    NAMESPACE       reduce using rule 76 (estructurasPrograma -> controlStructure .)
    THROW           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    CONST           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    THIS            reduce using rule 76 (estructurasPrograma -> controlStructure .)
    INT             reduce using rule 76 (estructurasPrograma -> controlStructure .)
    FLOAT           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    ABSTRACT        reduce using rule 76 (estructurasPrograma -> controlStructure .)
    PRIVATE         reduce using rule 76 (estructurasPrograma -> controlStructure .)
    PROTECTED       reduce using rule 76 (estructurasPrograma -> controlStructure .)
    PUBLIC          reduce using rule 76 (estructurasPrograma -> controlStructure .)
    STATIC          reduce using rule 76 (estructurasPrograma -> controlStructure .)
    FINAL           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    STRING          reduce using rule 76 (estructurasPrograma -> controlStructure .)
    BOOL            reduce using rule 76 (estructurasPrograma -> controlStructure .)
    NULL            reduce using rule 76 (estructurasPrograma -> controlStructure .)
    ARRAY           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    IF              reduce using rule 76 (estructurasPrograma -> controlStructure .)
    WHILE           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    DO              reduce using rule 76 (estructurasPrograma -> controlStructure .)
    SWITCH          reduce using rule 76 (estructurasPrograma -> controlStructure .)
    FOREACH         reduce using rule 76 (estructurasPrograma -> controlStructure .)
    FOR             reduce using rule 76 (estructurasPrograma -> controlStructure .)
    CLOSETAG        reduce using rule 76 (estructurasPrograma -> controlStructure .)
    RBRACE          reduce using rule 76 (estructurasPrograma -> controlStructure .)
    SEMICOLON       reduce using rule 76 (estructurasPrograma -> controlStructure .)
    BREAK           reduce using rule 76 (estructurasPrograma -> controlStructure .)
    ENDSWITCH       reduce using rule 76 (estructurasPrograma -> controlStructure .)
    CASE            reduce using rule 76 (estructurasPrograma -> controlStructure .)
    DEFAULT         reduce using rule 76 (estructurasPrograma -> controlStructure .)


state 31

    (77) estructurasPrograma -> dataStructure .

    VARIABLE        reduce using rule 77 (estructurasPrograma -> dataStructure .)
    ECHO            reduce using rule 77 (estructurasPrograma -> dataStructure .)
    PRINT           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    TRY             reduce using rule 77 (estructurasPrograma -> dataStructure .)
    FUNCTION        reduce using rule 77 (estructurasPrograma -> dataStructure .)
    RETURN          reduce using rule 77 (estructurasPrograma -> dataStructure .)
    ID              reduce using rule 77 (estructurasPrograma -> dataStructure .)
    EMPTY           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    CLASS           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    INTERFACE       reduce using rule 77 (estructurasPrograma -> dataStructure .)
    INCLUDE         reduce using rule 77 (estructurasPrograma -> dataStructure .)
    NAMESPACE       reduce using rule 77 (estructurasPrograma -> dataStructure .)
    THROW           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    CONST           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    THIS            reduce using rule 77 (estructurasPrograma -> dataStructure .)
    INT             reduce using rule 77 (estructurasPrograma -> dataStructure .)
    FLOAT           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    ABSTRACT        reduce using rule 77 (estructurasPrograma -> dataStructure .)
    PRIVATE         reduce using rule 77 (estructurasPrograma -> dataStructure .)
    PROTECTED       reduce using rule 77 (estructurasPrograma -> dataStructure .)
    PUBLIC          reduce using rule 77 (estructurasPrograma -> dataStructure .)
    STATIC          reduce using rule 77 (estructurasPrograma -> dataStructure .)
    FINAL           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    STRING          reduce using rule 77 (estructurasPrograma -> dataStructure .)
    BOOL            reduce using rule 77 (estructurasPrograma -> dataStructure .)
    NULL            reduce using rule 77 (estructurasPrograma -> dataStructure .)
    ARRAY           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    IF              reduce using rule 77 (estructurasPrograma -> dataStructure .)
    WHILE           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    DO              reduce using rule 77 (estructurasPrograma -> dataStructure .)
    SWITCH          reduce using rule 77 (estructurasPrograma -> dataStructure .)
    FOREACH         reduce using rule 77 (estructurasPrograma -> dataStructure .)
    FOR             reduce using rule 77 (estructurasPrograma -> dataStructure .)
    CLOSETAG        reduce using rule 77 (estructurasPrograma -> dataStructure .)
    RBRACE          reduce using rule 77 (estructurasPrograma -> dataStructure .)
    SEMICOLON       reduce using rule 77 (estructurasPrograma -> dataStructure .)
    BREAK           reduce using rule 77 (estructurasPrograma -> dataStructure .)
    ENDSWITCH       reduce using rule 77 (estructurasPrograma -> dataStructure .)
    CASE            reduce using rule 77 (estructurasPrograma -> dataStructure .)
    DEFAULT         reduce using rule 77 (estructurasPrograma -> dataStructure .)


state 32

    (166) try -> TRY . LBRACE body RBRACE catchs
    (167) try -> TRY . LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE

    LBRACE          shift and go to state 104


state 33

    (172) funcionDeclaration -> FUNCTION . ID LPAREN argumentos RPAREN LBRACE body RBRACE

    ID              shift and go to state 105


state 34

    (174) llamadaFuncion -> ID . LPAREN argumentos RPAREN

    LPAREN          shift and go to state 106


state 35

    (173) funcionDeclaration -> data . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (178) classDeclarate -> data . CLASS ID LBRACE classBody RBRACE
    (189) classInterface -> data . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> data . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    FUNCTION        shift and go to state 107
    CLASS           shift and go to state 108


state 36

    (25) returnStatement -> RETURN . expresion SEMICOLON
    (26) returnStatement -> RETURN . SEMICOLON
    (35) expresion -> . valor
    (36) expresion -> . expresion opLogic expresion
    (37) expresion -> . comparacion
    (38) expresion -> . LPAREN comparacion RPAREN
    (39) expresion -> . operaArit
    (40) expresion -> . LPAREN expresion RPAREN
    (41) expresion -> . llamadaFuncion
    (42) expresion -> . concatenate
    (43) expresion -> . minuse
    (44) expresion -> . pluse
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (46) operaArit -> . valornumerico
    (47) operaArit -> . operaArit operador operaArit
    (48) operaArit -> . LPAREN operaArit RPAREN
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (210) concatenate -> . valor DOT STRING
    (211) minuse -> . MINUSEQUAL INT
    (212) pluse -> . PLUSEQUAL INT
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    SEMICOLON       shift and go to state 110
    LPAREN          shift and go to state 113
    INT             shift and go to state 119
    VARIABLE        shift and go to state 120
    FLOAT           shift and go to state 121
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    MINUSEQUAL      shift and go to state 83
    PLUSEQUAL       shift and go to state 84

    expresion                      shift and go to state 109
    valor                          shift and go to state 111
    comparacion                    shift and go to state 112
    operaArit                      shift and go to state 114
    llamadaFuncion                 shift and go to state 115
    concatenate                    shift and go to state 116
    minuse                         shift and go to state 117
    pluse                          shift and go to state 118
    valornumerico                  shift and go to state 122

state 37

    (175) llamadaFuncion -> EMPTY . LPAREN argumentos RPAREN

    LPAREN          shift and go to state 123


state 38

    (176) classDeclarate -> CLASS . ID LBRACE classBody RBRACE
    (177) classDeclarate -> CLASS . ID EXTENDS ID LBRACE classBody RBRACE
    (187) classInterface -> CLASS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> CLASS . ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 124


state 39

    (179) classDeclarate -> classInterface .

    VARIABLE        reduce using rule 179 (classDeclarate -> classInterface .)
    ECHO            reduce using rule 179 (classDeclarate -> classInterface .)
    PRINT           reduce using rule 179 (classDeclarate -> classInterface .)
    TRY             reduce using rule 179 (classDeclarate -> classInterface .)
    FUNCTION        reduce using rule 179 (classDeclarate -> classInterface .)
    RETURN          reduce using rule 179 (classDeclarate -> classInterface .)
    ID              reduce using rule 179 (classDeclarate -> classInterface .)
    EMPTY           reduce using rule 179 (classDeclarate -> classInterface .)
    CLASS           reduce using rule 179 (classDeclarate -> classInterface .)
    INTERFACE       reduce using rule 179 (classDeclarate -> classInterface .)
    INCLUDE         reduce using rule 179 (classDeclarate -> classInterface .)
    NAMESPACE       reduce using rule 179 (classDeclarate -> classInterface .)
    THROW           reduce using rule 179 (classDeclarate -> classInterface .)
    CONST           reduce using rule 179 (classDeclarate -> classInterface .)
    THIS            reduce using rule 179 (classDeclarate -> classInterface .)
    INT             reduce using rule 179 (classDeclarate -> classInterface .)
    FLOAT           reduce using rule 179 (classDeclarate -> classInterface .)
    ABSTRACT        reduce using rule 179 (classDeclarate -> classInterface .)
    PRIVATE         reduce using rule 179 (classDeclarate -> classInterface .)
    PROTECTED       reduce using rule 179 (classDeclarate -> classInterface .)
    PUBLIC          reduce using rule 179 (classDeclarate -> classInterface .)
    STATIC          reduce using rule 179 (classDeclarate -> classInterface .)
    FINAL           reduce using rule 179 (classDeclarate -> classInterface .)
    STRING          reduce using rule 179 (classDeclarate -> classInterface .)
    BOOL            reduce using rule 179 (classDeclarate -> classInterface .)
    NULL            reduce using rule 179 (classDeclarate -> classInterface .)
    ARRAY           reduce using rule 179 (classDeclarate -> classInterface .)
    IF              reduce using rule 179 (classDeclarate -> classInterface .)
    WHILE           reduce using rule 179 (classDeclarate -> classInterface .)
    DO              reduce using rule 179 (classDeclarate -> classInterface .)
    SWITCH          reduce using rule 179 (classDeclarate -> classInterface .)
    FOREACH         reduce using rule 179 (classDeclarate -> classInterface .)
    FOR             reduce using rule 179 (classDeclarate -> classInterface .)
    CLOSETAG        reduce using rule 179 (classDeclarate -> classInterface .)
    RBRACE          reduce using rule 179 (classDeclarate -> classInterface .)
    SEMICOLON       reduce using rule 179 (classDeclarate -> classInterface .)
    BREAK           reduce using rule 179 (classDeclarate -> classInterface .)
    ENDSWITCH       reduce using rule 179 (classDeclarate -> classInterface .)
    CASE            reduce using rule 179 (classDeclarate -> classInterface .)
    DEFAULT         reduce using rule 179 (classDeclarate -> classInterface .)


state 40

    (199) interface -> INTERFACE . ID LBRACE sentenciaList RBRACE

    ID              shift and go to state 125


state 41

    (200) includes -> INCLUDE . STRING SEMICOLON
    (201) includes -> INCLUDE . STRING DOT STRING SEMICOLON

    STRING          shift and go to state 126


state 42

    (55) valor -> STRING .

    DOT             reduce using rule 55 (valor -> STRING .)
    COMMA           reduce using rule 55 (valor -> STRING .)
    SEMICOLON       reduce using rule 55 (valor -> STRING .)
    AND             reduce using rule 55 (valor -> STRING .)
    LOGICAL_AND     reduce using rule 55 (valor -> STRING .)
    OR              reduce using rule 55 (valor -> STRING .)
    LOGICAL_OR      reduce using rule 55 (valor -> STRING .)
    RPAREN          reduce using rule 55 (valor -> STRING .)
    EQ              reduce using rule 55 (valor -> STRING .)
    NEQ             reduce using rule 55 (valor -> STRING .)
    STRICTEQ        reduce using rule 55 (valor -> STRING .)
    STRICTNEQ       reduce using rule 55 (valor -> STRING .)
    LT              reduce using rule 55 (valor -> STRING .)
    GT              reduce using rule 55 (valor -> STRING .)
    LEQ             reduce using rule 55 (valor -> STRING .)
    GEQ             reduce using rule 55 (valor -> STRING .)
    ARROWMAP        reduce using rule 55 (valor -> STRING .)
    RBRACKET        reduce using rule 55 (valor -> STRING .)
    COLON           reduce using rule 55 (valor -> STRING .)
    CASE            reduce using rule 55 (valor -> STRING .)
    DEFAULT         reduce using rule 55 (valor -> STRING .)
    RBRACE          reduce using rule 55 (valor -> STRING .)
    ENDSWITCH       reduce using rule 55 (valor -> STRING .)


state 43

    (202) namespace -> NAMESPACE . ID SEMICOLON

    ID              shift and go to state 127


state 44

    (204) throw -> THROW . NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> THROW . valor SEMICOLON
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    NEW             shift and go to state 128
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 129
    llamadaFuncion                 shift and go to state 102

state 45

    (210) concatenate -> valor . DOT STRING

    DOT             shift and go to state 130


state 46

    (207) constdeclaration -> CONST . ID EQUALS valor SEMICOLON

    ID              shift and go to state 131


state 47

    (208) thisdeclaration -> THIS . ARROW ID SEMICOLON
    (209) thisdeclaration -> THIS . ARROW ID LPAREN RPAREN SEMICOLON

    ARROW           shift and go to state 132


state 48

    (49) valornumerico -> INT .
    (52) valor -> INT .

  ! reduce/reduce conflict for RPAREN resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for AND resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 49 (valornumerico -> INT .)
    EQ              reduce using rule 49 (valornumerico -> INT .)
    NEQ             reduce using rule 49 (valornumerico -> INT .)
    STRICTEQ        reduce using rule 49 (valornumerico -> INT .)
    STRICTNEQ       reduce using rule 49 (valornumerico -> INT .)
    LT              reduce using rule 49 (valornumerico -> INT .)
    GT              reduce using rule 49 (valornumerico -> INT .)
    LEQ             reduce using rule 49 (valornumerico -> INT .)
    GEQ             reduce using rule 49 (valornumerico -> INT .)
    RPAREN          reduce using rule 49 (valornumerico -> INT .)
    PLUS            reduce using rule 49 (valornumerico -> INT .)
    MINUS           reduce using rule 49 (valornumerico -> INT .)
    TIMES           reduce using rule 49 (valornumerico -> INT .)
    DIVIDE          reduce using rule 49 (valornumerico -> INT .)
    MODULO          reduce using rule 49 (valornumerico -> INT .)
    POTENCIA        reduce using rule 49 (valornumerico -> INT .)
    AND             reduce using rule 49 (valornumerico -> INT .)
    LOGICAL_AND     reduce using rule 49 (valornumerico -> INT .)
    OR              reduce using rule 49 (valornumerico -> INT .)
    LOGICAL_OR      reduce using rule 49 (valornumerico -> INT .)
    DOT             reduce using rule 52 (valor -> INT .)

  ! RPAREN          [ reduce using rule 52 (valor -> INT .) ]
  ! AND             [ reduce using rule 52 (valor -> INT .) ]
  ! LOGICAL_AND     [ reduce using rule 52 (valor -> INT .) ]
  ! OR              [ reduce using rule 52 (valor -> INT .) ]
  ! LOGICAL_OR      [ reduce using rule 52 (valor -> INT .) ]


state 49

    (50) valornumerico -> FLOAT .
    (54) valor -> FLOAT .

  ! reduce/reduce conflict for RPAREN resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for AND resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for OR resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 50 (valornumerico -> FLOAT .)
    EQ              reduce using rule 50 (valornumerico -> FLOAT .)
    NEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    STRICTEQ        reduce using rule 50 (valornumerico -> FLOAT .)
    STRICTNEQ       reduce using rule 50 (valornumerico -> FLOAT .)
    LT              reduce using rule 50 (valornumerico -> FLOAT .)
    GT              reduce using rule 50 (valornumerico -> FLOAT .)
    LEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    GEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    RPAREN          reduce using rule 50 (valornumerico -> FLOAT .)
    PLUS            reduce using rule 50 (valornumerico -> FLOAT .)
    MINUS           reduce using rule 50 (valornumerico -> FLOAT .)
    TIMES           reduce using rule 50 (valornumerico -> FLOAT .)
    DIVIDE          reduce using rule 50 (valornumerico -> FLOAT .)
    MODULO          reduce using rule 50 (valornumerico -> FLOAT .)
    POTENCIA        reduce using rule 50 (valornumerico -> FLOAT .)
    AND             reduce using rule 50 (valornumerico -> FLOAT .)
    LOGICAL_AND     reduce using rule 50 (valornumerico -> FLOAT .)
    OR              reduce using rule 50 (valornumerico -> FLOAT .)
    LOGICAL_OR      reduce using rule 50 (valornumerico -> FLOAT .)
    DOT             reduce using rule 54 (valor -> FLOAT .)

  ! RPAREN          [ reduce using rule 54 (valor -> FLOAT .) ]
  ! AND             [ reduce using rule 54 (valor -> FLOAT .) ]
  ! LOGICAL_AND     [ reduce using rule 54 (valor -> FLOAT .) ]
  ! OR              [ reduce using rule 54 (valor -> FLOAT .) ]
  ! LOGICAL_OR      [ reduce using rule 54 (valor -> FLOAT .) ]


state 50

    (80) controlStructure -> if .

    VARIABLE        reduce using rule 80 (controlStructure -> if .)
    ECHO            reduce using rule 80 (controlStructure -> if .)
    PRINT           reduce using rule 80 (controlStructure -> if .)
    TRY             reduce using rule 80 (controlStructure -> if .)
    FUNCTION        reduce using rule 80 (controlStructure -> if .)
    RETURN          reduce using rule 80 (controlStructure -> if .)
    ID              reduce using rule 80 (controlStructure -> if .)
    EMPTY           reduce using rule 80 (controlStructure -> if .)
    CLASS           reduce using rule 80 (controlStructure -> if .)
    INTERFACE       reduce using rule 80 (controlStructure -> if .)
    INCLUDE         reduce using rule 80 (controlStructure -> if .)
    NAMESPACE       reduce using rule 80 (controlStructure -> if .)
    THROW           reduce using rule 80 (controlStructure -> if .)
    CONST           reduce using rule 80 (controlStructure -> if .)
    THIS            reduce using rule 80 (controlStructure -> if .)
    INT             reduce using rule 80 (controlStructure -> if .)
    FLOAT           reduce using rule 80 (controlStructure -> if .)
    ABSTRACT        reduce using rule 80 (controlStructure -> if .)
    PRIVATE         reduce using rule 80 (controlStructure -> if .)
    PROTECTED       reduce using rule 80 (controlStructure -> if .)
    PUBLIC          reduce using rule 80 (controlStructure -> if .)
    STATIC          reduce using rule 80 (controlStructure -> if .)
    FINAL           reduce using rule 80 (controlStructure -> if .)
    STRING          reduce using rule 80 (controlStructure -> if .)
    BOOL            reduce using rule 80 (controlStructure -> if .)
    NULL            reduce using rule 80 (controlStructure -> if .)
    ARRAY           reduce using rule 80 (controlStructure -> if .)
    IF              reduce using rule 80 (controlStructure -> if .)
    WHILE           reduce using rule 80 (controlStructure -> if .)
    DO              reduce using rule 80 (controlStructure -> if .)
    SWITCH          reduce using rule 80 (controlStructure -> if .)
    FOREACH         reduce using rule 80 (controlStructure -> if .)
    FOR             reduce using rule 80 (controlStructure -> if .)
    CLOSETAG        reduce using rule 80 (controlStructure -> if .)
    RBRACE          reduce using rule 80 (controlStructure -> if .)
    SEMICOLON       reduce using rule 80 (controlStructure -> if .)
    BREAK           reduce using rule 80 (controlStructure -> if .)
    ENDSWITCH       reduce using rule 80 (controlStructure -> if .)
    CASE            reduce using rule 80 (controlStructure -> if .)
    DEFAULT         reduce using rule 80 (controlStructure -> if .)


state 51

    (81) controlStructure -> for .

    VARIABLE        reduce using rule 81 (controlStructure -> for .)
    ECHO            reduce using rule 81 (controlStructure -> for .)
    PRINT           reduce using rule 81 (controlStructure -> for .)
    TRY             reduce using rule 81 (controlStructure -> for .)
    FUNCTION        reduce using rule 81 (controlStructure -> for .)
    RETURN          reduce using rule 81 (controlStructure -> for .)
    ID              reduce using rule 81 (controlStructure -> for .)
    EMPTY           reduce using rule 81 (controlStructure -> for .)
    CLASS           reduce using rule 81 (controlStructure -> for .)
    INTERFACE       reduce using rule 81 (controlStructure -> for .)
    INCLUDE         reduce using rule 81 (controlStructure -> for .)
    NAMESPACE       reduce using rule 81 (controlStructure -> for .)
    THROW           reduce using rule 81 (controlStructure -> for .)
    CONST           reduce using rule 81 (controlStructure -> for .)
    THIS            reduce using rule 81 (controlStructure -> for .)
    INT             reduce using rule 81 (controlStructure -> for .)
    FLOAT           reduce using rule 81 (controlStructure -> for .)
    ABSTRACT        reduce using rule 81 (controlStructure -> for .)
    PRIVATE         reduce using rule 81 (controlStructure -> for .)
    PROTECTED       reduce using rule 81 (controlStructure -> for .)
    PUBLIC          reduce using rule 81 (controlStructure -> for .)
    STATIC          reduce using rule 81 (controlStructure -> for .)
    FINAL           reduce using rule 81 (controlStructure -> for .)
    STRING          reduce using rule 81 (controlStructure -> for .)
    BOOL            reduce using rule 81 (controlStructure -> for .)
    NULL            reduce using rule 81 (controlStructure -> for .)
    ARRAY           reduce using rule 81 (controlStructure -> for .)
    IF              reduce using rule 81 (controlStructure -> for .)
    WHILE           reduce using rule 81 (controlStructure -> for .)
    DO              reduce using rule 81 (controlStructure -> for .)
    SWITCH          reduce using rule 81 (controlStructure -> for .)
    FOREACH         reduce using rule 81 (controlStructure -> for .)
    FOR             reduce using rule 81 (controlStructure -> for .)
    CLOSETAG        reduce using rule 81 (controlStructure -> for .)
    RBRACE          reduce using rule 81 (controlStructure -> for .)
    SEMICOLON       reduce using rule 81 (controlStructure -> for .)
    BREAK           reduce using rule 81 (controlStructure -> for .)
    ENDSWITCH       reduce using rule 81 (controlStructure -> for .)
    CASE            reduce using rule 81 (controlStructure -> for .)
    DEFAULT         reduce using rule 81 (controlStructure -> for .)


state 52

    (82) controlStructure -> while .

    VARIABLE        reduce using rule 82 (controlStructure -> while .)
    ECHO            reduce using rule 82 (controlStructure -> while .)
    PRINT           reduce using rule 82 (controlStructure -> while .)
    TRY             reduce using rule 82 (controlStructure -> while .)
    FUNCTION        reduce using rule 82 (controlStructure -> while .)
    RETURN          reduce using rule 82 (controlStructure -> while .)
    ID              reduce using rule 82 (controlStructure -> while .)
    EMPTY           reduce using rule 82 (controlStructure -> while .)
    CLASS           reduce using rule 82 (controlStructure -> while .)
    INTERFACE       reduce using rule 82 (controlStructure -> while .)
    INCLUDE         reduce using rule 82 (controlStructure -> while .)
    NAMESPACE       reduce using rule 82 (controlStructure -> while .)
    THROW           reduce using rule 82 (controlStructure -> while .)
    CONST           reduce using rule 82 (controlStructure -> while .)
    THIS            reduce using rule 82 (controlStructure -> while .)
    INT             reduce using rule 82 (controlStructure -> while .)
    FLOAT           reduce using rule 82 (controlStructure -> while .)
    ABSTRACT        reduce using rule 82 (controlStructure -> while .)
    PRIVATE         reduce using rule 82 (controlStructure -> while .)
    PROTECTED       reduce using rule 82 (controlStructure -> while .)
    PUBLIC          reduce using rule 82 (controlStructure -> while .)
    STATIC          reduce using rule 82 (controlStructure -> while .)
    FINAL           reduce using rule 82 (controlStructure -> while .)
    STRING          reduce using rule 82 (controlStructure -> while .)
    BOOL            reduce using rule 82 (controlStructure -> while .)
    NULL            reduce using rule 82 (controlStructure -> while .)
    ARRAY           reduce using rule 82 (controlStructure -> while .)
    IF              reduce using rule 82 (controlStructure -> while .)
    WHILE           reduce using rule 82 (controlStructure -> while .)
    DO              reduce using rule 82 (controlStructure -> while .)
    SWITCH          reduce using rule 82 (controlStructure -> while .)
    FOREACH         reduce using rule 82 (controlStructure -> while .)
    FOR             reduce using rule 82 (controlStructure -> while .)
    CLOSETAG        reduce using rule 82 (controlStructure -> while .)
    RBRACE          reduce using rule 82 (controlStructure -> while .)
    SEMICOLON       reduce using rule 82 (controlStructure -> while .)
    BREAK           reduce using rule 82 (controlStructure -> while .)
    ENDSWITCH       reduce using rule 82 (controlStructure -> while .)
    CASE            reduce using rule 82 (controlStructure -> while .)
    DEFAULT         reduce using rule 82 (controlStructure -> while .)


state 53

    (83) controlStructure -> dowhile .

    VARIABLE        reduce using rule 83 (controlStructure -> dowhile .)
    ECHO            reduce using rule 83 (controlStructure -> dowhile .)
    PRINT           reduce using rule 83 (controlStructure -> dowhile .)
    TRY             reduce using rule 83 (controlStructure -> dowhile .)
    FUNCTION        reduce using rule 83 (controlStructure -> dowhile .)
    RETURN          reduce using rule 83 (controlStructure -> dowhile .)
    ID              reduce using rule 83 (controlStructure -> dowhile .)
    EMPTY           reduce using rule 83 (controlStructure -> dowhile .)
    CLASS           reduce using rule 83 (controlStructure -> dowhile .)
    INTERFACE       reduce using rule 83 (controlStructure -> dowhile .)
    INCLUDE         reduce using rule 83 (controlStructure -> dowhile .)
    NAMESPACE       reduce using rule 83 (controlStructure -> dowhile .)
    THROW           reduce using rule 83 (controlStructure -> dowhile .)
    CONST           reduce using rule 83 (controlStructure -> dowhile .)
    THIS            reduce using rule 83 (controlStructure -> dowhile .)
    INT             reduce using rule 83 (controlStructure -> dowhile .)
    FLOAT           reduce using rule 83 (controlStructure -> dowhile .)
    ABSTRACT        reduce using rule 83 (controlStructure -> dowhile .)
    PRIVATE         reduce using rule 83 (controlStructure -> dowhile .)
    PROTECTED       reduce using rule 83 (controlStructure -> dowhile .)
    PUBLIC          reduce using rule 83 (controlStructure -> dowhile .)
    STATIC          reduce using rule 83 (controlStructure -> dowhile .)
    FINAL           reduce using rule 83 (controlStructure -> dowhile .)
    STRING          reduce using rule 83 (controlStructure -> dowhile .)
    BOOL            reduce using rule 83 (controlStructure -> dowhile .)
    NULL            reduce using rule 83 (controlStructure -> dowhile .)
    ARRAY           reduce using rule 83 (controlStructure -> dowhile .)
    IF              reduce using rule 83 (controlStructure -> dowhile .)
    WHILE           reduce using rule 83 (controlStructure -> dowhile .)
    DO              reduce using rule 83 (controlStructure -> dowhile .)
    SWITCH          reduce using rule 83 (controlStructure -> dowhile .)
    FOREACH         reduce using rule 83 (controlStructure -> dowhile .)
    FOR             reduce using rule 83 (controlStructure -> dowhile .)
    CLOSETAG        reduce using rule 83 (controlStructure -> dowhile .)
    RBRACE          reduce using rule 83 (controlStructure -> dowhile .)
    SEMICOLON       reduce using rule 83 (controlStructure -> dowhile .)
    BREAK           reduce using rule 83 (controlStructure -> dowhile .)
    ENDSWITCH       reduce using rule 83 (controlStructure -> dowhile .)
    CASE            reduce using rule 83 (controlStructure -> dowhile .)
    DEFAULT         reduce using rule 83 (controlStructure -> dowhile .)


state 54

    (84) controlStructure -> switch .

    VARIABLE        reduce using rule 84 (controlStructure -> switch .)
    ECHO            reduce using rule 84 (controlStructure -> switch .)
    PRINT           reduce using rule 84 (controlStructure -> switch .)
    TRY             reduce using rule 84 (controlStructure -> switch .)
    FUNCTION        reduce using rule 84 (controlStructure -> switch .)
    RETURN          reduce using rule 84 (controlStructure -> switch .)
    ID              reduce using rule 84 (controlStructure -> switch .)
    EMPTY           reduce using rule 84 (controlStructure -> switch .)
    CLASS           reduce using rule 84 (controlStructure -> switch .)
    INTERFACE       reduce using rule 84 (controlStructure -> switch .)
    INCLUDE         reduce using rule 84 (controlStructure -> switch .)
    NAMESPACE       reduce using rule 84 (controlStructure -> switch .)
    THROW           reduce using rule 84 (controlStructure -> switch .)
    CONST           reduce using rule 84 (controlStructure -> switch .)
    THIS            reduce using rule 84 (controlStructure -> switch .)
    INT             reduce using rule 84 (controlStructure -> switch .)
    FLOAT           reduce using rule 84 (controlStructure -> switch .)
    ABSTRACT        reduce using rule 84 (controlStructure -> switch .)
    PRIVATE         reduce using rule 84 (controlStructure -> switch .)
    PROTECTED       reduce using rule 84 (controlStructure -> switch .)
    PUBLIC          reduce using rule 84 (controlStructure -> switch .)
    STATIC          reduce using rule 84 (controlStructure -> switch .)
    FINAL           reduce using rule 84 (controlStructure -> switch .)
    STRING          reduce using rule 84 (controlStructure -> switch .)
    BOOL            reduce using rule 84 (controlStructure -> switch .)
    NULL            reduce using rule 84 (controlStructure -> switch .)
    ARRAY           reduce using rule 84 (controlStructure -> switch .)
    IF              reduce using rule 84 (controlStructure -> switch .)
    WHILE           reduce using rule 84 (controlStructure -> switch .)
    DO              reduce using rule 84 (controlStructure -> switch .)
    SWITCH          reduce using rule 84 (controlStructure -> switch .)
    FOREACH         reduce using rule 84 (controlStructure -> switch .)
    FOR             reduce using rule 84 (controlStructure -> switch .)
    CLOSETAG        reduce using rule 84 (controlStructure -> switch .)
    RBRACE          reduce using rule 84 (controlStructure -> switch .)
    SEMICOLON       reduce using rule 84 (controlStructure -> switch .)
    BREAK           reduce using rule 84 (controlStructure -> switch .)
    ENDSWITCH       reduce using rule 84 (controlStructure -> switch .)
    CASE            reduce using rule 84 (controlStructure -> switch .)
    DEFAULT         reduce using rule 84 (controlStructure -> switch .)


state 55

    (85) controlStructure -> foreach .

    VARIABLE        reduce using rule 85 (controlStructure -> foreach .)
    ECHO            reduce using rule 85 (controlStructure -> foreach .)
    PRINT           reduce using rule 85 (controlStructure -> foreach .)
    TRY             reduce using rule 85 (controlStructure -> foreach .)
    FUNCTION        reduce using rule 85 (controlStructure -> foreach .)
    RETURN          reduce using rule 85 (controlStructure -> foreach .)
    ID              reduce using rule 85 (controlStructure -> foreach .)
    EMPTY           reduce using rule 85 (controlStructure -> foreach .)
    CLASS           reduce using rule 85 (controlStructure -> foreach .)
    INTERFACE       reduce using rule 85 (controlStructure -> foreach .)
    INCLUDE         reduce using rule 85 (controlStructure -> foreach .)
    NAMESPACE       reduce using rule 85 (controlStructure -> foreach .)
    THROW           reduce using rule 85 (controlStructure -> foreach .)
    CONST           reduce using rule 85 (controlStructure -> foreach .)
    THIS            reduce using rule 85 (controlStructure -> foreach .)
    INT             reduce using rule 85 (controlStructure -> foreach .)
    FLOAT           reduce using rule 85 (controlStructure -> foreach .)
    ABSTRACT        reduce using rule 85 (controlStructure -> foreach .)
    PRIVATE         reduce using rule 85 (controlStructure -> foreach .)
    PROTECTED       reduce using rule 85 (controlStructure -> foreach .)
    PUBLIC          reduce using rule 85 (controlStructure -> foreach .)
    STATIC          reduce using rule 85 (controlStructure -> foreach .)
    FINAL           reduce using rule 85 (controlStructure -> foreach .)
    STRING          reduce using rule 85 (controlStructure -> foreach .)
    BOOL            reduce using rule 85 (controlStructure -> foreach .)
    NULL            reduce using rule 85 (controlStructure -> foreach .)
    ARRAY           reduce using rule 85 (controlStructure -> foreach .)
    IF              reduce using rule 85 (controlStructure -> foreach .)
    WHILE           reduce using rule 85 (controlStructure -> foreach .)
    DO              reduce using rule 85 (controlStructure -> foreach .)
    SWITCH          reduce using rule 85 (controlStructure -> foreach .)
    FOREACH         reduce using rule 85 (controlStructure -> foreach .)
    FOR             reduce using rule 85 (controlStructure -> foreach .)
    CLOSETAG        reduce using rule 85 (controlStructure -> foreach .)
    RBRACE          reduce using rule 85 (controlStructure -> foreach .)
    SEMICOLON       reduce using rule 85 (controlStructure -> foreach .)
    BREAK           reduce using rule 85 (controlStructure -> foreach .)
    ENDSWITCH       reduce using rule 85 (controlStructure -> foreach .)
    CASE            reduce using rule 85 (controlStructure -> foreach .)
    DEFAULT         reduce using rule 85 (controlStructure -> foreach .)


state 56

    (135) dataStructure -> array .

    VARIABLE        reduce using rule 135 (dataStructure -> array .)
    ECHO            reduce using rule 135 (dataStructure -> array .)
    PRINT           reduce using rule 135 (dataStructure -> array .)
    TRY             reduce using rule 135 (dataStructure -> array .)
    FUNCTION        reduce using rule 135 (dataStructure -> array .)
    RETURN          reduce using rule 135 (dataStructure -> array .)
    ID              reduce using rule 135 (dataStructure -> array .)
    EMPTY           reduce using rule 135 (dataStructure -> array .)
    CLASS           reduce using rule 135 (dataStructure -> array .)
    INTERFACE       reduce using rule 135 (dataStructure -> array .)
    INCLUDE         reduce using rule 135 (dataStructure -> array .)
    NAMESPACE       reduce using rule 135 (dataStructure -> array .)
    THROW           reduce using rule 135 (dataStructure -> array .)
    CONST           reduce using rule 135 (dataStructure -> array .)
    THIS            reduce using rule 135 (dataStructure -> array .)
    INT             reduce using rule 135 (dataStructure -> array .)
    FLOAT           reduce using rule 135 (dataStructure -> array .)
    ABSTRACT        reduce using rule 135 (dataStructure -> array .)
    PRIVATE         reduce using rule 135 (dataStructure -> array .)
    PROTECTED       reduce using rule 135 (dataStructure -> array .)
    PUBLIC          reduce using rule 135 (dataStructure -> array .)
    STATIC          reduce using rule 135 (dataStructure -> array .)
    FINAL           reduce using rule 135 (dataStructure -> array .)
    STRING          reduce using rule 135 (dataStructure -> array .)
    BOOL            reduce using rule 135 (dataStructure -> array .)
    NULL            reduce using rule 135 (dataStructure -> array .)
    ARRAY           reduce using rule 135 (dataStructure -> array .)
    IF              reduce using rule 135 (dataStructure -> array .)
    WHILE           reduce using rule 135 (dataStructure -> array .)
    DO              reduce using rule 135 (dataStructure -> array .)
    SWITCH          reduce using rule 135 (dataStructure -> array .)
    FOREACH         reduce using rule 135 (dataStructure -> array .)
    FOR             reduce using rule 135 (dataStructure -> array .)
    CLOSETAG        reduce using rule 135 (dataStructure -> array .)
    RBRACE          reduce using rule 135 (dataStructure -> array .)
    SEMICOLON       reduce using rule 135 (dataStructure -> array .)
    BREAK           reduce using rule 135 (dataStructure -> array .)
    ENDSWITCH       reduce using rule 135 (dataStructure -> array .)
    CASE            reduce using rule 135 (dataStructure -> array .)
    DEFAULT         reduce using rule 135 (dataStructure -> array .)


state 57

    (193) data -> ABSTRACT .

    FUNCTION        reduce using rule 193 (data -> ABSTRACT .)
    CLASS           reduce using rule 193 (data -> ABSTRACT .)


state 58

    (194) data -> PRIVATE .

    FUNCTION        reduce using rule 194 (data -> PRIVATE .)
    CLASS           reduce using rule 194 (data -> PRIVATE .)


state 59

    (195) data -> PROTECTED .

    FUNCTION        reduce using rule 195 (data -> PROTECTED .)
    CLASS           reduce using rule 195 (data -> PROTECTED .)


state 60

    (196) data -> PUBLIC .

    FUNCTION        reduce using rule 196 (data -> PUBLIC .)
    CLASS           reduce using rule 196 (data -> PUBLIC .)


state 61

    (197) data -> STATIC .

    FUNCTION        reduce using rule 197 (data -> STATIC .)
    CLASS           reduce using rule 197 (data -> STATIC .)


state 62

    (198) data -> FINAL .

    FUNCTION        reduce using rule 198 (data -> FINAL .)
    CLASS           reduce using rule 198 (data -> FINAL .)


state 63

    (56) valor -> BOOL .

    DOT             reduce using rule 56 (valor -> BOOL .)
    COMMA           reduce using rule 56 (valor -> BOOL .)
    SEMICOLON       reduce using rule 56 (valor -> BOOL .)
    AND             reduce using rule 56 (valor -> BOOL .)
    LOGICAL_AND     reduce using rule 56 (valor -> BOOL .)
    OR              reduce using rule 56 (valor -> BOOL .)
    LOGICAL_OR      reduce using rule 56 (valor -> BOOL .)
    RPAREN          reduce using rule 56 (valor -> BOOL .)
    EQ              reduce using rule 56 (valor -> BOOL .)
    NEQ             reduce using rule 56 (valor -> BOOL .)
    STRICTEQ        reduce using rule 56 (valor -> BOOL .)
    STRICTNEQ       reduce using rule 56 (valor -> BOOL .)
    LT              reduce using rule 56 (valor -> BOOL .)
    GT              reduce using rule 56 (valor -> BOOL .)
    LEQ             reduce using rule 56 (valor -> BOOL .)
    GEQ             reduce using rule 56 (valor -> BOOL .)
    ARROWMAP        reduce using rule 56 (valor -> BOOL .)
    RBRACKET        reduce using rule 56 (valor -> BOOL .)
    COLON           reduce using rule 56 (valor -> BOOL .)
    CASE            reduce using rule 56 (valor -> BOOL .)
    DEFAULT         reduce using rule 56 (valor -> BOOL .)
    RBRACE          reduce using rule 56 (valor -> BOOL .)
    ENDSWITCH       reduce using rule 56 (valor -> BOOL .)


state 64

    (57) valor -> NULL .

    DOT             reduce using rule 57 (valor -> NULL .)
    COMMA           reduce using rule 57 (valor -> NULL .)
    SEMICOLON       reduce using rule 57 (valor -> NULL .)
    AND             reduce using rule 57 (valor -> NULL .)
    LOGICAL_AND     reduce using rule 57 (valor -> NULL .)
    OR              reduce using rule 57 (valor -> NULL .)
    LOGICAL_OR      reduce using rule 57 (valor -> NULL .)
    RPAREN          reduce using rule 57 (valor -> NULL .)
    EQ              reduce using rule 57 (valor -> NULL .)
    NEQ             reduce using rule 57 (valor -> NULL .)
    STRICTEQ        reduce using rule 57 (valor -> NULL .)
    STRICTNEQ       reduce using rule 57 (valor -> NULL .)
    LT              reduce using rule 57 (valor -> NULL .)
    GT              reduce using rule 57 (valor -> NULL .)
    LEQ             reduce using rule 57 (valor -> NULL .)
    GEQ             reduce using rule 57 (valor -> NULL .)
    ARROWMAP        reduce using rule 57 (valor -> NULL .)
    RBRACKET        reduce using rule 57 (valor -> NULL .)
    COLON           reduce using rule 57 (valor -> NULL .)
    CASE            reduce using rule 57 (valor -> NULL .)
    DEFAULT         reduce using rule 57 (valor -> NULL .)
    RBRACE          reduce using rule 57 (valor -> NULL .)
    ENDSWITCH       reduce using rule 57 (valor -> NULL .)


state 65

    (58) valor -> ARRAY .

    DOT             reduce using rule 58 (valor -> ARRAY .)
    COMMA           reduce using rule 58 (valor -> ARRAY .)
    SEMICOLON       reduce using rule 58 (valor -> ARRAY .)
    AND             reduce using rule 58 (valor -> ARRAY .)
    LOGICAL_AND     reduce using rule 58 (valor -> ARRAY .)
    OR              reduce using rule 58 (valor -> ARRAY .)
    LOGICAL_OR      reduce using rule 58 (valor -> ARRAY .)
    RPAREN          reduce using rule 58 (valor -> ARRAY .)
    EQ              reduce using rule 58 (valor -> ARRAY .)
    NEQ             reduce using rule 58 (valor -> ARRAY .)
    STRICTEQ        reduce using rule 58 (valor -> ARRAY .)
    STRICTNEQ       reduce using rule 58 (valor -> ARRAY .)
    LT              reduce using rule 58 (valor -> ARRAY .)
    GT              reduce using rule 58 (valor -> ARRAY .)
    LEQ             reduce using rule 58 (valor -> ARRAY .)
    GEQ             reduce using rule 58 (valor -> ARRAY .)
    ARROWMAP        reduce using rule 58 (valor -> ARRAY .)
    RBRACKET        reduce using rule 58 (valor -> ARRAY .)
    COLON           reduce using rule 58 (valor -> ARRAY .)
    CASE            reduce using rule 58 (valor -> ARRAY .)
    DEFAULT         reduce using rule 58 (valor -> ARRAY .)
    RBRACE          reduce using rule 58 (valor -> ARRAY .)
    ENDSWITCH       reduce using rule 58 (valor -> ARRAY .)


state 66

    (86) if -> IF . LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> IF . LPAREN conditions RPAREN body SEMICOLON

    LPAREN          shift and go to state 133


state 67

    (114) for -> forStatement .

    VARIABLE        reduce using rule 114 (for -> forStatement .)
    ECHO            reduce using rule 114 (for -> forStatement .)
    PRINT           reduce using rule 114 (for -> forStatement .)
    TRY             reduce using rule 114 (for -> forStatement .)
    FUNCTION        reduce using rule 114 (for -> forStatement .)
    RETURN          reduce using rule 114 (for -> forStatement .)
    ID              reduce using rule 114 (for -> forStatement .)
    EMPTY           reduce using rule 114 (for -> forStatement .)
    CLASS           reduce using rule 114 (for -> forStatement .)
    INTERFACE       reduce using rule 114 (for -> forStatement .)
    INCLUDE         reduce using rule 114 (for -> forStatement .)
    NAMESPACE       reduce using rule 114 (for -> forStatement .)
    THROW           reduce using rule 114 (for -> forStatement .)
    CONST           reduce using rule 114 (for -> forStatement .)
    THIS            reduce using rule 114 (for -> forStatement .)
    INT             reduce using rule 114 (for -> forStatement .)
    FLOAT           reduce using rule 114 (for -> forStatement .)
    ABSTRACT        reduce using rule 114 (for -> forStatement .)
    PRIVATE         reduce using rule 114 (for -> forStatement .)
    PROTECTED       reduce using rule 114 (for -> forStatement .)
    PUBLIC          reduce using rule 114 (for -> forStatement .)
    STATIC          reduce using rule 114 (for -> forStatement .)
    FINAL           reduce using rule 114 (for -> forStatement .)
    STRING          reduce using rule 114 (for -> forStatement .)
    BOOL            reduce using rule 114 (for -> forStatement .)
    NULL            reduce using rule 114 (for -> forStatement .)
    ARRAY           reduce using rule 114 (for -> forStatement .)
    IF              reduce using rule 114 (for -> forStatement .)
    WHILE           reduce using rule 114 (for -> forStatement .)
    DO              reduce using rule 114 (for -> forStatement .)
    SWITCH          reduce using rule 114 (for -> forStatement .)
    FOREACH         reduce using rule 114 (for -> forStatement .)
    FOR             reduce using rule 114 (for -> forStatement .)
    CLOSETAG        reduce using rule 114 (for -> forStatement .)
    RBRACE          reduce using rule 114 (for -> forStatement .)
    SEMICOLON       reduce using rule 114 (for -> forStatement .)
    BREAK           reduce using rule 114 (for -> forStatement .)
    ENDSWITCH       reduce using rule 114 (for -> forStatement .)
    CASE            reduce using rule 114 (for -> forStatement .)
    DEFAULT         reduce using rule 114 (for -> forStatement .)


state 68

    (118) while -> WHILE . LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> WHILE . LPAREN condition RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 134


state 69

    (120) dowhile -> DO . LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    LBRACE          shift and go to state 135


state 70

    (121) switch -> SWITCH . LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> SWITCH . LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON

    LPAREN          shift and go to state 136


state 71

    (129) foreach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 137


state 72

    (139) array -> map .

    VARIABLE        reduce using rule 139 (array -> map .)
    ECHO            reduce using rule 139 (array -> map .)
    PRINT           reduce using rule 139 (array -> map .)
    TRY             reduce using rule 139 (array -> map .)
    FUNCTION        reduce using rule 139 (array -> map .)
    RETURN          reduce using rule 139 (array -> map .)
    ID              reduce using rule 139 (array -> map .)
    EMPTY           reduce using rule 139 (array -> map .)
    CLASS           reduce using rule 139 (array -> map .)
    INTERFACE       reduce using rule 139 (array -> map .)
    INCLUDE         reduce using rule 139 (array -> map .)
    NAMESPACE       reduce using rule 139 (array -> map .)
    THROW           reduce using rule 139 (array -> map .)
    CONST           reduce using rule 139 (array -> map .)
    THIS            reduce using rule 139 (array -> map .)
    INT             reduce using rule 139 (array -> map .)
    FLOAT           reduce using rule 139 (array -> map .)
    ABSTRACT        reduce using rule 139 (array -> map .)
    PRIVATE         reduce using rule 139 (array -> map .)
    PROTECTED       reduce using rule 139 (array -> map .)
    PUBLIC          reduce using rule 139 (array -> map .)
    STATIC          reduce using rule 139 (array -> map .)
    FINAL           reduce using rule 139 (array -> map .)
    STRING          reduce using rule 139 (array -> map .)
    BOOL            reduce using rule 139 (array -> map .)
    NULL            reduce using rule 139 (array -> map .)
    ARRAY           reduce using rule 139 (array -> map .)
    IF              reduce using rule 139 (array -> map .)
    WHILE           reduce using rule 139 (array -> map .)
    DO              reduce using rule 139 (array -> map .)
    SWITCH          reduce using rule 139 (array -> map .)
    FOREACH         reduce using rule 139 (array -> map .)
    FOR             reduce using rule 139 (array -> map .)
    CLOSETAG        reduce using rule 139 (array -> map .)
    RBRACE          reduce using rule 139 (array -> map .)
    SEMICOLON       reduce using rule 139 (array -> map .)
    BREAK           reduce using rule 139 (array -> map .)
    ENDSWITCH       reduce using rule 139 (array -> map .)
    CASE            reduce using rule 139 (array -> map .)
    DEFAULT         reduce using rule 139 (array -> map .)


state 73

    (115) forStatement -> FOR . LPAREN forcondition RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 138


state 74

    (1) inicio -> OPENTAG programa CLOSETAG .

    $end            reduce using rule 1 (inicio -> OPENTAG programa CLOSETAG .)


state 75

    (3) programa -> sentencia programa .

    CLOSETAG        reduce using rule 3 (programa -> sentencia programa .)


state 76

    (31) asignacion -> VARIABLE EQUALS . expresion SEMICOLON
    (34) asignacion -> VARIABLE EQUALS . funcion_strlen SEMICOLON
    (45) asignacion_fgets -> VARIABLE EQUALS . FGETS LPAREN STDIN RPAREN SEMICOLON
    (203) anonymousFunction -> VARIABLE EQUALS . FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (136) array -> VARIABLE EQUALS . arrays SEMICOLON
    (137) array -> VARIABLE EQUALS . LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> VARIABLE EQUALS . ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (143) map -> VARIABLE EQUALS . LBRACKET maps RBRACKET SEMICOLON
    (144) map -> VARIABLE EQUALS . ARRAY LPAREN maps RPAREN SEMICOLON
    (35) expresion -> . valor
    (36) expresion -> . expresion opLogic expresion
    (37) expresion -> . comparacion
    (38) expresion -> . LPAREN comparacion RPAREN
    (39) expresion -> . operaArit
    (40) expresion -> . LPAREN expresion RPAREN
    (41) expresion -> . llamadaFuncion
    (42) expresion -> . concatenate
    (43) expresion -> . minuse
    (44) expresion -> . pluse
    (213) funcion_strlen -> . STRLEN LPAREN STRING RPAREN
    (140) arrays -> . LBRACKET repiteValores RBRACKET
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (46) operaArit -> . valornumerico
    (47) operaArit -> . operaArit operador operaArit
    (48) operaArit -> . LPAREN operaArit RPAREN
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (210) concatenate -> . valor DOT STRING
    (211) minuse -> . MINUSEQUAL INT
    (212) pluse -> . PLUSEQUAL INT
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    FGETS           shift and go to state 141
    FN              shift and go to state 142
    LBRACKET        shift and go to state 144
    ARRAY           shift and go to state 145
    LPAREN          shift and go to state 113
    STRLEN          shift and go to state 146
    INT             shift and go to state 119
    VARIABLE        shift and go to state 120
    FLOAT           shift and go to state 121
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    MINUSEQUAL      shift and go to state 83
    PLUSEQUAL       shift and go to state 84

    expresion                      shift and go to state 139
    funcion_strlen                 shift and go to state 140
    comparacion                    shift and go to state 112
    arrays                         shift and go to state 143
    valor                          shift and go to state 111
    operaArit                      shift and go to state 114
    llamadaFuncion                 shift and go to state 115
    concatenate                    shift and go to state 116
    minuse                         shift and go to state 117
    pluse                          shift and go to state 118
    valornumerico                  shift and go to state 122

state 77

    (32) asignacion -> VARIABLE minuse . SEMICOLON

    SEMICOLON       shift and go to state 147


state 78

    (33) asignacion -> VARIABLE pluse . SEMICOLON

    SEMICOLON       shift and go to state 148


state 79

    (171) objeto -> VARIABLE ARROW . ID LPAREN argumentos RPAREN SEMICOLON

    ID              shift and go to state 149


state 80

    (206) instance -> VARIABLE INSTANCEOF . ID

    ID              shift and go to state 150


state 81

    (78) alterVar -> VARIABLE DOUBLEPLUS . SEMICOLON

    SEMICOLON       shift and go to state 151


state 82

    (79) alterVar -> VARIABLE DOUBLEMINUS . SEMICOLON

    SEMICOLON       shift and go to state 152


state 83

    (211) minuse -> MINUSEQUAL . INT

    INT             shift and go to state 153


state 84

    (212) pluse -> PLUSEQUAL . INT

    INT             shift and go to state 154


state 85

    (66) comparacion -> valornumerico opSymbol . valornumerico
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    INT             shift and go to state 156
    FLOAT           shift and go to state 157
    VARIABLE        shift and go to state 158

    valornumerico                  shift and go to state 155

state 86

    (98) opSymbol -> EQ .

    INT             reduce using rule 98 (opSymbol -> EQ .)
    FLOAT           reduce using rule 98 (opSymbol -> EQ .)
    VARIABLE        reduce using rule 98 (opSymbol -> EQ .)
    STRING          reduce using rule 98 (opSymbol -> EQ .)
    BOOL            reduce using rule 98 (opSymbol -> EQ .)
    NULL            reduce using rule 98 (opSymbol -> EQ .)
    ARRAY           reduce using rule 98 (opSymbol -> EQ .)
    ID              reduce using rule 98 (opSymbol -> EQ .)
    EMPTY           reduce using rule 98 (opSymbol -> EQ .)


state 87

    (99) opSymbol -> NEQ .

    INT             reduce using rule 99 (opSymbol -> NEQ .)
    FLOAT           reduce using rule 99 (opSymbol -> NEQ .)
    VARIABLE        reduce using rule 99 (opSymbol -> NEQ .)
    STRING          reduce using rule 99 (opSymbol -> NEQ .)
    BOOL            reduce using rule 99 (opSymbol -> NEQ .)
    NULL            reduce using rule 99 (opSymbol -> NEQ .)
    ARRAY           reduce using rule 99 (opSymbol -> NEQ .)
    ID              reduce using rule 99 (opSymbol -> NEQ .)
    EMPTY           reduce using rule 99 (opSymbol -> NEQ .)


state 88

    (100) opSymbol -> STRICTEQ .

    INT             reduce using rule 100 (opSymbol -> STRICTEQ .)
    FLOAT           reduce using rule 100 (opSymbol -> STRICTEQ .)
    VARIABLE        reduce using rule 100 (opSymbol -> STRICTEQ .)
    STRING          reduce using rule 100 (opSymbol -> STRICTEQ .)
    BOOL            reduce using rule 100 (opSymbol -> STRICTEQ .)
    NULL            reduce using rule 100 (opSymbol -> STRICTEQ .)
    ARRAY           reduce using rule 100 (opSymbol -> STRICTEQ .)
    ID              reduce using rule 100 (opSymbol -> STRICTEQ .)
    EMPTY           reduce using rule 100 (opSymbol -> STRICTEQ .)


state 89

    (101) opSymbol -> STRICTNEQ .

    INT             reduce using rule 101 (opSymbol -> STRICTNEQ .)
    FLOAT           reduce using rule 101 (opSymbol -> STRICTNEQ .)
    VARIABLE        reduce using rule 101 (opSymbol -> STRICTNEQ .)
    STRING          reduce using rule 101 (opSymbol -> STRICTNEQ .)
    BOOL            reduce using rule 101 (opSymbol -> STRICTNEQ .)
    NULL            reduce using rule 101 (opSymbol -> STRICTNEQ .)
    ARRAY           reduce using rule 101 (opSymbol -> STRICTNEQ .)
    ID              reduce using rule 101 (opSymbol -> STRICTNEQ .)
    EMPTY           reduce using rule 101 (opSymbol -> STRICTNEQ .)


state 90

    (102) opSymbol -> LT .

    INT             reduce using rule 102 (opSymbol -> LT .)
    FLOAT           reduce using rule 102 (opSymbol -> LT .)
    VARIABLE        reduce using rule 102 (opSymbol -> LT .)
    STRING          reduce using rule 102 (opSymbol -> LT .)
    BOOL            reduce using rule 102 (opSymbol -> LT .)
    NULL            reduce using rule 102 (opSymbol -> LT .)
    ARRAY           reduce using rule 102 (opSymbol -> LT .)
    ID              reduce using rule 102 (opSymbol -> LT .)
    EMPTY           reduce using rule 102 (opSymbol -> LT .)


state 91

    (103) opSymbol -> GT .

    INT             reduce using rule 103 (opSymbol -> GT .)
    FLOAT           reduce using rule 103 (opSymbol -> GT .)
    VARIABLE        reduce using rule 103 (opSymbol -> GT .)
    STRING          reduce using rule 103 (opSymbol -> GT .)
    BOOL            reduce using rule 103 (opSymbol -> GT .)
    NULL            reduce using rule 103 (opSymbol -> GT .)
    ARRAY           reduce using rule 103 (opSymbol -> GT .)
    ID              reduce using rule 103 (opSymbol -> GT .)
    EMPTY           reduce using rule 103 (opSymbol -> GT .)


state 92

    (104) opSymbol -> LEQ .

    INT             reduce using rule 104 (opSymbol -> LEQ .)
    FLOAT           reduce using rule 104 (opSymbol -> LEQ .)
    VARIABLE        reduce using rule 104 (opSymbol -> LEQ .)
    STRING          reduce using rule 104 (opSymbol -> LEQ .)
    BOOL            reduce using rule 104 (opSymbol -> LEQ .)
    NULL            reduce using rule 104 (opSymbol -> LEQ .)
    ARRAY           reduce using rule 104 (opSymbol -> LEQ .)
    ID              reduce using rule 104 (opSymbol -> LEQ .)
    EMPTY           reduce using rule 104 (opSymbol -> LEQ .)


state 93

    (105) opSymbol -> GEQ .

    INT             reduce using rule 105 (opSymbol -> GEQ .)
    FLOAT           reduce using rule 105 (opSymbol -> GEQ .)
    VARIABLE        reduce using rule 105 (opSymbol -> GEQ .)
    STRING          reduce using rule 105 (opSymbol -> GEQ .)
    BOOL            reduce using rule 105 (opSymbol -> GEQ .)
    NULL            reduce using rule 105 (opSymbol -> GEQ .)
    ARRAY           reduce using rule 105 (opSymbol -> GEQ .)
    ID              reduce using rule 105 (opSymbol -> GEQ .)
    EMPTY           reduce using rule 105 (opSymbol -> GEQ .)


state 94

    (67) impresion -> ECHO imprimir . SEMICOLON

    SEMICOLON       shift and go to state 159


state 95

    (69) imprimir -> LPAREN . repiteValores RPAREN
    (70) imprimir -> LPAREN . RPAREN
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    RPAREN          shift and go to state 161
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    repiteValores                  shift and go to state 160
    valor                          shift and go to state 98
    llamadaFuncion                 shift and go to state 102

state 96

    (71) imprimir -> repiteValores .

    SEMICOLON       reduce using rule 71 (imprimir -> repiteValores .)


state 97

    (72) imprimir -> empty .

    SEMICOLON       reduce using rule 72 (imprimir -> empty .)


state 98

    (73) repiteValores -> valor .
    (74) repiteValores -> valor . COMMA repiteValores

    SEMICOLON       reduce using rule 73 (repiteValores -> valor .)
    RPAREN          reduce using rule 73 (repiteValores -> valor .)
    RBRACKET        reduce using rule 73 (repiteValores -> valor .)
    COMMA           shift and go to state 162


state 99

    (52) valor -> INT .

    COMMA           reduce using rule 52 (valor -> INT .)
    SEMICOLON       reduce using rule 52 (valor -> INT .)
    RPAREN          reduce using rule 52 (valor -> INT .)
    EQ              reduce using rule 52 (valor -> INT .)
    NEQ             reduce using rule 52 (valor -> INT .)
    STRICTEQ        reduce using rule 52 (valor -> INT .)
    STRICTNEQ       reduce using rule 52 (valor -> INT .)
    LT              reduce using rule 52 (valor -> INT .)
    GT              reduce using rule 52 (valor -> INT .)
    LEQ             reduce using rule 52 (valor -> INT .)
    GEQ             reduce using rule 52 (valor -> INT .)
    AND             reduce using rule 52 (valor -> INT .)
    LOGICAL_AND     reduce using rule 52 (valor -> INT .)
    OR              reduce using rule 52 (valor -> INT .)
    LOGICAL_OR      reduce using rule 52 (valor -> INT .)
    ARROWMAP        reduce using rule 52 (valor -> INT .)
    RBRACKET        reduce using rule 52 (valor -> INT .)
    COLON           reduce using rule 52 (valor -> INT .)
    CASE            reduce using rule 52 (valor -> INT .)
    DEFAULT         reduce using rule 52 (valor -> INT .)
    RBRACE          reduce using rule 52 (valor -> INT .)
    ENDSWITCH       reduce using rule 52 (valor -> INT .)


state 100

    (53) valor -> VARIABLE .

    COMMA           reduce using rule 53 (valor -> VARIABLE .)
    SEMICOLON       reduce using rule 53 (valor -> VARIABLE .)
    RPAREN          reduce using rule 53 (valor -> VARIABLE .)
    EQ              reduce using rule 53 (valor -> VARIABLE .)
    NEQ             reduce using rule 53 (valor -> VARIABLE .)
    STRICTEQ        reduce using rule 53 (valor -> VARIABLE .)
    STRICTNEQ       reduce using rule 53 (valor -> VARIABLE .)
    LT              reduce using rule 53 (valor -> VARIABLE .)
    GT              reduce using rule 53 (valor -> VARIABLE .)
    LEQ             reduce using rule 53 (valor -> VARIABLE .)
    GEQ             reduce using rule 53 (valor -> VARIABLE .)
    AND             reduce using rule 53 (valor -> VARIABLE .)
    LOGICAL_AND     reduce using rule 53 (valor -> VARIABLE .)
    OR              reduce using rule 53 (valor -> VARIABLE .)
    LOGICAL_OR      reduce using rule 53 (valor -> VARIABLE .)
    ARROWMAP        reduce using rule 53 (valor -> VARIABLE .)
    RBRACKET        reduce using rule 53 (valor -> VARIABLE .)
    COLON           reduce using rule 53 (valor -> VARIABLE .)
    CASE            reduce using rule 53 (valor -> VARIABLE .)
    DEFAULT         reduce using rule 53 (valor -> VARIABLE .)
    RBRACE          reduce using rule 53 (valor -> VARIABLE .)
    ENDSWITCH       reduce using rule 53 (valor -> VARIABLE .)


state 101

    (54) valor -> FLOAT .

    COMMA           reduce using rule 54 (valor -> FLOAT .)
    SEMICOLON       reduce using rule 54 (valor -> FLOAT .)
    RPAREN          reduce using rule 54 (valor -> FLOAT .)
    EQ              reduce using rule 54 (valor -> FLOAT .)
    NEQ             reduce using rule 54 (valor -> FLOAT .)
    STRICTEQ        reduce using rule 54 (valor -> FLOAT .)
    STRICTNEQ       reduce using rule 54 (valor -> FLOAT .)
    LT              reduce using rule 54 (valor -> FLOAT .)
    GT              reduce using rule 54 (valor -> FLOAT .)
    LEQ             reduce using rule 54 (valor -> FLOAT .)
    GEQ             reduce using rule 54 (valor -> FLOAT .)
    AND             reduce using rule 54 (valor -> FLOAT .)
    LOGICAL_AND     reduce using rule 54 (valor -> FLOAT .)
    OR              reduce using rule 54 (valor -> FLOAT .)
    LOGICAL_OR      reduce using rule 54 (valor -> FLOAT .)
    ARROWMAP        reduce using rule 54 (valor -> FLOAT .)
    RBRACKET        reduce using rule 54 (valor -> FLOAT .)
    COLON           reduce using rule 54 (valor -> FLOAT .)
    CASE            reduce using rule 54 (valor -> FLOAT .)
    DEFAULT         reduce using rule 54 (valor -> FLOAT .)
    RBRACE          reduce using rule 54 (valor -> FLOAT .)
    ENDSWITCH       reduce using rule 54 (valor -> FLOAT .)


state 102

    (59) valor -> llamadaFuncion .

    COMMA           reduce using rule 59 (valor -> llamadaFuncion .)
    SEMICOLON       reduce using rule 59 (valor -> llamadaFuncion .)
    RPAREN          reduce using rule 59 (valor -> llamadaFuncion .)
    EQ              reduce using rule 59 (valor -> llamadaFuncion .)
    NEQ             reduce using rule 59 (valor -> llamadaFuncion .)
    STRICTEQ        reduce using rule 59 (valor -> llamadaFuncion .)
    STRICTNEQ       reduce using rule 59 (valor -> llamadaFuncion .)
    LT              reduce using rule 59 (valor -> llamadaFuncion .)
    GT              reduce using rule 59 (valor -> llamadaFuncion .)
    LEQ             reduce using rule 59 (valor -> llamadaFuncion .)
    GEQ             reduce using rule 59 (valor -> llamadaFuncion .)
    AND             reduce using rule 59 (valor -> llamadaFuncion .)
    LOGICAL_AND     reduce using rule 59 (valor -> llamadaFuncion .)
    OR              reduce using rule 59 (valor -> llamadaFuncion .)
    LOGICAL_OR      reduce using rule 59 (valor -> llamadaFuncion .)
    ARROWMAP        reduce using rule 59 (valor -> llamadaFuncion .)
    RBRACKET        reduce using rule 59 (valor -> llamadaFuncion .)
    COLON           reduce using rule 59 (valor -> llamadaFuncion .)
    CASE            reduce using rule 59 (valor -> llamadaFuncion .)
    DEFAULT         reduce using rule 59 (valor -> llamadaFuncion .)
    RBRACE          reduce using rule 59 (valor -> llamadaFuncion .)
    ENDSWITCH       reduce using rule 59 (valor -> llamadaFuncion .)


state 103

    (68) impresion -> PRINT imprimir . SEMICOLON

    SEMICOLON       shift and go to state 163


state 104

    (166) try -> TRY LBRACE . body RBRACE catchs
    (167) try -> TRY LBRACE . body RBRACE catchs FINALLY LBRACE body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 164
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 105

    (172) funcionDeclaration -> FUNCTION ID . LPAREN argumentos RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 168


state 106

    (174) llamadaFuncion -> ID LPAREN . argumentos RPAREN
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    argumentos                     shift and go to state 169
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 107

    (173) funcionDeclaration -> data FUNCTION . ID LPAREN argumentos RPAREN LBRACE body RBRACE

    ID              shift and go to state 181


state 108

    (178) classDeclarate -> data CLASS . ID LBRACE classBody RBRACE
    (189) classInterface -> data CLASS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> data CLASS . ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 182


state 109

    (25) returnStatement -> RETURN expresion . SEMICOLON
    (36) expresion -> expresion . opLogic expresion
    (106) opLogic -> . AND
    (107) opLogic -> . LOGICAL_AND
    (108) opLogic -> . OR
    (109) opLogic -> . LOGICAL_OR

    SEMICOLON       shift and go to state 183
    AND             shift and go to state 185
    LOGICAL_AND     shift and go to state 186
    OR              shift and go to state 187
    LOGICAL_OR      shift and go to state 188

    opLogic                        shift and go to state 184

state 110

    (26) returnStatement -> RETURN SEMICOLON .

    VARIABLE        reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    ECHO            reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    TRY             reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    FUNCTION        reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    ID              reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    EMPTY           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    CLASS           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    INTERFACE       reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    INCLUDE         reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    NAMESPACE       reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    THROW           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    CONST           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    THIS            reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    INT             reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    ABSTRACT        reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    PRIVATE         reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    PROTECTED       reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    PUBLIC          reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    STATIC          reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    FINAL           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    STRING          reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    NULL            reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    ARRAY           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    IF              reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    DO              reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    FOREACH         reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    FOR             reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    CLOSETAG        reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    ENDSWITCH       reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    CASE            reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 26 (returnStatement -> RETURN SEMICOLON .)


state 111

    (35) expresion -> valor .
    (210) concatenate -> valor . DOT STRING

    SEMICOLON       reduce using rule 35 (expresion -> valor .)
    AND             reduce using rule 35 (expresion -> valor .)
    LOGICAL_AND     reduce using rule 35 (expresion -> valor .)
    OR              reduce using rule 35 (expresion -> valor .)
    LOGICAL_OR      reduce using rule 35 (expresion -> valor .)
    RPAREN          reduce using rule 35 (expresion -> valor .)
    DOT             shift and go to state 130


state 112

    (37) expresion -> comparacion .

    SEMICOLON       reduce using rule 37 (expresion -> comparacion .)
    AND             reduce using rule 37 (expresion -> comparacion .)
    LOGICAL_AND     reduce using rule 37 (expresion -> comparacion .)
    OR              reduce using rule 37 (expresion -> comparacion .)
    LOGICAL_OR      reduce using rule 37 (expresion -> comparacion .)
    RPAREN          reduce using rule 37 (expresion -> comparacion .)


state 113

    (38) expresion -> LPAREN . comparacion RPAREN
    (40) expresion -> LPAREN . expresion RPAREN
    (48) operaArit -> LPAREN . operaArit RPAREN
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (35) expresion -> . valor
    (36) expresion -> . expresion opLogic expresion
    (37) expresion -> . comparacion
    (38) expresion -> . LPAREN comparacion RPAREN
    (39) expresion -> . operaArit
    (40) expresion -> . LPAREN expresion RPAREN
    (41) expresion -> . llamadaFuncion
    (42) expresion -> . concatenate
    (43) expresion -> . minuse
    (44) expresion -> . pluse
    (46) operaArit -> . valornumerico
    (47) operaArit -> . operaArit operador operaArit
    (48) operaArit -> . LPAREN operaArit RPAREN
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (210) concatenate -> . valor DOT STRING
    (211) minuse -> . MINUSEQUAL INT
    (212) pluse -> . PLUSEQUAL INT

    LPAREN          shift and go to state 113
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    VARIABLE        shift and go to state 192
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    MINUSEQUAL      shift and go to state 83
    PLUSEQUAL       shift and go to state 84

    comparacion                    shift and go to state 189
    expresion                      shift and go to state 190
    operaArit                      shift and go to state 191
    valornumerico                  shift and go to state 122
    valor                          shift and go to state 111
    llamadaFuncion                 shift and go to state 115
    concatenate                    shift and go to state 116
    minuse                         shift and go to state 117
    pluse                          shift and go to state 118

state 114

    (39) expresion -> operaArit .
    (47) operaArit -> operaArit . operador operaArit
    (60) operador -> . PLUS
    (61) operador -> . MINUS
    (62) operador -> . TIMES
    (63) operador -> . DIVIDE
    (64) operador -> . MODULO
    (65) operador -> . POTENCIA

    SEMICOLON       reduce using rule 39 (expresion -> operaArit .)
    AND             reduce using rule 39 (expresion -> operaArit .)
    LOGICAL_AND     reduce using rule 39 (expresion -> operaArit .)
    OR              reduce using rule 39 (expresion -> operaArit .)
    LOGICAL_OR      reduce using rule 39 (expresion -> operaArit .)
    RPAREN          reduce using rule 39 (expresion -> operaArit .)
    PLUS            shift and go to state 194
    MINUS           shift and go to state 195
    TIMES           shift and go to state 196
    DIVIDE          shift and go to state 197
    MODULO          shift and go to state 198
    POTENCIA        shift and go to state 199

    operador                       shift and go to state 193

state 115

    (41) expresion -> llamadaFuncion .
    (59) valor -> llamadaFuncion .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 41 (expresion -> llamadaFuncion .)
  ! reduce/reduce conflict for AND resolved using rule 41 (expresion -> llamadaFuncion .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 41 (expresion -> llamadaFuncion .)
  ! reduce/reduce conflict for OR resolved using rule 41 (expresion -> llamadaFuncion .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 41 (expresion -> llamadaFuncion .)
  ! reduce/reduce conflict for RPAREN resolved using rule 41 (expresion -> llamadaFuncion .)
    SEMICOLON       reduce using rule 41 (expresion -> llamadaFuncion .)
    AND             reduce using rule 41 (expresion -> llamadaFuncion .)
    LOGICAL_AND     reduce using rule 41 (expresion -> llamadaFuncion .)
    OR              reduce using rule 41 (expresion -> llamadaFuncion .)
    LOGICAL_OR      reduce using rule 41 (expresion -> llamadaFuncion .)
    RPAREN          reduce using rule 41 (expresion -> llamadaFuncion .)
    DOT             reduce using rule 59 (valor -> llamadaFuncion .)

  ! SEMICOLON       [ reduce using rule 59 (valor -> llamadaFuncion .) ]
  ! AND             [ reduce using rule 59 (valor -> llamadaFuncion .) ]
  ! LOGICAL_AND     [ reduce using rule 59 (valor -> llamadaFuncion .) ]
  ! OR              [ reduce using rule 59 (valor -> llamadaFuncion .) ]
  ! LOGICAL_OR      [ reduce using rule 59 (valor -> llamadaFuncion .) ]
  ! RPAREN          [ reduce using rule 59 (valor -> llamadaFuncion .) ]


state 116

    (42) expresion -> concatenate .

    SEMICOLON       reduce using rule 42 (expresion -> concatenate .)
    AND             reduce using rule 42 (expresion -> concatenate .)
    LOGICAL_AND     reduce using rule 42 (expresion -> concatenate .)
    OR              reduce using rule 42 (expresion -> concatenate .)
    LOGICAL_OR      reduce using rule 42 (expresion -> concatenate .)
    RPAREN          reduce using rule 42 (expresion -> concatenate .)


state 117

    (43) expresion -> minuse .

    SEMICOLON       reduce using rule 43 (expresion -> minuse .)
    AND             reduce using rule 43 (expresion -> minuse .)
    LOGICAL_AND     reduce using rule 43 (expresion -> minuse .)
    OR              reduce using rule 43 (expresion -> minuse .)
    LOGICAL_OR      reduce using rule 43 (expresion -> minuse .)
    RPAREN          reduce using rule 43 (expresion -> minuse .)


state 118

    (44) expresion -> pluse .

    SEMICOLON       reduce using rule 44 (expresion -> pluse .)
    AND             reduce using rule 44 (expresion -> pluse .)
    LOGICAL_AND     reduce using rule 44 (expresion -> pluse .)
    OR              reduce using rule 44 (expresion -> pluse .)
    LOGICAL_OR      reduce using rule 44 (expresion -> pluse .)
    RPAREN          reduce using rule 44 (expresion -> pluse .)


state 119

    (52) valor -> INT .
    (49) valornumerico -> INT .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for AND resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for OR resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 49 (valornumerico -> INT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (valornumerico -> INT .)
    DOT             reduce using rule 52 (valor -> INT .)
    EQ              reduce using rule 49 (valornumerico -> INT .)
    NEQ             reduce using rule 49 (valornumerico -> INT .)
    STRICTEQ        reduce using rule 49 (valornumerico -> INT .)
    STRICTNEQ       reduce using rule 49 (valornumerico -> INT .)
    LT              reduce using rule 49 (valornumerico -> INT .)
    GT              reduce using rule 49 (valornumerico -> INT .)
    LEQ             reduce using rule 49 (valornumerico -> INT .)
    GEQ             reduce using rule 49 (valornumerico -> INT .)
    PLUS            reduce using rule 49 (valornumerico -> INT .)
    MINUS           reduce using rule 49 (valornumerico -> INT .)
    TIMES           reduce using rule 49 (valornumerico -> INT .)
    DIVIDE          reduce using rule 49 (valornumerico -> INT .)
    MODULO          reduce using rule 49 (valornumerico -> INT .)
    POTENCIA        reduce using rule 49 (valornumerico -> INT .)
    SEMICOLON       reduce using rule 49 (valornumerico -> INT .)
    AND             reduce using rule 49 (valornumerico -> INT .)
    LOGICAL_AND     reduce using rule 49 (valornumerico -> INT .)
    OR              reduce using rule 49 (valornumerico -> INT .)
    LOGICAL_OR      reduce using rule 49 (valornumerico -> INT .)
    RPAREN          reduce using rule 49 (valornumerico -> INT .)

  ! SEMICOLON       [ reduce using rule 52 (valor -> INT .) ]
  ! AND             [ reduce using rule 52 (valor -> INT .) ]
  ! LOGICAL_AND     [ reduce using rule 52 (valor -> INT .) ]
  ! OR              [ reduce using rule 52 (valor -> INT .) ]
  ! LOGICAL_OR      [ reduce using rule 52 (valor -> INT .) ]
  ! RPAREN          [ reduce using rule 52 (valor -> INT .) ]


state 120

    (53) valor -> VARIABLE .
    (51) valornumerico -> VARIABLE .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 51 (valornumerico -> VARIABLE .)
    DOT             reduce using rule 53 (valor -> VARIABLE .)
    EQ              reduce using rule 51 (valornumerico -> VARIABLE .)
    NEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTEQ        reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTNEQ       reduce using rule 51 (valornumerico -> VARIABLE .)
    LT              reduce using rule 51 (valornumerico -> VARIABLE .)
    GT              reduce using rule 51 (valornumerico -> VARIABLE .)
    LEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    GEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    PLUS            reduce using rule 51 (valornumerico -> VARIABLE .)
    MINUS           reduce using rule 51 (valornumerico -> VARIABLE .)
    TIMES           reduce using rule 51 (valornumerico -> VARIABLE .)
    DIVIDE          reduce using rule 51 (valornumerico -> VARIABLE .)
    MODULO          reduce using rule 51 (valornumerico -> VARIABLE .)
    POTENCIA        reduce using rule 51 (valornumerico -> VARIABLE .)
    SEMICOLON       reduce using rule 51 (valornumerico -> VARIABLE .)
    AND             reduce using rule 51 (valornumerico -> VARIABLE .)
    LOGICAL_AND     reduce using rule 51 (valornumerico -> VARIABLE .)
    OR              reduce using rule 51 (valornumerico -> VARIABLE .)
    LOGICAL_OR      reduce using rule 51 (valornumerico -> VARIABLE .)
    RPAREN          reduce using rule 51 (valornumerico -> VARIABLE .)

  ! SEMICOLON       [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! AND             [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! LOGICAL_AND     [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! OR              [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! LOGICAL_OR      [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 53 (valor -> VARIABLE .) ]


state 121

    (54) valor -> FLOAT .
    (50) valornumerico -> FLOAT .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for AND resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for OR resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 50 (valornumerico -> FLOAT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 50 (valornumerico -> FLOAT .)
    DOT             reduce using rule 54 (valor -> FLOAT .)
    EQ              reduce using rule 50 (valornumerico -> FLOAT .)
    NEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    STRICTEQ        reduce using rule 50 (valornumerico -> FLOAT .)
    STRICTNEQ       reduce using rule 50 (valornumerico -> FLOAT .)
    LT              reduce using rule 50 (valornumerico -> FLOAT .)
    GT              reduce using rule 50 (valornumerico -> FLOAT .)
    LEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    GEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    PLUS            reduce using rule 50 (valornumerico -> FLOAT .)
    MINUS           reduce using rule 50 (valornumerico -> FLOAT .)
    TIMES           reduce using rule 50 (valornumerico -> FLOAT .)
    DIVIDE          reduce using rule 50 (valornumerico -> FLOAT .)
    MODULO          reduce using rule 50 (valornumerico -> FLOAT .)
    POTENCIA        reduce using rule 50 (valornumerico -> FLOAT .)
    SEMICOLON       reduce using rule 50 (valornumerico -> FLOAT .)
    AND             reduce using rule 50 (valornumerico -> FLOAT .)
    LOGICAL_AND     reduce using rule 50 (valornumerico -> FLOAT .)
    OR              reduce using rule 50 (valornumerico -> FLOAT .)
    LOGICAL_OR      reduce using rule 50 (valornumerico -> FLOAT .)
    RPAREN          reduce using rule 50 (valornumerico -> FLOAT .)

  ! SEMICOLON       [ reduce using rule 54 (valor -> FLOAT .) ]
  ! AND             [ reduce using rule 54 (valor -> FLOAT .) ]
  ! LOGICAL_AND     [ reduce using rule 54 (valor -> FLOAT .) ]
  ! OR              [ reduce using rule 54 (valor -> FLOAT .) ]
  ! LOGICAL_OR      [ reduce using rule 54 (valor -> FLOAT .) ]
  ! RPAREN          [ reduce using rule 54 (valor -> FLOAT .) ]


state 122

    (66) comparacion -> valornumerico . opSymbol valornumerico
    (46) operaArit -> valornumerico .
    (98) opSymbol -> . EQ
    (99) opSymbol -> . NEQ
    (100) opSymbol -> . STRICTEQ
    (101) opSymbol -> . STRICTNEQ
    (102) opSymbol -> . LT
    (103) opSymbol -> . GT
    (104) opSymbol -> . LEQ
    (105) opSymbol -> . GEQ

    PLUS            reduce using rule 46 (operaArit -> valornumerico .)
    MINUS           reduce using rule 46 (operaArit -> valornumerico .)
    TIMES           reduce using rule 46 (operaArit -> valornumerico .)
    DIVIDE          reduce using rule 46 (operaArit -> valornumerico .)
    MODULO          reduce using rule 46 (operaArit -> valornumerico .)
    POTENCIA        reduce using rule 46 (operaArit -> valornumerico .)
    SEMICOLON       reduce using rule 46 (operaArit -> valornumerico .)
    AND             reduce using rule 46 (operaArit -> valornumerico .)
    LOGICAL_AND     reduce using rule 46 (operaArit -> valornumerico .)
    OR              reduce using rule 46 (operaArit -> valornumerico .)
    LOGICAL_OR      reduce using rule 46 (operaArit -> valornumerico .)
    RPAREN          reduce using rule 46 (operaArit -> valornumerico .)
    EQ              shift and go to state 86
    NEQ             shift and go to state 87
    STRICTEQ        shift and go to state 88
    STRICTNEQ       shift and go to state 89
    LT              shift and go to state 90
    GT              shift and go to state 91
    LEQ             shift and go to state 92
    GEQ             shift and go to state 93

    opSymbol                       shift and go to state 85

state 123

    (175) llamadaFuncion -> EMPTY LPAREN . argumentos RPAREN
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    argumentos                     shift and go to state 200
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 124

    (176) classDeclarate -> CLASS ID . LBRACE classBody RBRACE
    (177) classDeclarate -> CLASS ID . EXTENDS ID LBRACE classBody RBRACE
    (187) classInterface -> CLASS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> CLASS ID . EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    LBRACE          shift and go to state 201
    EXTENDS         shift and go to state 202
    IMPLEMENTS      shift and go to state 203


state 125

    (199) interface -> INTERFACE ID . LBRACE sentenciaList RBRACE

    LBRACE          shift and go to state 204


state 126

    (200) includes -> INCLUDE STRING . SEMICOLON
    (201) includes -> INCLUDE STRING . DOT STRING SEMICOLON

    SEMICOLON       shift and go to state 205
    DOT             shift and go to state 206


state 127

    (202) namespace -> NAMESPACE ID . SEMICOLON

    SEMICOLON       shift and go to state 207


state 128

    (204) throw -> THROW NEW . EXCEPTION LPAREN repiteValores RPAREN SEMICOLON

    EXCEPTION       shift and go to state 208


state 129

    (205) throw -> THROW valor . SEMICOLON

    SEMICOLON       shift and go to state 209


state 130

    (210) concatenate -> valor DOT . STRING

    STRING          shift and go to state 210


state 131

    (207) constdeclaration -> CONST ID . EQUALS valor SEMICOLON

    EQUALS          shift and go to state 211


state 132

    (208) thisdeclaration -> THIS ARROW . ID SEMICOLON
    (209) thisdeclaration -> THIS ARROW . ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 212


state 133

    (86) if -> IF LPAREN . conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> IF LPAREN . conditions RPAREN body SEMICOLON
    (91) conditions -> . condition
    (92) conditions -> . condition opLogic conditions
    (93) conditions -> . LPAREN conditions RPAREN
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 213
    NOT             shift and go to state 217
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    conditions                     shift and go to state 214
    condition                      shift and go to state 215
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 134

    (118) while -> WHILE LPAREN . condition RPAREN LBRACE body RBRACE
    (119) while -> WHILE LPAREN . condition RPAREN LBRACE RBRACE
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    NOT             shift and go to state 217
    LPAREN          shift and go to state 218
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    condition                      shift and go to state 219
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 135

    (120) dowhile -> DO LBRACE . body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 220
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 136

    (121) switch -> SWITCH LPAREN . valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> SWITCH LPAREN . valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 221
    llamadaFuncion                 shift and go to state 102

state 137

    (129) foreach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 222


state 138

    (115) forStatement -> FOR LPAREN . forcondition RPAREN LBRACE body RBRACE
    (116) forcondition -> . VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> . VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    VARIABLE        shift and go to state 224

    forcondition                   shift and go to state 223

state 139

    (31) asignacion -> VARIABLE EQUALS expresion . SEMICOLON
    (36) expresion -> expresion . opLogic expresion
    (106) opLogic -> . AND
    (107) opLogic -> . LOGICAL_AND
    (108) opLogic -> . OR
    (109) opLogic -> . LOGICAL_OR

    SEMICOLON       shift and go to state 225
    AND             shift and go to state 185
    LOGICAL_AND     shift and go to state 186
    OR              shift and go to state 187
    LOGICAL_OR      shift and go to state 188

    opLogic                        shift and go to state 184

state 140

    (34) asignacion -> VARIABLE EQUALS funcion_strlen . SEMICOLON

    SEMICOLON       shift and go to state 226


state 141

    (45) asignacion_fgets -> VARIABLE EQUALS FGETS . LPAREN STDIN RPAREN SEMICOLON

    LPAREN          shift and go to state 227


state 142

    (203) anonymousFunction -> VARIABLE EQUALS FN . LPAREN RPAREN ARROWMAP comparacion SEMICOLON

    LPAREN          shift and go to state 228


state 143

    (136) array -> VARIABLE EQUALS arrays . SEMICOLON

    SEMICOLON       shift and go to state 229


state 144

    (137) array -> VARIABLE EQUALS LBRACKET . arrayAnidado RBRACKET SEMICOLON
    (143) map -> VARIABLE EQUALS LBRACKET . maps RBRACKET SEMICOLON
    (140) arrays -> LBRACKET . repiteValores RBRACKET
    (141) arrayAnidado -> . arrays
    (142) arrayAnidado -> . arrays COMMA arrayAnidado
    (145) maps -> . mapArrow
    (146) maps -> . mapArrow COMMA maps
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (140) arrays -> . LBRACKET repiteValores RBRACKET
    (147) mapArrow -> . valor ARROWMAP valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LBRACKET        shift and go to state 230
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    arrayAnidado                   shift and go to state 231
    maps                           shift and go to state 232
    repiteValores                  shift and go to state 233
    arrays                         shift and go to state 234
    mapArrow                       shift and go to state 235
    valor                          shift and go to state 236
    llamadaFuncion                 shift and go to state 102

state 145

    (138) array -> VARIABLE EQUALS ARRAY . LPAREN repiteValores RPAREN SEMICOLON
    (144) map -> VARIABLE EQUALS ARRAY . LPAREN maps RPAREN SEMICOLON
    (58) valor -> ARRAY .

    LPAREN          shift and go to state 237
    DOT             reduce using rule 58 (valor -> ARRAY .)
    SEMICOLON       reduce using rule 58 (valor -> ARRAY .)
    AND             reduce using rule 58 (valor -> ARRAY .)
    LOGICAL_AND     reduce using rule 58 (valor -> ARRAY .)
    OR              reduce using rule 58 (valor -> ARRAY .)
    LOGICAL_OR      reduce using rule 58 (valor -> ARRAY .)


state 146

    (213) funcion_strlen -> STRLEN . LPAREN STRING RPAREN

    LPAREN          shift and go to state 238


state 147

    (32) asignacion -> VARIABLE minuse SEMICOLON .

    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    ECHO            reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    PRINT           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    TRY             reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    FUNCTION        reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    RETURN          reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    ID              reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    EMPTY           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    CLASS           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    INTERFACE       reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    INCLUDE         reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    NAMESPACE       reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    THROW           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    CONST           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    THIS            reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    INT             reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    FLOAT           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    ABSTRACT        reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    PRIVATE         reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    PROTECTED       reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    PUBLIC          reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    STATIC          reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    FINAL           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    STRING          reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    BOOL            reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    NULL            reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    ARRAY           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    IF              reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    WHILE           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    DO              reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    SWITCH          reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    FOREACH         reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    FOR             reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    CLOSETAG        reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    RBRACE          reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    SEMICOLON       reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    BREAK           reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    ENDSWITCH       reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    CASE            reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)
    DEFAULT         reduce using rule 32 (asignacion -> VARIABLE minuse SEMICOLON .)


state 148

    (33) asignacion -> VARIABLE pluse SEMICOLON .

    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    ECHO            reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    PRINT           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    TRY             reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    FUNCTION        reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    RETURN          reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    ID              reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    EMPTY           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    CLASS           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    INTERFACE       reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    INCLUDE         reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    NAMESPACE       reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    THROW           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    CONST           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    THIS            reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    INT             reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    FLOAT           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    ABSTRACT        reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    PRIVATE         reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    PROTECTED       reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    PUBLIC          reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    STATIC          reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    FINAL           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    STRING          reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    BOOL            reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    NULL            reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    ARRAY           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    IF              reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    WHILE           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    DO              reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    SWITCH          reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    FOREACH         reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    FOR             reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    CLOSETAG        reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    RBRACE          reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    SEMICOLON       reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    BREAK           reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    ENDSWITCH       reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    CASE            reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)
    DEFAULT         reduce using rule 33 (asignacion -> VARIABLE pluse SEMICOLON .)


state 149

    (171) objeto -> VARIABLE ARROW ID . LPAREN argumentos RPAREN SEMICOLON

    LPAREN          shift and go to state 239


state 150

    (206) instance -> VARIABLE INSTANCEOF ID .

    VARIABLE        reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    ECHO            reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    PRINT           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    TRY             reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    FUNCTION        reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    RETURN          reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    ID              reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    EMPTY           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    CLASS           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    INTERFACE       reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    INCLUDE         reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    NAMESPACE       reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    THROW           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    CONST           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    THIS            reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    INT             reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    FLOAT           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    ABSTRACT        reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    PRIVATE         reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    PROTECTED       reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    PUBLIC          reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    STATIC          reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    FINAL           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    STRING          reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    BOOL            reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    NULL            reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    ARRAY           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    IF              reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    WHILE           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    DO              reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    SWITCH          reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    FOREACH         reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    FOR             reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    CLOSETAG        reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    RBRACE          reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    SEMICOLON       reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    BREAK           reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    ENDSWITCH       reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    CASE            reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)
    DEFAULT         reduce using rule 206 (instance -> VARIABLE INSTANCEOF ID .)


state 151

    (78) alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .

    VARIABLE        reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    ECHO            reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    PRINT           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    TRY             reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    FUNCTION        reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    RETURN          reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    ID              reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    EMPTY           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    CLASS           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    INTERFACE       reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    INCLUDE         reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    NAMESPACE       reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    THROW           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    CONST           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    THIS            reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    INT             reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    FLOAT           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    ABSTRACT        reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    PRIVATE         reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    PROTECTED       reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    PUBLIC          reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    STATIC          reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    FINAL           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    STRING          reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    BOOL            reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    NULL            reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    ARRAY           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    IF              reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    WHILE           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    DO              reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    SWITCH          reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    FOREACH         reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    FOR             reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    CLOSETAG        reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    RBRACE          reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    SEMICOLON       reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    BREAK           reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    ENDSWITCH       reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    CASE            reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)
    DEFAULT         reduce using rule 78 (alterVar -> VARIABLE DOUBLEPLUS SEMICOLON .)


state 152

    (79) alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .

    VARIABLE        reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    ECHO            reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    PRINT           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    TRY             reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    FUNCTION        reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    RETURN          reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    ID              reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    EMPTY           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    CLASS           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    INTERFACE       reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    INCLUDE         reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    NAMESPACE       reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    THROW           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    CONST           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    THIS            reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    INT             reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    FLOAT           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    ABSTRACT        reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    PRIVATE         reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    PROTECTED       reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    PUBLIC          reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    STATIC          reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    FINAL           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    STRING          reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    BOOL            reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    NULL            reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    ARRAY           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    IF              reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    WHILE           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    DO              reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    SWITCH          reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    FOREACH         reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    FOR             reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    CLOSETAG        reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    RBRACE          reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    SEMICOLON       reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    BREAK           reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    ENDSWITCH       reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    CASE            reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)
    DEFAULT         reduce using rule 79 (alterVar -> VARIABLE DOUBLEMINUS SEMICOLON .)


state 153

    (211) minuse -> MINUSEQUAL INT .

    SEMICOLON       reduce using rule 211 (minuse -> MINUSEQUAL INT .)
    AND             reduce using rule 211 (minuse -> MINUSEQUAL INT .)
    LOGICAL_AND     reduce using rule 211 (minuse -> MINUSEQUAL INT .)
    OR              reduce using rule 211 (minuse -> MINUSEQUAL INT .)
    LOGICAL_OR      reduce using rule 211 (minuse -> MINUSEQUAL INT .)
    RPAREN          reduce using rule 211 (minuse -> MINUSEQUAL INT .)


state 154

    (212) pluse -> PLUSEQUAL INT .

    SEMICOLON       reduce using rule 212 (pluse -> PLUSEQUAL INT .)
    AND             reduce using rule 212 (pluse -> PLUSEQUAL INT .)
    LOGICAL_AND     reduce using rule 212 (pluse -> PLUSEQUAL INT .)
    OR              reduce using rule 212 (pluse -> PLUSEQUAL INT .)
    LOGICAL_OR      reduce using rule 212 (pluse -> PLUSEQUAL INT .)
    RPAREN          reduce using rule 212 (pluse -> PLUSEQUAL INT .)


state 155

    (66) comparacion -> valornumerico opSymbol valornumerico .

    VARIABLE        reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    ECHO            reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    PRINT           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    TRY             reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    FUNCTION        reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    RETURN          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    ID              reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    EMPTY           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    CLASS           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    INTERFACE       reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    INCLUDE         reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    NAMESPACE       reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    THROW           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    CONST           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    THIS            reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    INT             reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    FLOAT           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    ABSTRACT        reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    PRIVATE         reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    PROTECTED       reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    PUBLIC          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    STATIC          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    FINAL           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    STRING          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    BOOL            reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    NULL            reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    ARRAY           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    IF              reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    WHILE           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    DO              reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    SWITCH          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    FOREACH         reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    FOR             reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    CLOSETAG        reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    SEMICOLON       reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    AND             reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    LOGICAL_AND     reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    OR              reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    LOGICAL_OR      reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    RBRACE          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    RPAREN          reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    BREAK           reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    ENDSWITCH       reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    CASE            reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)
    DEFAULT         reduce using rule 66 (comparacion -> valornumerico opSymbol valornumerico .)


state 156

    (49) valornumerico -> INT .

    VARIABLE        reduce using rule 49 (valornumerico -> INT .)
    ECHO            reduce using rule 49 (valornumerico -> INT .)
    PRINT           reduce using rule 49 (valornumerico -> INT .)
    TRY             reduce using rule 49 (valornumerico -> INT .)
    FUNCTION        reduce using rule 49 (valornumerico -> INT .)
    RETURN          reduce using rule 49 (valornumerico -> INT .)
    ID              reduce using rule 49 (valornumerico -> INT .)
    EMPTY           reduce using rule 49 (valornumerico -> INT .)
    CLASS           reduce using rule 49 (valornumerico -> INT .)
    INTERFACE       reduce using rule 49 (valornumerico -> INT .)
    INCLUDE         reduce using rule 49 (valornumerico -> INT .)
    NAMESPACE       reduce using rule 49 (valornumerico -> INT .)
    THROW           reduce using rule 49 (valornumerico -> INT .)
    CONST           reduce using rule 49 (valornumerico -> INT .)
    THIS            reduce using rule 49 (valornumerico -> INT .)
    INT             reduce using rule 49 (valornumerico -> INT .)
    FLOAT           reduce using rule 49 (valornumerico -> INT .)
    ABSTRACT        reduce using rule 49 (valornumerico -> INT .)
    PRIVATE         reduce using rule 49 (valornumerico -> INT .)
    PROTECTED       reduce using rule 49 (valornumerico -> INT .)
    PUBLIC          reduce using rule 49 (valornumerico -> INT .)
    STATIC          reduce using rule 49 (valornumerico -> INT .)
    FINAL           reduce using rule 49 (valornumerico -> INT .)
    STRING          reduce using rule 49 (valornumerico -> INT .)
    BOOL            reduce using rule 49 (valornumerico -> INT .)
    NULL            reduce using rule 49 (valornumerico -> INT .)
    ARRAY           reduce using rule 49 (valornumerico -> INT .)
    IF              reduce using rule 49 (valornumerico -> INT .)
    WHILE           reduce using rule 49 (valornumerico -> INT .)
    DO              reduce using rule 49 (valornumerico -> INT .)
    SWITCH          reduce using rule 49 (valornumerico -> INT .)
    FOREACH         reduce using rule 49 (valornumerico -> INT .)
    FOR             reduce using rule 49 (valornumerico -> INT .)
    CLOSETAG        reduce using rule 49 (valornumerico -> INT .)
    SEMICOLON       reduce using rule 49 (valornumerico -> INT .)
    AND             reduce using rule 49 (valornumerico -> INT .)
    LOGICAL_AND     reduce using rule 49 (valornumerico -> INT .)
    OR              reduce using rule 49 (valornumerico -> INT .)
    LOGICAL_OR      reduce using rule 49 (valornumerico -> INT .)
    RBRACE          reduce using rule 49 (valornumerico -> INT .)
    RPAREN          reduce using rule 49 (valornumerico -> INT .)
    BREAK           reduce using rule 49 (valornumerico -> INT .)
    ENDSWITCH       reduce using rule 49 (valornumerico -> INT .)
    CASE            reduce using rule 49 (valornumerico -> INT .)
    DEFAULT         reduce using rule 49 (valornumerico -> INT .)
    PLUS            reduce using rule 49 (valornumerico -> INT .)
    MINUS           reduce using rule 49 (valornumerico -> INT .)
    TIMES           reduce using rule 49 (valornumerico -> INT .)
    DIVIDE          reduce using rule 49 (valornumerico -> INT .)
    MODULO          reduce using rule 49 (valornumerico -> INT .)
    POTENCIA        reduce using rule 49 (valornumerico -> INT .)
    EQ              reduce using rule 49 (valornumerico -> INT .)
    NEQ             reduce using rule 49 (valornumerico -> INT .)
    STRICTEQ        reduce using rule 49 (valornumerico -> INT .)
    STRICTNEQ       reduce using rule 49 (valornumerico -> INT .)
    LT              reduce using rule 49 (valornumerico -> INT .)
    GT              reduce using rule 49 (valornumerico -> INT .)
    LEQ             reduce using rule 49 (valornumerico -> INT .)
    GEQ             reduce using rule 49 (valornumerico -> INT .)


state 157

    (50) valornumerico -> FLOAT .

    VARIABLE        reduce using rule 50 (valornumerico -> FLOAT .)
    ECHO            reduce using rule 50 (valornumerico -> FLOAT .)
    PRINT           reduce using rule 50 (valornumerico -> FLOAT .)
    TRY             reduce using rule 50 (valornumerico -> FLOAT .)
    FUNCTION        reduce using rule 50 (valornumerico -> FLOAT .)
    RETURN          reduce using rule 50 (valornumerico -> FLOAT .)
    ID              reduce using rule 50 (valornumerico -> FLOAT .)
    EMPTY           reduce using rule 50 (valornumerico -> FLOAT .)
    CLASS           reduce using rule 50 (valornumerico -> FLOAT .)
    INTERFACE       reduce using rule 50 (valornumerico -> FLOAT .)
    INCLUDE         reduce using rule 50 (valornumerico -> FLOAT .)
    NAMESPACE       reduce using rule 50 (valornumerico -> FLOAT .)
    THROW           reduce using rule 50 (valornumerico -> FLOAT .)
    CONST           reduce using rule 50 (valornumerico -> FLOAT .)
    THIS            reduce using rule 50 (valornumerico -> FLOAT .)
    INT             reduce using rule 50 (valornumerico -> FLOAT .)
    FLOAT           reduce using rule 50 (valornumerico -> FLOAT .)
    ABSTRACT        reduce using rule 50 (valornumerico -> FLOAT .)
    PRIVATE         reduce using rule 50 (valornumerico -> FLOAT .)
    PROTECTED       reduce using rule 50 (valornumerico -> FLOAT .)
    PUBLIC          reduce using rule 50 (valornumerico -> FLOAT .)
    STATIC          reduce using rule 50 (valornumerico -> FLOAT .)
    FINAL           reduce using rule 50 (valornumerico -> FLOAT .)
    STRING          reduce using rule 50 (valornumerico -> FLOAT .)
    BOOL            reduce using rule 50 (valornumerico -> FLOAT .)
    NULL            reduce using rule 50 (valornumerico -> FLOAT .)
    ARRAY           reduce using rule 50 (valornumerico -> FLOAT .)
    IF              reduce using rule 50 (valornumerico -> FLOAT .)
    WHILE           reduce using rule 50 (valornumerico -> FLOAT .)
    DO              reduce using rule 50 (valornumerico -> FLOAT .)
    SWITCH          reduce using rule 50 (valornumerico -> FLOAT .)
    FOREACH         reduce using rule 50 (valornumerico -> FLOAT .)
    FOR             reduce using rule 50 (valornumerico -> FLOAT .)
    CLOSETAG        reduce using rule 50 (valornumerico -> FLOAT .)
    SEMICOLON       reduce using rule 50 (valornumerico -> FLOAT .)
    AND             reduce using rule 50 (valornumerico -> FLOAT .)
    LOGICAL_AND     reduce using rule 50 (valornumerico -> FLOAT .)
    OR              reduce using rule 50 (valornumerico -> FLOAT .)
    LOGICAL_OR      reduce using rule 50 (valornumerico -> FLOAT .)
    RBRACE          reduce using rule 50 (valornumerico -> FLOAT .)
    RPAREN          reduce using rule 50 (valornumerico -> FLOAT .)
    BREAK           reduce using rule 50 (valornumerico -> FLOAT .)
    ENDSWITCH       reduce using rule 50 (valornumerico -> FLOAT .)
    CASE            reduce using rule 50 (valornumerico -> FLOAT .)
    DEFAULT         reduce using rule 50 (valornumerico -> FLOAT .)
    PLUS            reduce using rule 50 (valornumerico -> FLOAT .)
    MINUS           reduce using rule 50 (valornumerico -> FLOAT .)
    TIMES           reduce using rule 50 (valornumerico -> FLOAT .)
    DIVIDE          reduce using rule 50 (valornumerico -> FLOAT .)
    MODULO          reduce using rule 50 (valornumerico -> FLOAT .)
    POTENCIA        reduce using rule 50 (valornumerico -> FLOAT .)
    EQ              reduce using rule 50 (valornumerico -> FLOAT .)
    NEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    STRICTEQ        reduce using rule 50 (valornumerico -> FLOAT .)
    STRICTNEQ       reduce using rule 50 (valornumerico -> FLOAT .)
    LT              reduce using rule 50 (valornumerico -> FLOAT .)
    GT              reduce using rule 50 (valornumerico -> FLOAT .)
    LEQ             reduce using rule 50 (valornumerico -> FLOAT .)
    GEQ             reduce using rule 50 (valornumerico -> FLOAT .)


state 158

    (51) valornumerico -> VARIABLE .

    VARIABLE        reduce using rule 51 (valornumerico -> VARIABLE .)
    ECHO            reduce using rule 51 (valornumerico -> VARIABLE .)
    PRINT           reduce using rule 51 (valornumerico -> VARIABLE .)
    TRY             reduce using rule 51 (valornumerico -> VARIABLE .)
    FUNCTION        reduce using rule 51 (valornumerico -> VARIABLE .)
    RETURN          reduce using rule 51 (valornumerico -> VARIABLE .)
    ID              reduce using rule 51 (valornumerico -> VARIABLE .)
    EMPTY           reduce using rule 51 (valornumerico -> VARIABLE .)
    CLASS           reduce using rule 51 (valornumerico -> VARIABLE .)
    INTERFACE       reduce using rule 51 (valornumerico -> VARIABLE .)
    INCLUDE         reduce using rule 51 (valornumerico -> VARIABLE .)
    NAMESPACE       reduce using rule 51 (valornumerico -> VARIABLE .)
    THROW           reduce using rule 51 (valornumerico -> VARIABLE .)
    CONST           reduce using rule 51 (valornumerico -> VARIABLE .)
    THIS            reduce using rule 51 (valornumerico -> VARIABLE .)
    INT             reduce using rule 51 (valornumerico -> VARIABLE .)
    FLOAT           reduce using rule 51 (valornumerico -> VARIABLE .)
    ABSTRACT        reduce using rule 51 (valornumerico -> VARIABLE .)
    PRIVATE         reduce using rule 51 (valornumerico -> VARIABLE .)
    PROTECTED       reduce using rule 51 (valornumerico -> VARIABLE .)
    PUBLIC          reduce using rule 51 (valornumerico -> VARIABLE .)
    STATIC          reduce using rule 51 (valornumerico -> VARIABLE .)
    FINAL           reduce using rule 51 (valornumerico -> VARIABLE .)
    STRING          reduce using rule 51 (valornumerico -> VARIABLE .)
    BOOL            reduce using rule 51 (valornumerico -> VARIABLE .)
    NULL            reduce using rule 51 (valornumerico -> VARIABLE .)
    ARRAY           reduce using rule 51 (valornumerico -> VARIABLE .)
    IF              reduce using rule 51 (valornumerico -> VARIABLE .)
    WHILE           reduce using rule 51 (valornumerico -> VARIABLE .)
    DO              reduce using rule 51 (valornumerico -> VARIABLE .)
    SWITCH          reduce using rule 51 (valornumerico -> VARIABLE .)
    FOREACH         reduce using rule 51 (valornumerico -> VARIABLE .)
    FOR             reduce using rule 51 (valornumerico -> VARIABLE .)
    CLOSETAG        reduce using rule 51 (valornumerico -> VARIABLE .)
    SEMICOLON       reduce using rule 51 (valornumerico -> VARIABLE .)
    AND             reduce using rule 51 (valornumerico -> VARIABLE .)
    LOGICAL_AND     reduce using rule 51 (valornumerico -> VARIABLE .)
    OR              reduce using rule 51 (valornumerico -> VARIABLE .)
    LOGICAL_OR      reduce using rule 51 (valornumerico -> VARIABLE .)
    RBRACE          reduce using rule 51 (valornumerico -> VARIABLE .)
    RPAREN          reduce using rule 51 (valornumerico -> VARIABLE .)
    BREAK           reduce using rule 51 (valornumerico -> VARIABLE .)
    ENDSWITCH       reduce using rule 51 (valornumerico -> VARIABLE .)
    CASE            reduce using rule 51 (valornumerico -> VARIABLE .)
    DEFAULT         reduce using rule 51 (valornumerico -> VARIABLE .)
    PLUS            reduce using rule 51 (valornumerico -> VARIABLE .)
    MINUS           reduce using rule 51 (valornumerico -> VARIABLE .)
    TIMES           reduce using rule 51 (valornumerico -> VARIABLE .)
    DIVIDE          reduce using rule 51 (valornumerico -> VARIABLE .)
    MODULO          reduce using rule 51 (valornumerico -> VARIABLE .)
    POTENCIA        reduce using rule 51 (valornumerico -> VARIABLE .)
    EQ              reduce using rule 51 (valornumerico -> VARIABLE .)
    NEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTEQ        reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTNEQ       reduce using rule 51 (valornumerico -> VARIABLE .)
    LT              reduce using rule 51 (valornumerico -> VARIABLE .)
    GT              reduce using rule 51 (valornumerico -> VARIABLE .)
    LEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    GEQ             reduce using rule 51 (valornumerico -> VARIABLE .)


state 159

    (67) impresion -> ECHO imprimir SEMICOLON .

    VARIABLE        reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    ECHO            reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    PRINT           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    TRY             reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    FUNCTION        reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    RETURN          reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    ID              reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    EMPTY           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    CLASS           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    INTERFACE       reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    INCLUDE         reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    NAMESPACE       reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    THROW           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    CONST           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    THIS            reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    INT             reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    FLOAT           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    ABSTRACT        reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    PRIVATE         reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    PROTECTED       reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    PUBLIC          reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    STATIC          reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    FINAL           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    STRING          reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    BOOL            reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    NULL            reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    ARRAY           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    IF              reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    WHILE           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    DO              reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    SWITCH          reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    FOREACH         reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    FOR             reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    CLOSETAG        reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    RBRACE          reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    SEMICOLON       reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    BREAK           reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    ENDSWITCH       reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    CASE            reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)
    DEFAULT         reduce using rule 67 (impresion -> ECHO imprimir SEMICOLON .)


state 160

    (69) imprimir -> LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 240


state 161

    (70) imprimir -> LPAREN RPAREN .

    SEMICOLON       reduce using rule 70 (imprimir -> LPAREN RPAREN .)


state 162

    (74) repiteValores -> valor COMMA . repiteValores
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 98
    repiteValores                  shift and go to state 241
    llamadaFuncion                 shift and go to state 102

state 163

    (68) impresion -> PRINT imprimir SEMICOLON .

    VARIABLE        reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    ECHO            reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    PRINT           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    TRY             reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    FUNCTION        reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    RETURN          reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    ID              reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    EMPTY           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    CLASS           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    INTERFACE       reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    INCLUDE         reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    NAMESPACE       reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    THROW           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    CONST           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    THIS            reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    INT             reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    FLOAT           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    ABSTRACT        reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    PRIVATE         reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    PROTECTED       reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    PUBLIC          reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    STATIC          reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    FINAL           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    STRING          reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    BOOL            reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    NULL            reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    ARRAY           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    IF              reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    WHILE           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    DO              reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    SWITCH          reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    FOREACH         reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    FOR             reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    CLOSETAG        reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    RBRACE          reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    SEMICOLON       reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    BREAK           reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    ENDSWITCH       reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    CASE            reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)
    DEFAULT         reduce using rule 68 (impresion -> PRINT imprimir SEMICOLON .)


state 164

    (166) try -> TRY LBRACE body . RBRACE catchs
    (167) try -> TRY LBRACE body . RBRACE catchs FINALLY LBRACE body RBRACE

    RBRACE          shift and go to state 242


state 165

    (110) body -> sentenciaList .

    RBRACE          reduce using rule 110 (body -> sentenciaList .)
    SEMICOLON       reduce using rule 110 (body -> sentenciaList .)
    BREAK           reduce using rule 110 (body -> sentenciaList .)
    ENDSWITCH       reduce using rule 110 (body -> sentenciaList .)
    CASE            reduce using rule 110 (body -> sentenciaList .)
    DEFAULT         reduce using rule 110 (body -> sentenciaList .)


state 166

    (111) body -> empty .

    RBRACE          reduce using rule 111 (body -> empty .)
    SEMICOLON       reduce using rule 111 (body -> empty .)
    BREAK           reduce using rule 111 (body -> empty .)
    ENDSWITCH       reduce using rule 111 (body -> empty .)
    CASE            reduce using rule 111 (body -> empty .)
    DEFAULT         reduce using rule 111 (body -> empty .)


state 167

    (112) sentenciaList -> sentencia .
    (113) sentenciaList -> sentencia . sentenciaList
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 112 (sentenciaList -> sentencia .)
    SEMICOLON       reduce using rule 112 (sentenciaList -> sentencia .)
    BREAK           reduce using rule 112 (sentenciaList -> sentencia .)
    ENDSWITCH       reduce using rule 112 (sentenciaList -> sentencia .)
    CASE            reduce using rule 112 (sentenciaList -> sentencia .)
    DEFAULT         reduce using rule 112 (sentenciaList -> sentencia .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    sentencia                      shift and go to state 167
    sentenciaList                  shift and go to state 243
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 168

    (172) funcionDeclaration -> FUNCTION ID LPAREN . argumentos RPAREN LBRACE body RBRACE
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    argumentos                     shift and go to state 244
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 169

    (174) llamadaFuncion -> ID LPAREN argumentos . RPAREN

    RPAREN          shift and go to state 245


state 170

    (153) argumentos -> argumento .
    (154) argumentos -> argumento . COMMA argumentos

    RPAREN          reduce using rule 153 (argumentos -> argumento .)
    COMMA           shift and go to state 246


state 171

    (155) argumento -> valor .

    COMMA           reduce using rule 155 (argumento -> valor .)
    RPAREN          reduce using rule 155 (argumento -> valor .)


state 172

    (156) argumento -> type . VARIABLE
    (158) argumento -> type . VARIABLE EQUALS valor

    VARIABLE        shift and go to state 247


state 173

    (157) argumento -> VARIABLE . EQUALS valor
    (53) valor -> VARIABLE .

    EQUALS          shift and go to state 248
    COMMA           reduce using rule 53 (valor -> VARIABLE .)
    RPAREN          reduce using rule 53 (valor -> VARIABLE .)


state 174

    (159) argumento -> empty .

    COMMA           reduce using rule 159 (argumento -> empty .)
    RPAREN          reduce using rule 159 (argumento -> empty .)


state 175

    (160) type -> INT_TYPE .

    VARIABLE        reduce using rule 160 (type -> INT_TYPE .)
    FUNCTION        reduce using rule 160 (type -> INT_TYPE .)


state 176

    (161) type -> FLOAT_TYPE .

    VARIABLE        reduce using rule 161 (type -> FLOAT_TYPE .)
    FUNCTION        reduce using rule 161 (type -> FLOAT_TYPE .)


state 177

    (162) type -> STRING_TYPE .

    VARIABLE        reduce using rule 162 (type -> STRING_TYPE .)
    FUNCTION        reduce using rule 162 (type -> STRING_TYPE .)


state 178

    (163) type -> BOOL_TYPE .

    VARIABLE        reduce using rule 163 (type -> BOOL_TYPE .)
    FUNCTION        reduce using rule 163 (type -> BOOL_TYPE .)


state 179

    (164) type -> ARRAY_TYPE .

    VARIABLE        reduce using rule 164 (type -> ARRAY_TYPE .)
    FUNCTION        reduce using rule 164 (type -> ARRAY_TYPE .)


state 180

    (165) type -> VOID .

    VARIABLE        reduce using rule 165 (type -> VOID .)
    FUNCTION        reduce using rule 165 (type -> VOID .)


state 181

    (173) funcionDeclaration -> data FUNCTION ID . LPAREN argumentos RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 249


state 182

    (178) classDeclarate -> data CLASS ID . LBRACE classBody RBRACE
    (189) classInterface -> data CLASS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> data CLASS ID . EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    LBRACE          shift and go to state 250
    IMPLEMENTS      shift and go to state 251
    EXTENDS         shift and go to state 252


state 183

    (25) returnStatement -> RETURN expresion SEMICOLON .

    VARIABLE        reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    ECHO            reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    PRINT           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    TRY             reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    FUNCTION        reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    EMPTY           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    CLASS           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    INTERFACE       reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    INCLUDE         reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    NAMESPACE       reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    THROW           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    CONST           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    THIS            reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    INT             reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    FLOAT           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    ABSTRACT        reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    PRIVATE         reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    PROTECTED       reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    PUBLIC          reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    STATIC          reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    FINAL           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    STRING          reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    BOOL            reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    NULL            reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    ARRAY           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    SWITCH          reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    FOREACH         reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    FOR             reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    CLOSETAG        reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    RBRACE          reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    SEMICOLON       reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    BREAK           reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    ENDSWITCH       reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    CASE            reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)
    DEFAULT         reduce using rule 25 (returnStatement -> RETURN expresion SEMICOLON .)


state 184

    (36) expresion -> expresion opLogic . expresion
    (35) expresion -> . valor
    (36) expresion -> . expresion opLogic expresion
    (37) expresion -> . comparacion
    (38) expresion -> . LPAREN comparacion RPAREN
    (39) expresion -> . operaArit
    (40) expresion -> . LPAREN expresion RPAREN
    (41) expresion -> . llamadaFuncion
    (42) expresion -> . concatenate
    (43) expresion -> . minuse
    (44) expresion -> . pluse
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (46) operaArit -> . valornumerico
    (47) operaArit -> . operaArit operador operaArit
    (48) operaArit -> . LPAREN operaArit RPAREN
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (210) concatenate -> . valor DOT STRING
    (211) minuse -> . MINUSEQUAL INT
    (212) pluse -> . PLUSEQUAL INT
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    LPAREN          shift and go to state 113
    INT             shift and go to state 119
    VARIABLE        shift and go to state 120
    FLOAT           shift and go to state 121
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    MINUSEQUAL      shift and go to state 83
    PLUSEQUAL       shift and go to state 84

    expresion                      shift and go to state 253
    valor                          shift and go to state 111
    comparacion                    shift and go to state 112
    operaArit                      shift and go to state 114
    llamadaFuncion                 shift and go to state 115
    concatenate                    shift and go to state 116
    minuse                         shift and go to state 117
    pluse                          shift and go to state 118
    valornumerico                  shift and go to state 122

state 185

    (106) opLogic -> AND .

    LPAREN          reduce using rule 106 (opLogic -> AND .)
    INT             reduce using rule 106 (opLogic -> AND .)
    VARIABLE        reduce using rule 106 (opLogic -> AND .)
    FLOAT           reduce using rule 106 (opLogic -> AND .)
    STRING          reduce using rule 106 (opLogic -> AND .)
    BOOL            reduce using rule 106 (opLogic -> AND .)
    NULL            reduce using rule 106 (opLogic -> AND .)
    ARRAY           reduce using rule 106 (opLogic -> AND .)
    ID              reduce using rule 106 (opLogic -> AND .)
    EMPTY           reduce using rule 106 (opLogic -> AND .)
    MINUSEQUAL      reduce using rule 106 (opLogic -> AND .)
    PLUSEQUAL       reduce using rule 106 (opLogic -> AND .)
    NOT             reduce using rule 106 (opLogic -> AND .)


state 186

    (107) opLogic -> LOGICAL_AND .

    LPAREN          reduce using rule 107 (opLogic -> LOGICAL_AND .)
    INT             reduce using rule 107 (opLogic -> LOGICAL_AND .)
    VARIABLE        reduce using rule 107 (opLogic -> LOGICAL_AND .)
    FLOAT           reduce using rule 107 (opLogic -> LOGICAL_AND .)
    STRING          reduce using rule 107 (opLogic -> LOGICAL_AND .)
    BOOL            reduce using rule 107 (opLogic -> LOGICAL_AND .)
    NULL            reduce using rule 107 (opLogic -> LOGICAL_AND .)
    ARRAY           reduce using rule 107 (opLogic -> LOGICAL_AND .)
    ID              reduce using rule 107 (opLogic -> LOGICAL_AND .)
    EMPTY           reduce using rule 107 (opLogic -> LOGICAL_AND .)
    MINUSEQUAL      reduce using rule 107 (opLogic -> LOGICAL_AND .)
    PLUSEQUAL       reduce using rule 107 (opLogic -> LOGICAL_AND .)
    NOT             reduce using rule 107 (opLogic -> LOGICAL_AND .)


state 187

    (108) opLogic -> OR .

    LPAREN          reduce using rule 108 (opLogic -> OR .)
    INT             reduce using rule 108 (opLogic -> OR .)
    VARIABLE        reduce using rule 108 (opLogic -> OR .)
    FLOAT           reduce using rule 108 (opLogic -> OR .)
    STRING          reduce using rule 108 (opLogic -> OR .)
    BOOL            reduce using rule 108 (opLogic -> OR .)
    NULL            reduce using rule 108 (opLogic -> OR .)
    ARRAY           reduce using rule 108 (opLogic -> OR .)
    ID              reduce using rule 108 (opLogic -> OR .)
    EMPTY           reduce using rule 108 (opLogic -> OR .)
    MINUSEQUAL      reduce using rule 108 (opLogic -> OR .)
    PLUSEQUAL       reduce using rule 108 (opLogic -> OR .)
    NOT             reduce using rule 108 (opLogic -> OR .)


state 188

    (109) opLogic -> LOGICAL_OR .

    LPAREN          reduce using rule 109 (opLogic -> LOGICAL_OR .)
    INT             reduce using rule 109 (opLogic -> LOGICAL_OR .)
    VARIABLE        reduce using rule 109 (opLogic -> LOGICAL_OR .)
    FLOAT           reduce using rule 109 (opLogic -> LOGICAL_OR .)
    STRING          reduce using rule 109 (opLogic -> LOGICAL_OR .)
    BOOL            reduce using rule 109 (opLogic -> LOGICAL_OR .)
    NULL            reduce using rule 109 (opLogic -> LOGICAL_OR .)
    ARRAY           reduce using rule 109 (opLogic -> LOGICAL_OR .)
    ID              reduce using rule 109 (opLogic -> LOGICAL_OR .)
    EMPTY           reduce using rule 109 (opLogic -> LOGICAL_OR .)
    MINUSEQUAL      reduce using rule 109 (opLogic -> LOGICAL_OR .)
    PLUSEQUAL       reduce using rule 109 (opLogic -> LOGICAL_OR .)
    NOT             reduce using rule 109 (opLogic -> LOGICAL_OR .)


state 189

    (38) expresion -> LPAREN comparacion . RPAREN
    (37) expresion -> comparacion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 254
    AND             reduce using rule 37 (expresion -> comparacion .)
    LOGICAL_AND     reduce using rule 37 (expresion -> comparacion .)
    OR              reduce using rule 37 (expresion -> comparacion .)
    LOGICAL_OR      reduce using rule 37 (expresion -> comparacion .)

  ! RPAREN          [ reduce using rule 37 (expresion -> comparacion .) ]


state 190

    (40) expresion -> LPAREN expresion . RPAREN
    (36) expresion -> expresion . opLogic expresion
    (106) opLogic -> . AND
    (107) opLogic -> . LOGICAL_AND
    (108) opLogic -> . OR
    (109) opLogic -> . LOGICAL_OR

    RPAREN          shift and go to state 255
    AND             shift and go to state 185
    LOGICAL_AND     shift and go to state 186
    OR              shift and go to state 187
    LOGICAL_OR      shift and go to state 188

    opLogic                        shift and go to state 184

state 191

    (48) operaArit -> LPAREN operaArit . RPAREN
    (39) expresion -> operaArit .
    (47) operaArit -> operaArit . operador operaArit
    (60) operador -> . PLUS
    (61) operador -> . MINUS
    (62) operador -> . TIMES
    (63) operador -> . DIVIDE
    (64) operador -> . MODULO
    (65) operador -> . POTENCIA

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 256
    AND             reduce using rule 39 (expresion -> operaArit .)
    LOGICAL_AND     reduce using rule 39 (expresion -> operaArit .)
    OR              reduce using rule 39 (expresion -> operaArit .)
    LOGICAL_OR      reduce using rule 39 (expresion -> operaArit .)
    PLUS            shift and go to state 194
    MINUS           shift and go to state 195
    TIMES           shift and go to state 196
    DIVIDE          shift and go to state 197
    MODULO          shift and go to state 198
    POTENCIA        shift and go to state 199

  ! RPAREN          [ reduce using rule 39 (expresion -> operaArit .) ]

    operador                       shift and go to state 193

state 192

    (51) valornumerico -> VARIABLE .
    (53) valor -> VARIABLE .

  ! reduce/reduce conflict for RPAREN resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 51 (valornumerico -> VARIABLE .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 51 (valornumerico -> VARIABLE .)
    EQ              reduce using rule 51 (valornumerico -> VARIABLE .)
    NEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTEQ        reduce using rule 51 (valornumerico -> VARIABLE .)
    STRICTNEQ       reduce using rule 51 (valornumerico -> VARIABLE .)
    LT              reduce using rule 51 (valornumerico -> VARIABLE .)
    GT              reduce using rule 51 (valornumerico -> VARIABLE .)
    LEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    GEQ             reduce using rule 51 (valornumerico -> VARIABLE .)
    RPAREN          reduce using rule 51 (valornumerico -> VARIABLE .)
    PLUS            reduce using rule 51 (valornumerico -> VARIABLE .)
    MINUS           reduce using rule 51 (valornumerico -> VARIABLE .)
    TIMES           reduce using rule 51 (valornumerico -> VARIABLE .)
    DIVIDE          reduce using rule 51 (valornumerico -> VARIABLE .)
    MODULO          reduce using rule 51 (valornumerico -> VARIABLE .)
    POTENCIA        reduce using rule 51 (valornumerico -> VARIABLE .)
    AND             reduce using rule 51 (valornumerico -> VARIABLE .)
    LOGICAL_AND     reduce using rule 51 (valornumerico -> VARIABLE .)
    OR              reduce using rule 51 (valornumerico -> VARIABLE .)
    LOGICAL_OR      reduce using rule 51 (valornumerico -> VARIABLE .)
    DOT             reduce using rule 53 (valor -> VARIABLE .)

  ! RPAREN          [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! AND             [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! LOGICAL_AND     [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! OR              [ reduce using rule 53 (valor -> VARIABLE .) ]
  ! LOGICAL_OR      [ reduce using rule 53 (valor -> VARIABLE .) ]


state 193

    (47) operaArit -> operaArit operador . operaArit
    (46) operaArit -> . valornumerico
    (47) operaArit -> . operaArit operador operaArit
    (48) operaArit -> . LPAREN operaArit RPAREN
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    LPAREN          shift and go to state 259
    INT             shift and go to state 156
    FLOAT           shift and go to state 157
    VARIABLE        shift and go to state 158

    operaArit                      shift and go to state 257
    valornumerico                  shift and go to state 258

state 194

    (60) operador -> PLUS .

    LPAREN          reduce using rule 60 (operador -> PLUS .)
    INT             reduce using rule 60 (operador -> PLUS .)
    FLOAT           reduce using rule 60 (operador -> PLUS .)
    VARIABLE        reduce using rule 60 (operador -> PLUS .)


state 195

    (61) operador -> MINUS .

    LPAREN          reduce using rule 61 (operador -> MINUS .)
    INT             reduce using rule 61 (operador -> MINUS .)
    FLOAT           reduce using rule 61 (operador -> MINUS .)
    VARIABLE        reduce using rule 61 (operador -> MINUS .)


state 196

    (62) operador -> TIMES .

    LPAREN          reduce using rule 62 (operador -> TIMES .)
    INT             reduce using rule 62 (operador -> TIMES .)
    FLOAT           reduce using rule 62 (operador -> TIMES .)
    VARIABLE        reduce using rule 62 (operador -> TIMES .)


state 197

    (63) operador -> DIVIDE .

    LPAREN          reduce using rule 63 (operador -> DIVIDE .)
    INT             reduce using rule 63 (operador -> DIVIDE .)
    FLOAT           reduce using rule 63 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 63 (operador -> DIVIDE .)


state 198

    (64) operador -> MODULO .

    LPAREN          reduce using rule 64 (operador -> MODULO .)
    INT             reduce using rule 64 (operador -> MODULO .)
    FLOAT           reduce using rule 64 (operador -> MODULO .)
    VARIABLE        reduce using rule 64 (operador -> MODULO .)


state 199

    (65) operador -> POTENCIA .

    LPAREN          reduce using rule 65 (operador -> POTENCIA .)
    INT             reduce using rule 65 (operador -> POTENCIA .)
    FLOAT           reduce using rule 65 (operador -> POTENCIA .)
    VARIABLE        reduce using rule 65 (operador -> POTENCIA .)


state 200

    (175) llamadaFuncion -> EMPTY LPAREN argumentos . RPAREN

    RPAREN          shift and go to state 260


state 201

    (176) classDeclarate -> CLASS ID LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 261
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 202

    (177) classDeclarate -> CLASS ID EXTENDS . ID LBRACE classBody RBRACE
    (188) classInterface -> CLASS ID EXTENDS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 266


state 203

    (187) classInterface -> CLASS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (191) impInterface -> . ID
    (192) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 267

    impInterface                   shift and go to state 268

state 204

    (199) interface -> INTERFACE ID LBRACE . sentenciaList RBRACE
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    sentenciaList                  shift and go to state 269
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 205

    (200) includes -> INCLUDE STRING SEMICOLON .

    VARIABLE        reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    ECHO            reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    PRINT           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    TRY             reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    FUNCTION        reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    RETURN          reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    ID              reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    EMPTY           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    CLASS           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    INTERFACE       reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    INCLUDE         reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    NAMESPACE       reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    THROW           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    CONST           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    THIS            reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    INT             reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    FLOAT           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    ABSTRACT        reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    PRIVATE         reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    PROTECTED       reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    PUBLIC          reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    STATIC          reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    FINAL           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    STRING          reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    BOOL            reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    NULL            reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    ARRAY           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    IF              reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    WHILE           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    DO              reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    SWITCH          reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    FOREACH         reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    FOR             reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    CLOSETAG        reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    RBRACE          reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    SEMICOLON       reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    BREAK           reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    ENDSWITCH       reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    CASE            reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)
    DEFAULT         reduce using rule 200 (includes -> INCLUDE STRING SEMICOLON .)


state 206

    (201) includes -> INCLUDE STRING DOT . STRING SEMICOLON

    STRING          shift and go to state 270


state 207

    (202) namespace -> NAMESPACE ID SEMICOLON .

    VARIABLE        reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    ECHO            reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    PRINT           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    TRY             reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    FUNCTION        reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    RETURN          reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    ID              reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    EMPTY           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    CLASS           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    INTERFACE       reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    INCLUDE         reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    NAMESPACE       reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    THROW           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    CONST           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    THIS            reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    INT             reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    FLOAT           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    ABSTRACT        reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    PRIVATE         reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    PROTECTED       reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    PUBLIC          reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    STATIC          reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    FINAL           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    STRING          reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    BOOL            reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    NULL            reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    ARRAY           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    IF              reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    WHILE           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    DO              reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    SWITCH          reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    FOREACH         reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    FOR             reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    CLOSETAG        reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    RBRACE          reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    SEMICOLON       reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    BREAK           reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    ENDSWITCH       reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    CASE            reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)
    DEFAULT         reduce using rule 202 (namespace -> NAMESPACE ID SEMICOLON .)


state 208

    (204) throw -> THROW NEW EXCEPTION . LPAREN repiteValores RPAREN SEMICOLON

    LPAREN          shift and go to state 271


state 209

    (205) throw -> THROW valor SEMICOLON .

    VARIABLE        reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    ECHO            reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    PRINT           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    TRY             reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    FUNCTION        reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    RETURN          reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    ID              reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    EMPTY           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    CLASS           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    INTERFACE       reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    INCLUDE         reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    NAMESPACE       reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    THROW           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    CONST           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    THIS            reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    INT             reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    FLOAT           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    ABSTRACT        reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    PRIVATE         reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    PROTECTED       reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    PUBLIC          reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    STATIC          reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    FINAL           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    STRING          reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    BOOL            reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    NULL            reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    ARRAY           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    IF              reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    WHILE           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    DO              reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    SWITCH          reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    FOREACH         reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    FOR             reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    CLOSETAG        reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    RBRACE          reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    SEMICOLON       reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    BREAK           reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    ENDSWITCH       reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    CASE            reduce using rule 205 (throw -> THROW valor SEMICOLON .)
    DEFAULT         reduce using rule 205 (throw -> THROW valor SEMICOLON .)


state 210

    (210) concatenate -> valor DOT STRING .

    VARIABLE        reduce using rule 210 (concatenate -> valor DOT STRING .)
    ECHO            reduce using rule 210 (concatenate -> valor DOT STRING .)
    PRINT           reduce using rule 210 (concatenate -> valor DOT STRING .)
    TRY             reduce using rule 210 (concatenate -> valor DOT STRING .)
    FUNCTION        reduce using rule 210 (concatenate -> valor DOT STRING .)
    RETURN          reduce using rule 210 (concatenate -> valor DOT STRING .)
    ID              reduce using rule 210 (concatenate -> valor DOT STRING .)
    EMPTY           reduce using rule 210 (concatenate -> valor DOT STRING .)
    CLASS           reduce using rule 210 (concatenate -> valor DOT STRING .)
    INTERFACE       reduce using rule 210 (concatenate -> valor DOT STRING .)
    INCLUDE         reduce using rule 210 (concatenate -> valor DOT STRING .)
    NAMESPACE       reduce using rule 210 (concatenate -> valor DOT STRING .)
    THROW           reduce using rule 210 (concatenate -> valor DOT STRING .)
    CONST           reduce using rule 210 (concatenate -> valor DOT STRING .)
    THIS            reduce using rule 210 (concatenate -> valor DOT STRING .)
    INT             reduce using rule 210 (concatenate -> valor DOT STRING .)
    FLOAT           reduce using rule 210 (concatenate -> valor DOT STRING .)
    ABSTRACT        reduce using rule 210 (concatenate -> valor DOT STRING .)
    PRIVATE         reduce using rule 210 (concatenate -> valor DOT STRING .)
    PROTECTED       reduce using rule 210 (concatenate -> valor DOT STRING .)
    PUBLIC          reduce using rule 210 (concatenate -> valor DOT STRING .)
    STATIC          reduce using rule 210 (concatenate -> valor DOT STRING .)
    FINAL           reduce using rule 210 (concatenate -> valor DOT STRING .)
    STRING          reduce using rule 210 (concatenate -> valor DOT STRING .)
    BOOL            reduce using rule 210 (concatenate -> valor DOT STRING .)
    NULL            reduce using rule 210 (concatenate -> valor DOT STRING .)
    ARRAY           reduce using rule 210 (concatenate -> valor DOT STRING .)
    IF              reduce using rule 210 (concatenate -> valor DOT STRING .)
    WHILE           reduce using rule 210 (concatenate -> valor DOT STRING .)
    DO              reduce using rule 210 (concatenate -> valor DOT STRING .)
    SWITCH          reduce using rule 210 (concatenate -> valor DOT STRING .)
    FOREACH         reduce using rule 210 (concatenate -> valor DOT STRING .)
    FOR             reduce using rule 210 (concatenate -> valor DOT STRING .)
    CLOSETAG        reduce using rule 210 (concatenate -> valor DOT STRING .)
    SEMICOLON       reduce using rule 210 (concatenate -> valor DOT STRING .)
    AND             reduce using rule 210 (concatenate -> valor DOT STRING .)
    LOGICAL_AND     reduce using rule 210 (concatenate -> valor DOT STRING .)
    OR              reduce using rule 210 (concatenate -> valor DOT STRING .)
    LOGICAL_OR      reduce using rule 210 (concatenate -> valor DOT STRING .)
    RBRACE          reduce using rule 210 (concatenate -> valor DOT STRING .)
    RPAREN          reduce using rule 210 (concatenate -> valor DOT STRING .)
    BREAK           reduce using rule 210 (concatenate -> valor DOT STRING .)
    ENDSWITCH       reduce using rule 210 (concatenate -> valor DOT STRING .)
    CASE            reduce using rule 210 (concatenate -> valor DOT STRING .)
    DEFAULT         reduce using rule 210 (concatenate -> valor DOT STRING .)


state 211

    (207) constdeclaration -> CONST ID EQUALS . valor SEMICOLON
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 272
    llamadaFuncion                 shift and go to state 102

state 212

    (208) thisdeclaration -> THIS ARROW ID . SEMICOLON
    (209) thisdeclaration -> THIS ARROW ID . LPAREN RPAREN SEMICOLON

    SEMICOLON       shift and go to state 273
    LPAREN          shift and go to state 274


state 213

    (93) conditions -> LPAREN . conditions RPAREN
    (97) condition -> LPAREN . conditions RPAREN
    (91) conditions -> . condition
    (92) conditions -> . condition opLogic conditions
    (93) conditions -> . LPAREN conditions RPAREN
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 213
    NOT             shift and go to state 217
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    conditions                     shift and go to state 275
    condition                      shift and go to state 215
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 214

    (86) if -> IF LPAREN conditions . RPAREN LBRACE body RBRACE else_blocks
    (87) if -> IF LPAREN conditions . RPAREN body SEMICOLON

    RPAREN          shift and go to state 276


state 215

    (91) conditions -> condition .
    (92) conditions -> condition . opLogic conditions
    (106) opLogic -> . AND
    (107) opLogic -> . LOGICAL_AND
    (108) opLogic -> . OR
    (109) opLogic -> . LOGICAL_OR

    RPAREN          reduce using rule 91 (conditions -> condition .)
    AND             shift and go to state 185
    LOGICAL_AND     shift and go to state 186
    OR              shift and go to state 187
    LOGICAL_OR      shift and go to state 188

    opLogic                        shift and go to state 277

state 216

    (94) condition -> valor .
    (95) condition -> valor . opSymbol valor
    (98) opSymbol -> . EQ
    (99) opSymbol -> . NEQ
    (100) opSymbol -> . STRICTEQ
    (101) opSymbol -> . STRICTNEQ
    (102) opSymbol -> . LT
    (103) opSymbol -> . GT
    (104) opSymbol -> . LEQ
    (105) opSymbol -> . GEQ

    AND             reduce using rule 94 (condition -> valor .)
    LOGICAL_AND     reduce using rule 94 (condition -> valor .)
    OR              reduce using rule 94 (condition -> valor .)
    LOGICAL_OR      reduce using rule 94 (condition -> valor .)
    RPAREN          reduce using rule 94 (condition -> valor .)
    EQ              shift and go to state 86
    NEQ             shift and go to state 87
    STRICTEQ        shift and go to state 88
    STRICTNEQ       shift and go to state 89
    LT              shift and go to state 90
    GT              shift and go to state 91
    LEQ             shift and go to state 92
    GEQ             shift and go to state 93

    opSymbol                       shift and go to state 278

state 217

    (96) condition -> NOT . condition
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    NOT             shift and go to state 217
    LPAREN          shift and go to state 218
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    condition                      shift and go to state 279
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 218

    (97) condition -> LPAREN . conditions RPAREN
    (91) conditions -> . condition
    (92) conditions -> . condition opLogic conditions
    (93) conditions -> . LPAREN conditions RPAREN
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 213
    NOT             shift and go to state 217
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    conditions                     shift and go to state 280
    condition                      shift and go to state 215
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 219

    (118) while -> WHILE LPAREN condition . RPAREN LBRACE body RBRACE
    (119) while -> WHILE LPAREN condition . RPAREN LBRACE RBRACE

    RPAREN          shift and go to state 281


state 220

    (120) dowhile -> DO LBRACE body . RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    RBRACE          shift and go to state 282


state 221

    (121) switch -> SWITCH LPAREN valor . RPAREN LBRACE caseLists RBRACE
    (122) switch -> SWITCH LPAREN valor . RPAREN COLON caseLists ENDSWITCH SEMICOLON

    RPAREN          shift and go to state 283


state 222

    (129) foreach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN LBRACE body RBRACE

    AS              shift and go to state 284


state 223

    (115) forStatement -> FOR LPAREN forcondition . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 285


state 224

    (116) forcondition -> VARIABLE . EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE . EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    EQUALS          shift and go to state 286


state 225

    (31) asignacion -> VARIABLE EQUALS expresion SEMICOLON .

    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ECHO            reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    TRY             reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FUNCTION        reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ID              reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    EMPTY           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CLASS           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    INTERFACE       reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    INCLUDE         reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    NAMESPACE       reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    THROW           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CONST           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    THIS            reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    INT             reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FLOAT           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ABSTRACT        reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PRIVATE         reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PROTECTED       reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PUBLIC          reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    STATIC          reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FINAL           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    STRING          reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    BOOL            reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    NULL            reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ARRAY           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    IF              reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    DO              reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    SWITCH          reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FOREACH         reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CLOSETAG        reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    RBRACE          reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    SEMICOLON       reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    BREAK           reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ENDSWITCH       reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CASE            reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    DEFAULT         reduce using rule 31 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)


state 226

    (34) asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .

    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    ECHO            reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    PRINT           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    TRY             reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    FUNCTION        reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    RETURN          reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    ID              reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    EMPTY           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    CLASS           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    INTERFACE       reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    INCLUDE         reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    NAMESPACE       reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    THROW           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    CONST           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    THIS            reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    INT             reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    FLOAT           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    ABSTRACT        reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    PRIVATE         reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    PROTECTED       reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    PUBLIC          reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    STATIC          reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    FINAL           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    STRING          reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    BOOL            reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    NULL            reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    ARRAY           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    IF              reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    WHILE           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    DO              reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    SWITCH          reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    FOREACH         reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    FOR             reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    CLOSETAG        reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    RBRACE          reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    SEMICOLON       reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    BREAK           reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    ENDSWITCH       reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    CASE            reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)
    DEFAULT         reduce using rule 34 (asignacion -> VARIABLE EQUALS funcion_strlen SEMICOLON .)


state 227

    (45) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN . STDIN RPAREN SEMICOLON

    STDIN           shift and go to state 287


state 228

    (203) anonymousFunction -> VARIABLE EQUALS FN LPAREN . RPAREN ARROWMAP comparacion SEMICOLON

    RPAREN          shift and go to state 288


state 229

    (136) array -> VARIABLE EQUALS arrays SEMICOLON .

    VARIABLE        reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ECHO            reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PRINT           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    TRY             reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FUNCTION        reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    RETURN          reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ID              reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    EMPTY           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CLASS           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    INTERFACE       reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    INCLUDE         reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    NAMESPACE       reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    THROW           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CONST           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    THIS            reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    INT             reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FLOAT           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ABSTRACT        reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PRIVATE         reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PROTECTED       reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PUBLIC          reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    STATIC          reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FINAL           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    STRING          reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    BOOL            reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    NULL            reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ARRAY           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    IF              reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    WHILE           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    DO              reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    SWITCH          reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FOREACH         reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FOR             reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CLOSETAG        reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    RBRACE          reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    SEMICOLON       reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    BREAK           reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ENDSWITCH       reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CASE            reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    DEFAULT         reduce using rule 136 (array -> VARIABLE EQUALS arrays SEMICOLON .)


state 230

    (140) arrays -> LBRACKET . repiteValores RBRACKET
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    repiteValores                  shift and go to state 233
    valor                          shift and go to state 98
    llamadaFuncion                 shift and go to state 102

state 231

    (137) array -> VARIABLE EQUALS LBRACKET arrayAnidado . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 289


state 232

    (143) map -> VARIABLE EQUALS LBRACKET maps . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 290


state 233

    (140) arrays -> LBRACKET repiteValores . RBRACKET

    RBRACKET        shift and go to state 291


state 234

    (141) arrayAnidado -> arrays .
    (142) arrayAnidado -> arrays . COMMA arrayAnidado

    RBRACKET        reduce using rule 141 (arrayAnidado -> arrays .)
    COMMA           shift and go to state 292


state 235

    (145) maps -> mapArrow .
    (146) maps -> mapArrow . COMMA maps

    RBRACKET        reduce using rule 145 (maps -> mapArrow .)
    RPAREN          reduce using rule 145 (maps -> mapArrow .)
    COMMA           shift and go to state 293


state 236

    (73) repiteValores -> valor .
    (74) repiteValores -> valor . COMMA repiteValores
    (147) mapArrow -> valor . ARROWMAP valor

    RBRACKET        reduce using rule 73 (repiteValores -> valor .)
    RPAREN          reduce using rule 73 (repiteValores -> valor .)
    COMMA           shift and go to state 162
    ARROWMAP        shift and go to state 294


state 237

    (138) array -> VARIABLE EQUALS ARRAY LPAREN . repiteValores RPAREN SEMICOLON
    (144) map -> VARIABLE EQUALS ARRAY LPAREN . maps RPAREN SEMICOLON
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (145) maps -> . mapArrow
    (146) maps -> . mapArrow COMMA maps
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (147) mapArrow -> . valor ARROWMAP valor
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    repiteValores                  shift and go to state 295
    maps                           shift and go to state 296
    valor                          shift and go to state 236
    mapArrow                       shift and go to state 235
    llamadaFuncion                 shift and go to state 102

state 238

    (213) funcion_strlen -> STRLEN LPAREN . STRING RPAREN

    STRING          shift and go to state 297


state 239

    (171) objeto -> VARIABLE ARROW ID LPAREN . argumentos RPAREN SEMICOLON
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    argumentos                     shift and go to state 298
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 240

    (69) imprimir -> LPAREN repiteValores RPAREN .

    SEMICOLON       reduce using rule 69 (imprimir -> LPAREN repiteValores RPAREN .)


state 241

    (74) repiteValores -> valor COMMA repiteValores .

    SEMICOLON       reduce using rule 74 (repiteValores -> valor COMMA repiteValores .)
    RPAREN          reduce using rule 74 (repiteValores -> valor COMMA repiteValores .)
    RBRACKET        reduce using rule 74 (repiteValores -> valor COMMA repiteValores .)


state 242

    (166) try -> TRY LBRACE body RBRACE . catchs
    (167) try -> TRY LBRACE body RBRACE . catchs FINALLY LBRACE body RBRACE
    (169) catchs -> . catch
    (170) catchs -> . catch catchs
    (168) catch -> . CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    CATCH           shift and go to state 301

    catchs                         shift and go to state 299
    catch                          shift and go to state 300

state 243

    (113) sentenciaList -> sentencia sentenciaList .

    RBRACE          reduce using rule 113 (sentenciaList -> sentencia sentenciaList .)
    SEMICOLON       reduce using rule 113 (sentenciaList -> sentencia sentenciaList .)
    BREAK           reduce using rule 113 (sentenciaList -> sentencia sentenciaList .)
    ENDSWITCH       reduce using rule 113 (sentenciaList -> sentencia sentenciaList .)
    CASE            reduce using rule 113 (sentenciaList -> sentencia sentenciaList .)
    DEFAULT         reduce using rule 113 (sentenciaList -> sentencia sentenciaList .)


state 244

    (172) funcionDeclaration -> FUNCTION ID LPAREN argumentos . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 302


state 245

    (174) llamadaFuncion -> ID LPAREN argumentos RPAREN .

    VARIABLE        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ECHO            reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PRINT           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    TRY             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FUNCTION        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RETURN          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ID              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    EMPTY           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CLASS           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    INTERFACE       reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    INCLUDE         reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    NAMESPACE       reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    THROW           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CONST           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    THIS            reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    INT             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FLOAT           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ABSTRACT        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PRIVATE         reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PROTECTED       reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PUBLIC          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STATIC          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FINAL           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STRING          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    BOOL            reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    NULL            reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ARRAY           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    IF              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    WHILE           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    DO              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    SWITCH          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FOREACH         reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FOR             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CLOSETAG        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    DOT             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    COMMA           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    SEMICOLON       reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    AND             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LOGICAL_AND     reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    OR              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LOGICAL_OR      reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RPAREN          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RBRACE          reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    EQ              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    NEQ             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STRICTEQ        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STRICTNEQ       reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LT              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    GT              reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LEQ             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    GEQ             reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ARROWMAP        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RBRACKET        reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    BREAK           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ENDSWITCH       reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CASE            reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    DEFAULT         reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    COLON           reduce using rule 174 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)


state 246

    (154) argumentos -> argumento COMMA . argumentos
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    argumento                      shift and go to state 170
    argumentos                     shift and go to state 303
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 247

    (156) argumento -> type VARIABLE .
    (158) argumento -> type VARIABLE . EQUALS valor

    COMMA           reduce using rule 156 (argumento -> type VARIABLE .)
    RPAREN          reduce using rule 156 (argumento -> type VARIABLE .)
    EQUALS          shift and go to state 304


state 248

    (157) argumento -> VARIABLE EQUALS . valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 305
    llamadaFuncion                 shift and go to state 102

state 249

    (173) funcionDeclaration -> data FUNCTION ID LPAREN . argumentos RPAREN LBRACE body RBRACE
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    argumentos                     shift and go to state 306
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 250

    (178) classDeclarate -> data CLASS ID LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 307
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 251

    (189) classInterface -> data CLASS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (191) impInterface -> . ID
    (192) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 267

    impInterface                   shift and go to state 308

state 252

    (190) classInterface -> data CLASS ID EXTENDS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 309


state 253

    (36) expresion -> expresion opLogic expresion .
    (36) expresion -> expresion . opLogic expresion
    (106) opLogic -> . AND
    (107) opLogic -> . LOGICAL_AND
    (108) opLogic -> . OR
    (109) opLogic -> . LOGICAL_OR

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LOGICAL_AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LOGICAL_OR resolved as shift
    SEMICOLON       reduce using rule 36 (expresion -> expresion opLogic expresion .)
    RPAREN          reduce using rule 36 (expresion -> expresion opLogic expresion .)
    AND             shift and go to state 185
    LOGICAL_AND     shift and go to state 186
    OR              shift and go to state 187
    LOGICAL_OR      shift and go to state 188

  ! AND             [ reduce using rule 36 (expresion -> expresion opLogic expresion .) ]
  ! LOGICAL_AND     [ reduce using rule 36 (expresion -> expresion opLogic expresion .) ]
  ! OR              [ reduce using rule 36 (expresion -> expresion opLogic expresion .) ]
  ! LOGICAL_OR      [ reduce using rule 36 (expresion -> expresion opLogic expresion .) ]

    opLogic                        shift and go to state 184

state 254

    (38) expresion -> LPAREN comparacion RPAREN .

    SEMICOLON       reduce using rule 38 (expresion -> LPAREN comparacion RPAREN .)
    AND             reduce using rule 38 (expresion -> LPAREN comparacion RPAREN .)
    LOGICAL_AND     reduce using rule 38 (expresion -> LPAREN comparacion RPAREN .)
    OR              reduce using rule 38 (expresion -> LPAREN comparacion RPAREN .)
    LOGICAL_OR      reduce using rule 38 (expresion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 38 (expresion -> LPAREN comparacion RPAREN .)


state 255

    (40) expresion -> LPAREN expresion RPAREN .

    SEMICOLON       reduce using rule 40 (expresion -> LPAREN expresion RPAREN .)
    AND             reduce using rule 40 (expresion -> LPAREN expresion RPAREN .)
    LOGICAL_AND     reduce using rule 40 (expresion -> LPAREN expresion RPAREN .)
    OR              reduce using rule 40 (expresion -> LPAREN expresion RPAREN .)
    LOGICAL_OR      reduce using rule 40 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 40 (expresion -> LPAREN expresion RPAREN .)


state 256

    (48) operaArit -> LPAREN operaArit RPAREN .

    PLUS            reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    MINUS           reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    TIMES           reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    DIVIDE          reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    MODULO          reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    POTENCIA        reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    SEMICOLON       reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    AND             reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    LOGICAL_AND     reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    OR              reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    LOGICAL_OR      reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)
    RPAREN          reduce using rule 48 (operaArit -> LPAREN operaArit RPAREN .)


state 257

    (47) operaArit -> operaArit operador operaArit .
    (47) operaArit -> operaArit . operador operaArit
    (60) operador -> . PLUS
    (61) operador -> . MINUS
    (62) operador -> . TIMES
    (63) operador -> . DIVIDE
    (64) operador -> . MODULO
    (65) operador -> . POTENCIA

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
    SEMICOLON       reduce using rule 47 (operaArit -> operaArit operador operaArit .)
    AND             reduce using rule 47 (operaArit -> operaArit operador operaArit .)
    LOGICAL_AND     reduce using rule 47 (operaArit -> operaArit operador operaArit .)
    OR              reduce using rule 47 (operaArit -> operaArit operador operaArit .)
    LOGICAL_OR      reduce using rule 47 (operaArit -> operaArit operador operaArit .)
    RPAREN          reduce using rule 47 (operaArit -> operaArit operador operaArit .)
    PLUS            shift and go to state 194
    MINUS           shift and go to state 195
    TIMES           shift and go to state 196
    DIVIDE          shift and go to state 197
    MODULO          shift and go to state 198
    POTENCIA        shift and go to state 199

  ! PLUS            [ reduce using rule 47 (operaArit -> operaArit operador operaArit .) ]
  ! MINUS           [ reduce using rule 47 (operaArit -> operaArit operador operaArit .) ]
  ! TIMES           [ reduce using rule 47 (operaArit -> operaArit operador operaArit .) ]
  ! DIVIDE          [ reduce using rule 47 (operaArit -> operaArit operador operaArit .) ]
  ! MODULO          [ reduce using rule 47 (operaArit -> operaArit operador operaArit .) ]
  ! POTENCIA        [ reduce using rule 47 (operaArit -> operaArit operador operaArit .) ]

    operador                       shift and go to state 193

state 258

    (46) operaArit -> valornumerico .

    PLUS            reduce using rule 46 (operaArit -> valornumerico .)
    MINUS           reduce using rule 46 (operaArit -> valornumerico .)
    TIMES           reduce using rule 46 (operaArit -> valornumerico .)
    DIVIDE          reduce using rule 46 (operaArit -> valornumerico .)
    MODULO          reduce using rule 46 (operaArit -> valornumerico .)
    POTENCIA        reduce using rule 46 (operaArit -> valornumerico .)
    SEMICOLON       reduce using rule 46 (operaArit -> valornumerico .)
    AND             reduce using rule 46 (operaArit -> valornumerico .)
    LOGICAL_AND     reduce using rule 46 (operaArit -> valornumerico .)
    OR              reduce using rule 46 (operaArit -> valornumerico .)
    LOGICAL_OR      reduce using rule 46 (operaArit -> valornumerico .)
    RPAREN          reduce using rule 46 (operaArit -> valornumerico .)


state 259

    (48) operaArit -> LPAREN . operaArit RPAREN
    (46) operaArit -> . valornumerico
    (47) operaArit -> . operaArit operador operaArit
    (48) operaArit -> . LPAREN operaArit RPAREN
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    LPAREN          shift and go to state 259
    INT             shift and go to state 156
    FLOAT           shift and go to state 157
    VARIABLE        shift and go to state 158

    operaArit                      shift and go to state 310
    valornumerico                  shift and go to state 258

state 260

    (175) llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .

    VARIABLE        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    ECHO            reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    PRINT           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    TRY             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    FUNCTION        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    RETURN          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    ID              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    EMPTY           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    CLASS           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    INTERFACE       reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    INCLUDE         reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    NAMESPACE       reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    THROW           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    CONST           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    THIS            reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    INT             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    FLOAT           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    ABSTRACT        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    PRIVATE         reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    PROTECTED       reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    PUBLIC          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    STATIC          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    FINAL           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    STRING          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    BOOL            reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    NULL            reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    ARRAY           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    IF              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    WHILE           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    DO              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    SWITCH          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    FOREACH         reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    FOR             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    CLOSETAG        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    DOT             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    COMMA           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    SEMICOLON       reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    AND             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    LOGICAL_AND     reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    OR              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    LOGICAL_OR      reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    RPAREN          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    RBRACE          reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    EQ              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    NEQ             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    STRICTEQ        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    STRICTNEQ       reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    LT              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    GT              reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    LEQ             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    GEQ             reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    ARROWMAP        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    RBRACKET        reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    BREAK           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    ENDSWITCH       reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    CASE            reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    DEFAULT         reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)
    COLON           reduce using rule 175 (llamadaFuncion -> EMPTY LPAREN argumentos RPAREN .)


state 261

    (176) classDeclarate -> CLASS ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 311


state 262

    (180) classBody -> classMember .
    (181) classBody -> classMember . classBody
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    RBRACE          reduce using rule 180 (classBody -> classMember .)
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classMember                    shift and go to state 262
    classBody                      shift and go to state 312
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 263

    (182) classMember -> type . VARIABLE SEMICOLON
    (183) classMember -> type . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 313
    FUNCTION        shift and go to state 314


state 264

    (184) classMember -> objectInstantiation .

    INT_TYPE        reduce using rule 184 (classMember -> objectInstantiation .)
    FLOAT_TYPE      reduce using rule 184 (classMember -> objectInstantiation .)
    STRING_TYPE     reduce using rule 184 (classMember -> objectInstantiation .)
    BOOL_TYPE       reduce using rule 184 (classMember -> objectInstantiation .)
    ARRAY_TYPE      reduce using rule 184 (classMember -> objectInstantiation .)
    VOID            reduce using rule 184 (classMember -> objectInstantiation .)
    NEW             reduce using rule 184 (classMember -> objectInstantiation .)
    RBRACE          reduce using rule 184 (classMember -> objectInstantiation .)


state 265

    (185) objectInstantiation -> NEW . ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> NEW . ID LPAREN RPAREN

    ID              shift and go to state 315


state 266

    (177) classDeclarate -> CLASS ID EXTENDS ID . LBRACE classBody RBRACE
    (188) classInterface -> CLASS ID EXTENDS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE

    LBRACE          shift and go to state 316
    IMPLEMENTS      shift and go to state 317


state 267

    (191) impInterface -> ID .
    (192) impInterface -> ID . COMMA impInterface

    LBRACE          reduce using rule 191 (impInterface -> ID .)
    COMMA           shift and go to state 318


state 268

    (187) classInterface -> CLASS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 319


state 269

    (199) interface -> INTERFACE ID LBRACE sentenciaList . RBRACE

    RBRACE          shift and go to state 320


state 270

    (201) includes -> INCLUDE STRING DOT STRING . SEMICOLON

    SEMICOLON       shift and go to state 321


state 271

    (204) throw -> THROW NEW EXCEPTION LPAREN . repiteValores RPAREN SEMICOLON
    (73) repiteValores -> . valor
    (74) repiteValores -> . valor COMMA repiteValores
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    repiteValores                  shift and go to state 322
    valor                          shift and go to state 98
    llamadaFuncion                 shift and go to state 102

state 272

    (207) constdeclaration -> CONST ID EQUALS valor . SEMICOLON

    SEMICOLON       shift and go to state 323


state 273

    (208) thisdeclaration -> THIS ARROW ID SEMICOLON .

    VARIABLE        reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ECHO            reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PRINT           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    TRY             reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FUNCTION        reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    RETURN          reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ID              reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    EMPTY           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CLASS           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    INTERFACE       reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    INCLUDE         reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    NAMESPACE       reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    THROW           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CONST           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    THIS            reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    INT             reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FLOAT           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ABSTRACT        reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PRIVATE         reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PROTECTED       reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PUBLIC          reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    STATIC          reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FINAL           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    STRING          reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    BOOL            reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    NULL            reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ARRAY           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    IF              reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    WHILE           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    DO              reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    SWITCH          reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FOREACH         reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FOR             reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CLOSETAG        reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    RBRACE          reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    SEMICOLON       reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    BREAK           reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ENDSWITCH       reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CASE            reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    DEFAULT         reduce using rule 208 (thisdeclaration -> THIS ARROW ID SEMICOLON .)


state 274

    (209) thisdeclaration -> THIS ARROW ID LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 324


state 275

    (93) conditions -> LPAREN conditions . RPAREN
    (97) condition -> LPAREN conditions . RPAREN

    RPAREN          shift and go to state 325


state 276

    (86) if -> IF LPAREN conditions RPAREN . LBRACE body RBRACE else_blocks
    (87) if -> IF LPAREN conditions RPAREN . body SEMICOLON
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    LBRACE          shift and go to state 326
    SEMICOLON       reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 327
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 277

    (92) conditions -> condition opLogic . conditions
    (91) conditions -> . condition
    (92) conditions -> . condition opLogic conditions
    (93) conditions -> . LPAREN conditions RPAREN
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 213
    NOT             shift and go to state 217
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    condition                      shift and go to state 215
    conditions                     shift and go to state 328
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 278

    (95) condition -> valor opSymbol . valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 329
    llamadaFuncion                 shift and go to state 102

state 279

    (96) condition -> NOT condition .

    AND             reduce using rule 96 (condition -> NOT condition .)
    LOGICAL_AND     reduce using rule 96 (condition -> NOT condition .)
    OR              reduce using rule 96 (condition -> NOT condition .)
    LOGICAL_OR      reduce using rule 96 (condition -> NOT condition .)
    RPAREN          reduce using rule 96 (condition -> NOT condition .)


state 280

    (97) condition -> LPAREN conditions . RPAREN

    RPAREN          shift and go to state 330


state 281

    (118) while -> WHILE LPAREN condition RPAREN . LBRACE body RBRACE
    (119) while -> WHILE LPAREN condition RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 331


state 282

    (120) dowhile -> DO LBRACE body RBRACE . WHILE LPAREN condition RPAREN SEMICOLON

    WHILE           shift and go to state 332


state 283

    (121) switch -> SWITCH LPAREN valor RPAREN . LBRACE caseLists RBRACE
    (122) switch -> SWITCH LPAREN valor RPAREN . COLON caseLists ENDSWITCH SEMICOLON

    LBRACE          shift and go to state 333
    COLON           shift and go to state 334


state 284

    (129) foreach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 335


state 285

    (115) forStatement -> FOR LPAREN forcondition RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 336


state 286

    (116) forcondition -> VARIABLE EQUALS . INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS . INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    INT             shift and go to state 337


state 287

    (45) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN . RPAREN SEMICOLON

    RPAREN          shift and go to state 338


state 288

    (203) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN . ARROWMAP comparacion SEMICOLON

    ARROWMAP        shift and go to state 339


state 289

    (137) array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 340


state 290

    (143) map -> VARIABLE EQUALS LBRACKET maps RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 341


state 291

    (140) arrays -> LBRACKET repiteValores RBRACKET .

    SEMICOLON       reduce using rule 140 (arrays -> LBRACKET repiteValores RBRACKET .)
    COMMA           reduce using rule 140 (arrays -> LBRACKET repiteValores RBRACKET .)
    RBRACKET        reduce using rule 140 (arrays -> LBRACKET repiteValores RBRACKET .)


state 292

    (142) arrayAnidado -> arrays COMMA . arrayAnidado
    (141) arrayAnidado -> . arrays
    (142) arrayAnidado -> . arrays COMMA arrayAnidado
    (140) arrays -> . LBRACKET repiteValores RBRACKET

    LBRACKET        shift and go to state 230

    arrays                         shift and go to state 234
    arrayAnidado                   shift and go to state 342

state 293

    (146) maps -> mapArrow COMMA . maps
    (145) maps -> . mapArrow
    (146) maps -> . mapArrow COMMA maps
    (147) mapArrow -> . valor ARROWMAP valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    mapArrow                       shift and go to state 235
    maps                           shift and go to state 343
    valor                          shift and go to state 344
    llamadaFuncion                 shift and go to state 102

state 294

    (147) mapArrow -> valor ARROWMAP . valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 345
    llamadaFuncion                 shift and go to state 102

state 295

    (138) array -> VARIABLE EQUALS ARRAY LPAREN repiteValores . RPAREN SEMICOLON

    RPAREN          shift and go to state 346


state 296

    (144) map -> VARIABLE EQUALS ARRAY LPAREN maps . RPAREN SEMICOLON

    RPAREN          shift and go to state 347


state 297

    (213) funcion_strlen -> STRLEN LPAREN STRING . RPAREN

    RPAREN          shift and go to state 348


state 298

    (171) objeto -> VARIABLE ARROW ID LPAREN argumentos . RPAREN SEMICOLON

    RPAREN          shift and go to state 349


state 299

    (166) try -> TRY LBRACE body RBRACE catchs .
    (167) try -> TRY LBRACE body RBRACE catchs . FINALLY LBRACE body RBRACE

    VARIABLE        reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    ECHO            reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    PRINT           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    TRY             reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    FUNCTION        reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    RETURN          reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    ID              reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    EMPTY           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    CLASS           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    INTERFACE       reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    INCLUDE         reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    NAMESPACE       reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    THROW           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    CONST           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    THIS            reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    INT             reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    FLOAT           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    ABSTRACT        reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    PRIVATE         reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    PROTECTED       reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    PUBLIC          reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    STATIC          reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    FINAL           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    STRING          reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    BOOL            reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    NULL            reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    ARRAY           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    IF              reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    WHILE           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    DO              reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    SWITCH          reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    FOREACH         reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    FOR             reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    CLOSETAG        reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    RBRACE          reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    SEMICOLON       reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    BREAK           reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    ENDSWITCH       reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    CASE            reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    DEFAULT         reduce using rule 166 (try -> TRY LBRACE body RBRACE catchs .)
    FINALLY         shift and go to state 350


state 300

    (169) catchs -> catch .
    (170) catchs -> catch . catchs
    (169) catchs -> . catch
    (170) catchs -> . catch catchs
    (168) catch -> . CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    FINALLY         reduce using rule 169 (catchs -> catch .)
    VARIABLE        reduce using rule 169 (catchs -> catch .)
    ECHO            reduce using rule 169 (catchs -> catch .)
    PRINT           reduce using rule 169 (catchs -> catch .)
    TRY             reduce using rule 169 (catchs -> catch .)
    FUNCTION        reduce using rule 169 (catchs -> catch .)
    RETURN          reduce using rule 169 (catchs -> catch .)
    ID              reduce using rule 169 (catchs -> catch .)
    EMPTY           reduce using rule 169 (catchs -> catch .)
    CLASS           reduce using rule 169 (catchs -> catch .)
    INTERFACE       reduce using rule 169 (catchs -> catch .)
    INCLUDE         reduce using rule 169 (catchs -> catch .)
    NAMESPACE       reduce using rule 169 (catchs -> catch .)
    THROW           reduce using rule 169 (catchs -> catch .)
    CONST           reduce using rule 169 (catchs -> catch .)
    THIS            reduce using rule 169 (catchs -> catch .)
    INT             reduce using rule 169 (catchs -> catch .)
    FLOAT           reduce using rule 169 (catchs -> catch .)
    ABSTRACT        reduce using rule 169 (catchs -> catch .)
    PRIVATE         reduce using rule 169 (catchs -> catch .)
    PROTECTED       reduce using rule 169 (catchs -> catch .)
    PUBLIC          reduce using rule 169 (catchs -> catch .)
    STATIC          reduce using rule 169 (catchs -> catch .)
    FINAL           reduce using rule 169 (catchs -> catch .)
    STRING          reduce using rule 169 (catchs -> catch .)
    BOOL            reduce using rule 169 (catchs -> catch .)
    NULL            reduce using rule 169 (catchs -> catch .)
    ARRAY           reduce using rule 169 (catchs -> catch .)
    IF              reduce using rule 169 (catchs -> catch .)
    WHILE           reduce using rule 169 (catchs -> catch .)
    DO              reduce using rule 169 (catchs -> catch .)
    SWITCH          reduce using rule 169 (catchs -> catch .)
    FOREACH         reduce using rule 169 (catchs -> catch .)
    FOR             reduce using rule 169 (catchs -> catch .)
    CLOSETAG        reduce using rule 169 (catchs -> catch .)
    RBRACE          reduce using rule 169 (catchs -> catch .)
    SEMICOLON       reduce using rule 169 (catchs -> catch .)
    BREAK           reduce using rule 169 (catchs -> catch .)
    ENDSWITCH       reduce using rule 169 (catchs -> catch .)
    CASE            reduce using rule 169 (catchs -> catch .)
    DEFAULT         reduce using rule 169 (catchs -> catch .)
    CATCH           shift and go to state 301

    catch                          shift and go to state 300
    catchs                         shift and go to state 351

state 301

    (168) catch -> CATCH . LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 352


state 302

    (172) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 353


state 303

    (154) argumentos -> argumento COMMA argumentos .

    RPAREN          reduce using rule 154 (argumentos -> argumento COMMA argumentos .)


state 304

    (158) argumento -> type VARIABLE EQUALS . valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 354
    llamadaFuncion                 shift and go to state 102

state 305

    (157) argumento -> VARIABLE EQUALS valor .

    COMMA           reduce using rule 157 (argumento -> VARIABLE EQUALS valor .)
    RPAREN          reduce using rule 157 (argumento -> VARIABLE EQUALS valor .)


state 306

    (173) funcionDeclaration -> data FUNCTION ID LPAREN argumentos . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 355


state 307

    (178) classDeclarate -> data CLASS ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 356


state 308

    (189) classInterface -> data CLASS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 357


state 309

    (190) classInterface -> data CLASS ID EXTENDS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE

    IMPLEMENTS      shift and go to state 358


state 310

    (48) operaArit -> LPAREN operaArit . RPAREN
    (47) operaArit -> operaArit . operador operaArit
    (60) operador -> . PLUS
    (61) operador -> . MINUS
    (62) operador -> . TIMES
    (63) operador -> . DIVIDE
    (64) operador -> . MODULO
    (65) operador -> . POTENCIA

    RPAREN          shift and go to state 256
    PLUS            shift and go to state 194
    MINUS           shift and go to state 195
    TIMES           shift and go to state 196
    DIVIDE          shift and go to state 197
    MODULO          shift and go to state 198
    POTENCIA        shift and go to state 199

    operador                       shift and go to state 193

state 311

    (176) classDeclarate -> CLASS ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ID              reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    INT             reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    IF              reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    DO              reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 176 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)


state 312

    (181) classBody -> classMember classBody .

    RBRACE          reduce using rule 181 (classBody -> classMember classBody .)


state 313

    (182) classMember -> type VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 359


state 314

    (183) classMember -> type FUNCTION . ID LPAREN argumentos RPAREN LBRACE body RBRACE

    ID              shift and go to state 360


state 315

    (185) objectInstantiation -> NEW ID . LPAREN argumentos RPAREN
    (186) objectInstantiation -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 361


state 316

    (177) classDeclarate -> CLASS ID EXTENDS ID LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 362
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 317

    (188) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (191) impInterface -> . ID
    (192) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 267

    impInterface                   shift and go to state 363

state 318

    (192) impInterface -> ID COMMA . impInterface
    (191) impInterface -> . ID
    (192) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 267

    impInterface                   shift and go to state 364

state 319

    (187) classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 365
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 320

    (199) interface -> INTERFACE ID LBRACE sentenciaList RBRACE .

    VARIABLE        reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    ECHO            reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    PRINT           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    TRY             reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    FUNCTION        reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    RETURN          reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    ID              reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    EMPTY           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    CLASS           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    INTERFACE       reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    INCLUDE         reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    NAMESPACE       reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    THROW           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    CONST           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    THIS            reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    INT             reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    FLOAT           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    ABSTRACT        reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    PRIVATE         reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    PROTECTED       reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    PUBLIC          reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    STATIC          reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    FINAL           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    STRING          reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    BOOL            reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    NULL            reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    ARRAY           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    IF              reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    WHILE           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    DO              reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    SWITCH          reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    FOREACH         reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    FOR             reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    CLOSETAG        reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    RBRACE          reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    SEMICOLON       reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    BREAK           reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    ENDSWITCH       reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    CASE            reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)
    DEFAULT         reduce using rule 199 (interface -> INTERFACE ID LBRACE sentenciaList RBRACE .)


state 321

    (201) includes -> INCLUDE STRING DOT STRING SEMICOLON .

    VARIABLE        reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ECHO            reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PRINT           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    TRY             reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FUNCTION        reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    RETURN          reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ID              reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    EMPTY           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CLASS           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    INTERFACE       reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    INCLUDE         reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    NAMESPACE       reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    THROW           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CONST           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    THIS            reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    INT             reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FLOAT           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ABSTRACT        reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PRIVATE         reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PROTECTED       reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PUBLIC          reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    STATIC          reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FINAL           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    STRING          reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    BOOL            reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    NULL            reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ARRAY           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    IF              reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    WHILE           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    DO              reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    SWITCH          reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FOREACH         reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FOR             reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CLOSETAG        reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    RBRACE          reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    SEMICOLON       reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    BREAK           reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ENDSWITCH       reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CASE            reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    DEFAULT         reduce using rule 201 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)


state 322

    (204) throw -> THROW NEW EXCEPTION LPAREN repiteValores . RPAREN SEMICOLON

    RPAREN          shift and go to state 366


state 323

    (207) constdeclaration -> CONST ID EQUALS valor SEMICOLON .

    VARIABLE        reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ECHO            reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PRINT           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    TRY             reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FUNCTION        reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    RETURN          reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ID              reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    EMPTY           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CLASS           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    INTERFACE       reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    INCLUDE         reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    NAMESPACE       reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    THROW           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CONST           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    THIS            reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    INT             reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FLOAT           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ABSTRACT        reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PRIVATE         reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PROTECTED       reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PUBLIC          reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    STATIC          reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FINAL           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    STRING          reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    BOOL            reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    NULL            reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ARRAY           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    IF              reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    WHILE           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    DO              reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    SWITCH          reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FOREACH         reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FOR             reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CLOSETAG        reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    RBRACE          reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    SEMICOLON       reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    BREAK           reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ENDSWITCH       reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CASE            reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    DEFAULT         reduce using rule 207 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)


state 324

    (209) thisdeclaration -> THIS ARROW ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 367


state 325

    (93) conditions -> LPAREN conditions RPAREN .
    (97) condition -> LPAREN conditions RPAREN .

  ! reduce/reduce conflict for RPAREN resolved using rule 93 (conditions -> LPAREN conditions RPAREN .)
    RPAREN          reduce using rule 93 (conditions -> LPAREN conditions RPAREN .)
    AND             reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_AND     reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    OR              reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_OR      reduce using rule 97 (condition -> LPAREN conditions RPAREN .)

  ! RPAREN          [ reduce using rule 97 (condition -> LPAREN conditions RPAREN .) ]


state 326

    (86) if -> IF LPAREN conditions RPAREN LBRACE . body RBRACE else_blocks
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 368
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 327

    (87) if -> IF LPAREN conditions RPAREN body . SEMICOLON

    SEMICOLON       shift and go to state 369


state 328

    (92) conditions -> condition opLogic conditions .

    RPAREN          reduce using rule 92 (conditions -> condition opLogic conditions .)


state 329

    (95) condition -> valor opSymbol valor .

    AND             reduce using rule 95 (condition -> valor opSymbol valor .)
    LOGICAL_AND     reduce using rule 95 (condition -> valor opSymbol valor .)
    OR              reduce using rule 95 (condition -> valor opSymbol valor .)
    LOGICAL_OR      reduce using rule 95 (condition -> valor opSymbol valor .)
    RPAREN          reduce using rule 95 (condition -> valor opSymbol valor .)


state 330

    (97) condition -> LPAREN conditions RPAREN .

    RPAREN          reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    AND             reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_AND     reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    OR              reduce using rule 97 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_OR      reduce using rule 97 (condition -> LPAREN conditions RPAREN .)


state 331

    (118) while -> WHILE LPAREN condition RPAREN LBRACE . body RBRACE
    (119) while -> WHILE LPAREN condition RPAREN LBRACE . RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 371
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

  ! RBRACE          [ reduce using rule 75 (empty -> .) ]

    body                           shift and go to state 370
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 332

    (120) dowhile -> DO LBRACE body RBRACE WHILE . LPAREN condition RPAREN SEMICOLON

    LPAREN          shift and go to state 372


state 333

    (121) switch -> SWITCH LPAREN valor RPAREN LBRACE . caseLists RBRACE
    (123) caseLists -> . cases
    (124) caseLists -> . cases default
    (125) caseLists -> . default
    (126) caseLists -> . empty
    (127) cases -> . case
    (128) cases -> . case cases
    (148) default -> . DEFAULT COLON body BREAK SEMICOLON
    (149) default -> . DEFAULT SEMICOLON body BREAK SEMICOLON
    (150) default -> . DEFAULT COLON body
    (151) default -> . DEFAULT SEMICOLON body
    (152) default -> . DEFAULT
    (75) empty -> .
    (130) case -> . CASE valor COLON body BREAK SEMICOLON
    (131) case -> . CASE valor SEMICOLON body BREAK SEMICOLON
    (132) case -> . CASE valor COLON body
    (133) case -> . CASE valor SEMICOLON
    (134) case -> . CASE valor

    DEFAULT         shift and go to state 378
    RBRACE          reduce using rule 75 (empty -> .)
    CASE            shift and go to state 379

    caseLists                      shift and go to state 373
    cases                          shift and go to state 374
    default                        shift and go to state 375
    empty                          shift and go to state 376
    case                           shift and go to state 377

state 334

    (122) switch -> SWITCH LPAREN valor RPAREN COLON . caseLists ENDSWITCH SEMICOLON
    (123) caseLists -> . cases
    (124) caseLists -> . cases default
    (125) caseLists -> . default
    (126) caseLists -> . empty
    (127) cases -> . case
    (128) cases -> . case cases
    (148) default -> . DEFAULT COLON body BREAK SEMICOLON
    (149) default -> . DEFAULT SEMICOLON body BREAK SEMICOLON
    (150) default -> . DEFAULT COLON body
    (151) default -> . DEFAULT SEMICOLON body
    (152) default -> . DEFAULT
    (75) empty -> .
    (130) case -> . CASE valor COLON body BREAK SEMICOLON
    (131) case -> . CASE valor SEMICOLON body BREAK SEMICOLON
    (132) case -> . CASE valor COLON body
    (133) case -> . CASE valor SEMICOLON
    (134) case -> . CASE valor

    DEFAULT         shift and go to state 378
    ENDSWITCH       reduce using rule 75 (empty -> .)
    CASE            shift and go to state 379

    caseLists                      shift and go to state 380
    cases                          shift and go to state 374
    default                        shift and go to state 375
    empty                          shift and go to state 376
    case                           shift and go to state 377

state 335

    (129) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 381


state 336

    (115) forStatement -> FOR LPAREN forcondition RPAREN LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 382
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 337

    (116) forcondition -> VARIABLE EQUALS INT . SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT . SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    SEMICOLON       shift and go to state 383


state 338

    (45) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 384


state 339

    (203) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP . comparacion SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE

    INT             shift and go to state 156
    FLOAT           shift and go to state 157
    VARIABLE        shift and go to state 158

    comparacion                    shift and go to state 385
    valornumerico                  shift and go to state 27

state 340

    (137) array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .

    VARIABLE        reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ECHO            reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PRINT           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    TRY             reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    RETURN          reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ID              reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    EMPTY           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CLASS           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    INTERFACE       reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    INCLUDE         reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    NAMESPACE       reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    THROW           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CONST           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    THIS            reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    INT             reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ABSTRACT        reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PRIVATE         reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PROTECTED       reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PUBLIC          reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    STATIC          reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FINAL           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    STRING          reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    BOOL            reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    NULL            reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ARRAY           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    IF              reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    WHILE           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    DO              reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FOREACH         reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FOR             reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CLOSETAG        reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    BREAK           reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ENDSWITCH       reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CASE            reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 137 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)


state 341

    (143) map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .

    VARIABLE        reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ECHO            reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PRINT           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    TRY             reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    RETURN          reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ID              reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    EMPTY           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CLASS           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    INTERFACE       reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    INCLUDE         reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    NAMESPACE       reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    THROW           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CONST           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    THIS            reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    INT             reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ABSTRACT        reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PRIVATE         reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PROTECTED       reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PUBLIC          reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    STATIC          reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FINAL           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    STRING          reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    BOOL            reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    NULL            reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ARRAY           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    IF              reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    WHILE           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    DO              reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FOREACH         reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FOR             reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CLOSETAG        reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    BREAK           reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ENDSWITCH       reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CASE            reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 143 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)


state 342

    (142) arrayAnidado -> arrays COMMA arrayAnidado .

    RBRACKET        reduce using rule 142 (arrayAnidado -> arrays COMMA arrayAnidado .)


state 343

    (146) maps -> mapArrow COMMA maps .

    RBRACKET        reduce using rule 146 (maps -> mapArrow COMMA maps .)
    RPAREN          reduce using rule 146 (maps -> mapArrow COMMA maps .)


state 344

    (147) mapArrow -> valor . ARROWMAP valor

    ARROWMAP        shift and go to state 294


state 345

    (147) mapArrow -> valor ARROWMAP valor .

    COMMA           reduce using rule 147 (mapArrow -> valor ARROWMAP valor .)
    RBRACKET        reduce using rule 147 (mapArrow -> valor ARROWMAP valor .)
    RPAREN          reduce using rule 147 (mapArrow -> valor ARROWMAP valor .)


state 346

    (138) array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 386


state 347

    (144) map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 387


state 348

    (213) funcion_strlen -> STRLEN LPAREN STRING RPAREN .

    SEMICOLON       reduce using rule 213 (funcion_strlen -> STRLEN LPAREN STRING RPAREN .)


state 349

    (171) objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 388


state 350

    (167) try -> TRY LBRACE body RBRACE catchs FINALLY . LBRACE body RBRACE

    LBRACE          shift and go to state 389


state 351

    (170) catchs -> catch catchs .

    FINALLY         reduce using rule 170 (catchs -> catch catchs .)
    VARIABLE        reduce using rule 170 (catchs -> catch catchs .)
    ECHO            reduce using rule 170 (catchs -> catch catchs .)
    PRINT           reduce using rule 170 (catchs -> catch catchs .)
    TRY             reduce using rule 170 (catchs -> catch catchs .)
    FUNCTION        reduce using rule 170 (catchs -> catch catchs .)
    RETURN          reduce using rule 170 (catchs -> catch catchs .)
    ID              reduce using rule 170 (catchs -> catch catchs .)
    EMPTY           reduce using rule 170 (catchs -> catch catchs .)
    CLASS           reduce using rule 170 (catchs -> catch catchs .)
    INTERFACE       reduce using rule 170 (catchs -> catch catchs .)
    INCLUDE         reduce using rule 170 (catchs -> catch catchs .)
    NAMESPACE       reduce using rule 170 (catchs -> catch catchs .)
    THROW           reduce using rule 170 (catchs -> catch catchs .)
    CONST           reduce using rule 170 (catchs -> catch catchs .)
    THIS            reduce using rule 170 (catchs -> catch catchs .)
    INT             reduce using rule 170 (catchs -> catch catchs .)
    FLOAT           reduce using rule 170 (catchs -> catch catchs .)
    ABSTRACT        reduce using rule 170 (catchs -> catch catchs .)
    PRIVATE         reduce using rule 170 (catchs -> catch catchs .)
    PROTECTED       reduce using rule 170 (catchs -> catch catchs .)
    PUBLIC          reduce using rule 170 (catchs -> catch catchs .)
    STATIC          reduce using rule 170 (catchs -> catch catchs .)
    FINAL           reduce using rule 170 (catchs -> catch catchs .)
    STRING          reduce using rule 170 (catchs -> catch catchs .)
    BOOL            reduce using rule 170 (catchs -> catch catchs .)
    NULL            reduce using rule 170 (catchs -> catch catchs .)
    ARRAY           reduce using rule 170 (catchs -> catch catchs .)
    IF              reduce using rule 170 (catchs -> catch catchs .)
    WHILE           reduce using rule 170 (catchs -> catch catchs .)
    DO              reduce using rule 170 (catchs -> catch catchs .)
    SWITCH          reduce using rule 170 (catchs -> catch catchs .)
    FOREACH         reduce using rule 170 (catchs -> catch catchs .)
    FOR             reduce using rule 170 (catchs -> catch catchs .)
    CLOSETAG        reduce using rule 170 (catchs -> catch catchs .)
    RBRACE          reduce using rule 170 (catchs -> catch catchs .)
    SEMICOLON       reduce using rule 170 (catchs -> catch catchs .)
    BREAK           reduce using rule 170 (catchs -> catch catchs .)
    ENDSWITCH       reduce using rule 170 (catchs -> catch catchs .)
    CASE            reduce using rule 170 (catchs -> catch catchs .)
    DEFAULT         reduce using rule 170 (catchs -> catch catchs .)


state 352

    (168) catch -> CATCH LPAREN . EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    EXCEPTION       shift and go to state 390


state 353

    (172) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 391
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 354

    (158) argumento -> type VARIABLE EQUALS valor .

    COMMA           reduce using rule 158 (argumento -> type VARIABLE EQUALS valor .)
    RPAREN          reduce using rule 158 (argumento -> type VARIABLE EQUALS valor .)


state 355

    (173) funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 392


state 356

    (178) classDeclarate -> data CLASS ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ID              reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    INT             reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    IF              reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    DO              reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 178 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)


state 357

    (189) classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 393
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 358

    (190) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (191) impInterface -> . ID
    (192) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 267

    impInterface                   shift and go to state 394

state 359

    (182) classMember -> type VARIABLE SEMICOLON .

    INT_TYPE        reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    FLOAT_TYPE      reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    STRING_TYPE     reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    BOOL_TYPE       reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    ARRAY_TYPE      reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    VOID            reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    NEW             reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)
    RBRACE          reduce using rule 182 (classMember -> type VARIABLE SEMICOLON .)


state 360

    (183) classMember -> type FUNCTION ID . LPAREN argumentos RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 395


state 361

    (185) objectInstantiation -> NEW ID LPAREN . argumentos RPAREN
    (186) objectInstantiation -> NEW ID LPAREN . RPAREN
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 397
    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

  ! RPAREN          [ reduce using rule 75 (empty -> .) ]

    argumentos                     shift and go to state 396
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    type                           shift and go to state 172
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 362

    (177) classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 398


state 363

    (188) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 399


state 364

    (192) impInterface -> ID COMMA impInterface .

    LBRACE          reduce using rule 192 (impInterface -> ID COMMA impInterface .)


state 365

    (187) classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 400


state 366

    (204) throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 401


state 367

    (209) thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    EMPTY           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    THROW           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CONST           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FINAL           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    NULL            reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FOREACH         reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 209 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)


state 368

    (86) if -> IF LPAREN conditions RPAREN LBRACE body . RBRACE else_blocks

    RBRACE          shift and go to state 402


state 369

    (87) if -> IF LPAREN conditions RPAREN body SEMICOLON .

    VARIABLE        reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    ECHO            reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    PRINT           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    TRY             reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    FUNCTION        reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    RETURN          reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    ID              reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    EMPTY           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    CLASS           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    INTERFACE       reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    INCLUDE         reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    NAMESPACE       reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    THROW           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    CONST           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    THIS            reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    INT             reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    FLOAT           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    ABSTRACT        reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    PRIVATE         reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    PROTECTED       reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    PUBLIC          reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    STATIC          reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    FINAL           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    STRING          reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    BOOL            reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    NULL            reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    ARRAY           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    IF              reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    WHILE           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    DO              reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    SWITCH          reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    FOREACH         reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    FOR             reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    CLOSETAG        reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    RBRACE          reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    SEMICOLON       reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    BREAK           reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    ENDSWITCH       reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    CASE            reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)
    DEFAULT         reduce using rule 87 (if -> IF LPAREN conditions RPAREN body SEMICOLON .)


state 370

    (118) while -> WHILE LPAREN condition RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 403


state 371

    (119) while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .

    VARIABLE        reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ECHO            reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PRINT           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    TRY             reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FUNCTION        reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ID              reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    EMPTY           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CLASS           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    INTERFACE       reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    INCLUDE         reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    NAMESPACE       reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    THROW           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CONST           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    THIS            reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    INT             reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FLOAT           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ABSTRACT        reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PRIVATE         reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PROTECTED       reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PUBLIC          reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    STATIC          reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FINAL           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    STRING          reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    BOOL            reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    NULL            reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ARRAY           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    IF              reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    DO              reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    SWITCH          reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FOREACH         reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FOR             reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CLOSETAG        reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    SEMICOLON       reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    BREAK           reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ENDSWITCH       reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CASE            reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    DEFAULT         reduce using rule 119 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)


state 372

    (120) dowhile -> DO LBRACE body RBRACE WHILE LPAREN . condition RPAREN SEMICOLON
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    NOT             shift and go to state 217
    LPAREN          shift and go to state 218
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    condition                      shift and go to state 404
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 373

    (121) switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists . RBRACE

    RBRACE          shift and go to state 405


state 374

    (123) caseLists -> cases .
    (124) caseLists -> cases . default
    (148) default -> . DEFAULT COLON body BREAK SEMICOLON
    (149) default -> . DEFAULT SEMICOLON body BREAK SEMICOLON
    (150) default -> . DEFAULT COLON body
    (151) default -> . DEFAULT SEMICOLON body
    (152) default -> . DEFAULT

    RBRACE          reduce using rule 123 (caseLists -> cases .)
    ENDSWITCH       reduce using rule 123 (caseLists -> cases .)
    DEFAULT         shift and go to state 378

    default                        shift and go to state 406

state 375

    (125) caseLists -> default .

    RBRACE          reduce using rule 125 (caseLists -> default .)
    ENDSWITCH       reduce using rule 125 (caseLists -> default .)


state 376

    (126) caseLists -> empty .

    RBRACE          reduce using rule 126 (caseLists -> empty .)
    ENDSWITCH       reduce using rule 126 (caseLists -> empty .)


state 377

    (127) cases -> case .
    (128) cases -> case . cases
    (127) cases -> . case
    (128) cases -> . case cases
    (130) case -> . CASE valor COLON body BREAK SEMICOLON
    (131) case -> . CASE valor SEMICOLON body BREAK SEMICOLON
    (132) case -> . CASE valor COLON body
    (133) case -> . CASE valor SEMICOLON
    (134) case -> . CASE valor

    DEFAULT         reduce using rule 127 (cases -> case .)
    RBRACE          reduce using rule 127 (cases -> case .)
    ENDSWITCH       reduce using rule 127 (cases -> case .)
    CASE            shift and go to state 379

    case                           shift and go to state 377
    cases                          shift and go to state 407

state 378

    (148) default -> DEFAULT . COLON body BREAK SEMICOLON
    (149) default -> DEFAULT . SEMICOLON body BREAK SEMICOLON
    (150) default -> DEFAULT . COLON body
    (151) default -> DEFAULT . SEMICOLON body
    (152) default -> DEFAULT .

    COLON           shift and go to state 408
    SEMICOLON       shift and go to state 409
    RBRACE          reduce using rule 152 (default -> DEFAULT .)
    ENDSWITCH       reduce using rule 152 (default -> DEFAULT .)


state 379

    (130) case -> CASE . valor COLON body BREAK SEMICOLON
    (131) case -> CASE . valor SEMICOLON body BREAK SEMICOLON
    (132) case -> CASE . valor COLON body
    (133) case -> CASE . valor SEMICOLON
    (134) case -> CASE . valor
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    valor                          shift and go to state 410
    llamadaFuncion                 shift and go to state 102

state 380

    (122) switch -> SWITCH LPAREN valor RPAREN COLON caseLists . ENDSWITCH SEMICOLON

    ENDSWITCH       shift and go to state 411


state 381

    (129) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 412


state 382

    (115) forStatement -> FOR LPAREN forcondition RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 413


state 383

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON . VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON . VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    VARIABLE        shift and go to state 414


state 384

    (45) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ECHO            reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    TRY             reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ID              reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    EMPTY           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CLASS           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    THROW           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CONST           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    THIS            reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    INT             reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    STATIC          reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FINAL           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    STRING          reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    BOOL            reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    NULL            reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    IF              reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    DO              reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FOREACH         reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FOR             reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    BREAK           reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CASE            reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 45 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)


state 385

    (203) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion . SEMICOLON

    SEMICOLON       shift and go to state 415


state 386

    (138) array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .

    VARIABLE        reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ECHO            reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PRINT           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    TRY             reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    RETURN          reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ID              reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    EMPTY           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CLASS           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    THROW           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CONST           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    THIS            reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    INT             reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FLOAT           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    STATIC          reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FINAL           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    STRING          reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    BOOL            reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    NULL            reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ARRAY           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    IF              reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    WHILE           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    DO              reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    SWITCH          reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FOREACH         reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FOR             reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    RBRACE          reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    BREAK           reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CASE            reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 138 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)


state 387

    (144) map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .

    VARIABLE        reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ECHO            reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PRINT           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    TRY             reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    RETURN          reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ID              reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    EMPTY           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CLASS           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    THROW           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CONST           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    THIS            reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    INT             reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FLOAT           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    STATIC          reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FINAL           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    STRING          reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    BOOL            reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    NULL            reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ARRAY           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    IF              reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    WHILE           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    DO              reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    SWITCH          reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FOREACH         reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FOR             reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    RBRACE          reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    BREAK           reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CASE            reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 144 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)


state 388

    (171) objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .

    VARIABLE        reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ECHO            reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PRINT           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    TRY             reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    RETURN          reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ID              reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    EMPTY           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CLASS           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    THROW           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CONST           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    THIS            reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    INT             reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FLOAT           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    STATIC          reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FINAL           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    STRING          reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    BOOL            reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    NULL            reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ARRAY           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    IF              reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    WHILE           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    DO              reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    SWITCH          reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FOREACH         reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FOR             reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    RBRACE          reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    BREAK           reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CASE            reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 171 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)


state 389

    (167) try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 416
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 390

    (168) catch -> CATCH LPAREN EXCEPTION . VARIABLE RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 417


state 391

    (172) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 418


state 392

    (173) funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    data                           shift and go to state 35
    body                           shift and go to state 419
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 393

    (189) classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 420


state 394

    (190) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 421


state 395

    (183) classMember -> type FUNCTION ID LPAREN . argumentos RPAREN LBRACE body RBRACE
    (153) argumentos -> . argumento
    (154) argumentos -> . argumento COMMA argumentos
    (155) argumento -> . valor
    (156) argumento -> . type VARIABLE
    (157) argumento -> . VARIABLE EQUALS valor
    (158) argumento -> . type VARIABLE EQUALS valor
    (159) argumento -> . empty
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (75) empty -> .
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    VARIABLE        shift and go to state 173
    INT             shift and go to state 99
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    COMMA           reduce using rule 75 (empty -> .)
    RPAREN          reduce using rule 75 (empty -> .)
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    type                           shift and go to state 172
    argumentos                     shift and go to state 422
    argumento                      shift and go to state 170
    valor                          shift and go to state 171
    empty                          shift and go to state 174
    llamadaFuncion                 shift and go to state 102

state 396

    (185) objectInstantiation -> NEW ID LPAREN argumentos . RPAREN

    RPAREN          shift and go to state 423


state 397

    (186) objectInstantiation -> NEW ID LPAREN RPAREN .

    INT_TYPE        reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    FLOAT_TYPE      reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    STRING_TYPE     reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    BOOL_TYPE       reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    ARRAY_TYPE      reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    VOID            reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    NEW             reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    RBRACE          reduce using rule 186 (objectInstantiation -> NEW ID LPAREN RPAREN .)


state 398

    (177) classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ID              reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    INT             reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    IF              reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    DO              reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 177 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)


state 399

    (188) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 424
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 400

    (187) classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 187 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 401

    (204) throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .

    VARIABLE        reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ECHO            reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PRINT           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    TRY             reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    RETURN          reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ID              reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    EMPTY           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CLASS           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    THROW           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CONST           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    THIS            reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    INT             reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FLOAT           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    STATIC          reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FINAL           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    STRING          reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    BOOL            reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    NULL            reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ARRAY           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    IF              reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    WHILE           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    DO              reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    SWITCH          reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FOREACH         reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FOR             reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    RBRACE          reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    BREAK           reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CASE            reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 204 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)


state 402

    (86) if -> IF LPAREN conditions RPAREN LBRACE body RBRACE . else_blocks
    (88) else_blocks -> . ELSE LBRACE body RBRACE
    (89) else_blocks -> . ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (90) else_blocks -> . empty
    (75) empty -> .

    ELSE            shift and go to state 426
    ELSEIF          shift and go to state 427
    VARIABLE        reduce using rule 75 (empty -> .)
    ECHO            reduce using rule 75 (empty -> .)
    PRINT           reduce using rule 75 (empty -> .)
    TRY             reduce using rule 75 (empty -> .)
    FUNCTION        reduce using rule 75 (empty -> .)
    RETURN          reduce using rule 75 (empty -> .)
    ID              reduce using rule 75 (empty -> .)
    EMPTY           reduce using rule 75 (empty -> .)
    CLASS           reduce using rule 75 (empty -> .)
    INTERFACE       reduce using rule 75 (empty -> .)
    INCLUDE         reduce using rule 75 (empty -> .)
    NAMESPACE       reduce using rule 75 (empty -> .)
    THROW           reduce using rule 75 (empty -> .)
    CONST           reduce using rule 75 (empty -> .)
    THIS            reduce using rule 75 (empty -> .)
    INT             reduce using rule 75 (empty -> .)
    FLOAT           reduce using rule 75 (empty -> .)
    ABSTRACT        reduce using rule 75 (empty -> .)
    PRIVATE         reduce using rule 75 (empty -> .)
    PROTECTED       reduce using rule 75 (empty -> .)
    PUBLIC          reduce using rule 75 (empty -> .)
    STATIC          reduce using rule 75 (empty -> .)
    FINAL           reduce using rule 75 (empty -> .)
    STRING          reduce using rule 75 (empty -> .)
    BOOL            reduce using rule 75 (empty -> .)
    NULL            reduce using rule 75 (empty -> .)
    ARRAY           reduce using rule 75 (empty -> .)
    IF              reduce using rule 75 (empty -> .)
    WHILE           reduce using rule 75 (empty -> .)
    DO              reduce using rule 75 (empty -> .)
    SWITCH          reduce using rule 75 (empty -> .)
    FOREACH         reduce using rule 75 (empty -> .)
    FOR             reduce using rule 75 (empty -> .)
    CLOSETAG        reduce using rule 75 (empty -> .)
    RBRACE          reduce using rule 75 (empty -> .)
    SEMICOLON       reduce using rule 75 (empty -> .)
    BREAK           reduce using rule 75 (empty -> .)
    ENDSWITCH       reduce using rule 75 (empty -> .)
    CASE            reduce using rule 75 (empty -> .)
    DEFAULT         reduce using rule 75 (empty -> .)

    else_blocks                    shift and go to state 425
    empty                          shift and go to state 428

state 403

    (118) while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    EMPTY           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 118 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)


state 404

    (120) dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition . RPAREN SEMICOLON

    RPAREN          shift and go to state 429


state 405

    (121) switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .

    VARIABLE        reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ECHO            reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PRINT           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    TRY             reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FUNCTION        reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    RETURN          reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ID              reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    EMPTY           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CLASS           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    INTERFACE       reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    INCLUDE         reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    NAMESPACE       reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    THROW           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CONST           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    THIS            reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    INT             reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FLOAT           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ABSTRACT        reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PRIVATE         reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PROTECTED       reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PUBLIC          reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    STATIC          reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FINAL           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    STRING          reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    BOOL            reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    NULL            reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ARRAY           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    IF              reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    WHILE           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    DO              reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    SWITCH          reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FOREACH         reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FOR             reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CLOSETAG        reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    RBRACE          reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    SEMICOLON       reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    BREAK           reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ENDSWITCH       reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CASE            reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    DEFAULT         reduce using rule 121 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)


state 406

    (124) caseLists -> cases default .

    RBRACE          reduce using rule 124 (caseLists -> cases default .)
    ENDSWITCH       reduce using rule 124 (caseLists -> cases default .)


state 407

    (128) cases -> case cases .

    DEFAULT         reduce using rule 128 (cases -> case cases .)
    RBRACE          reduce using rule 128 (cases -> case cases .)
    ENDSWITCH       reduce using rule 128 (cases -> case cases .)


state 408

    (148) default -> DEFAULT COLON . body BREAK SEMICOLON
    (150) default -> DEFAULT COLON . body
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    BREAK           reduce using rule 75 (empty -> .)
    RBRACE          reduce using rule 75 (empty -> .)
    ENDSWITCH       reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 430
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 409

    (149) default -> DEFAULT SEMICOLON . body BREAK SEMICOLON
    (151) default -> DEFAULT SEMICOLON . body
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    BREAK           reduce using rule 75 (empty -> .)
    RBRACE          reduce using rule 75 (empty -> .)
    ENDSWITCH       reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 431
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 410

    (130) case -> CASE valor . COLON body BREAK SEMICOLON
    (131) case -> CASE valor . SEMICOLON body BREAK SEMICOLON
    (132) case -> CASE valor . COLON body
    (133) case -> CASE valor . SEMICOLON
    (134) case -> CASE valor .

    COLON           shift and go to state 432
    SEMICOLON       shift and go to state 433
    CASE            reduce using rule 134 (case -> CASE valor .)
    DEFAULT         reduce using rule 134 (case -> CASE valor .)
    RBRACE          reduce using rule 134 (case -> CASE valor .)
    ENDSWITCH       reduce using rule 134 (case -> CASE valor .)


state 411

    (122) switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH . SEMICOLON

    SEMICOLON       shift and go to state 434


state 412

    (129) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 435
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 413

    (115) forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    EMPTY           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 115 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)


state 414

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE . opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE . opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS
    (98) opSymbol -> . EQ
    (99) opSymbol -> . NEQ
    (100) opSymbol -> . STRICTEQ
    (101) opSymbol -> . STRICTNEQ
    (102) opSymbol -> . LT
    (103) opSymbol -> . GT
    (104) opSymbol -> . LEQ
    (105) opSymbol -> . GEQ

    EQ              shift and go to state 86
    NEQ             shift and go to state 87
    STRICTEQ        shift and go to state 88
    STRICTNEQ       shift and go to state 89
    LT              shift and go to state 90
    GT              shift and go to state 91
    LEQ             shift and go to state 92
    GEQ             shift and go to state 93

    opSymbol                       shift and go to state 436

state 415

    (203) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .

    VARIABLE        reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ECHO            reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PRINT           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    TRY             reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FUNCTION        reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    RETURN          reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ID              reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    EMPTY           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CLASS           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    INTERFACE       reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    INCLUDE         reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    NAMESPACE       reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    THROW           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CONST           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    THIS            reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    INT             reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FLOAT           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ABSTRACT        reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PRIVATE         reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PROTECTED       reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PUBLIC          reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    STATIC          reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FINAL           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    STRING          reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    BOOL            reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    NULL            reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ARRAY           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    IF              reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    WHILE           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    DO              reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    SWITCH          reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FOREACH         reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FOR             reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CLOSETAG        reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    RBRACE          reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    SEMICOLON       reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    BREAK           reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ENDSWITCH       reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CASE            reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    DEFAULT         reduce using rule 203 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)


state 416

    (167) try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body . RBRACE

    RBRACE          shift and go to state 437


state 417

    (168) catch -> CATCH LPAREN EXCEPTION VARIABLE . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 438


state 418

    (172) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    EMPTY           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 172 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)


state 419

    (173) funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 439


state 420

    (189) classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 189 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 421

    (190) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (180) classBody -> . classMember
    (181) classBody -> . classMember classBody
    (182) classMember -> . type VARIABLE SEMICOLON
    (183) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (184) classMember -> . objectInstantiation
    (160) type -> . INT_TYPE
    (161) type -> . FLOAT_TYPE
    (162) type -> . STRING_TYPE
    (163) type -> . BOOL_TYPE
    (164) type -> . ARRAY_TYPE
    (165) type -> . VOID
    (185) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (186) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 175
    FLOAT_TYPE      shift and go to state 176
    STRING_TYPE     shift and go to state 177
    BOOL_TYPE       shift and go to state 178
    ARRAY_TYPE      shift and go to state 179
    VOID            shift and go to state 180
    NEW             shift and go to state 265

    classBody                      shift and go to state 440
    classMember                    shift and go to state 262
    type                           shift and go to state 263
    objectInstantiation            shift and go to state 264

state 422

    (183) classMember -> type FUNCTION ID LPAREN argumentos . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 441


state 423

    (185) objectInstantiation -> NEW ID LPAREN argumentos RPAREN .

    INT_TYPE        reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    FLOAT_TYPE      reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    STRING_TYPE     reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    BOOL_TYPE       reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    ARRAY_TYPE      reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    VOID            reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    NEW             reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    RBRACE          reduce using rule 185 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)


state 424

    (188) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 442


state 425

    (86) if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .

    VARIABLE        reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ECHO            reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRINT           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    TRY             reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FUNCTION        reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RETURN          reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ID              reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    EMPTY           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLASS           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INTERFACE       reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INCLUDE         reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NAMESPACE       reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THROW           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CONST           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THIS            reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INT             reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FLOAT           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ABSTRACT        reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRIVATE         reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PROTECTED       reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PUBLIC          reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STATIC          reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FINAL           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STRING          reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BOOL            reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NULL            reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ARRAY           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    IF              reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    WHILE           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DO              reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    SWITCH          reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOREACH         reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOR             reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLOSETAG        reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RBRACE          reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    SEMICOLON       reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BREAK           reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ENDSWITCH       reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CASE            reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DEFAULT         reduce using rule 86 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)


state 426

    (88) else_blocks -> ELSE . LBRACE body RBRACE

    LBRACE          shift and go to state 443


state 427

    (89) else_blocks -> ELSEIF . LPAREN conditions RPAREN LBRACE body RBRACE else_blocks

    LPAREN          shift and go to state 444


state 428

    (90) else_blocks -> empty .

    VARIABLE        reduce using rule 90 (else_blocks -> empty .)
    ECHO            reduce using rule 90 (else_blocks -> empty .)
    PRINT           reduce using rule 90 (else_blocks -> empty .)
    TRY             reduce using rule 90 (else_blocks -> empty .)
    FUNCTION        reduce using rule 90 (else_blocks -> empty .)
    RETURN          reduce using rule 90 (else_blocks -> empty .)
    ID              reduce using rule 90 (else_blocks -> empty .)
    EMPTY           reduce using rule 90 (else_blocks -> empty .)
    CLASS           reduce using rule 90 (else_blocks -> empty .)
    INTERFACE       reduce using rule 90 (else_blocks -> empty .)
    INCLUDE         reduce using rule 90 (else_blocks -> empty .)
    NAMESPACE       reduce using rule 90 (else_blocks -> empty .)
    THROW           reduce using rule 90 (else_blocks -> empty .)
    CONST           reduce using rule 90 (else_blocks -> empty .)
    THIS            reduce using rule 90 (else_blocks -> empty .)
    INT             reduce using rule 90 (else_blocks -> empty .)
    FLOAT           reduce using rule 90 (else_blocks -> empty .)
    ABSTRACT        reduce using rule 90 (else_blocks -> empty .)
    PRIVATE         reduce using rule 90 (else_blocks -> empty .)
    PROTECTED       reduce using rule 90 (else_blocks -> empty .)
    PUBLIC          reduce using rule 90 (else_blocks -> empty .)
    STATIC          reduce using rule 90 (else_blocks -> empty .)
    FINAL           reduce using rule 90 (else_blocks -> empty .)
    STRING          reduce using rule 90 (else_blocks -> empty .)
    BOOL            reduce using rule 90 (else_blocks -> empty .)
    NULL            reduce using rule 90 (else_blocks -> empty .)
    ARRAY           reduce using rule 90 (else_blocks -> empty .)
    IF              reduce using rule 90 (else_blocks -> empty .)
    WHILE           reduce using rule 90 (else_blocks -> empty .)
    DO              reduce using rule 90 (else_blocks -> empty .)
    SWITCH          reduce using rule 90 (else_blocks -> empty .)
    FOREACH         reduce using rule 90 (else_blocks -> empty .)
    FOR             reduce using rule 90 (else_blocks -> empty .)
    CLOSETAG        reduce using rule 90 (else_blocks -> empty .)
    RBRACE          reduce using rule 90 (else_blocks -> empty .)
    SEMICOLON       reduce using rule 90 (else_blocks -> empty .)
    BREAK           reduce using rule 90 (else_blocks -> empty .)
    ENDSWITCH       reduce using rule 90 (else_blocks -> empty .)
    CASE            reduce using rule 90 (else_blocks -> empty .)
    DEFAULT         reduce using rule 90 (else_blocks -> empty .)


state 429

    (120) dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 445


state 430

    (148) default -> DEFAULT COLON body . BREAK SEMICOLON
    (150) default -> DEFAULT COLON body .

    BREAK           shift and go to state 446
    RBRACE          reduce using rule 150 (default -> DEFAULT COLON body .)
    ENDSWITCH       reduce using rule 150 (default -> DEFAULT COLON body .)


state 431

    (149) default -> DEFAULT SEMICOLON body . BREAK SEMICOLON
    (151) default -> DEFAULT SEMICOLON body .

    BREAK           shift and go to state 447
    RBRACE          reduce using rule 151 (default -> DEFAULT SEMICOLON body .)
    ENDSWITCH       reduce using rule 151 (default -> DEFAULT SEMICOLON body .)


state 432

    (130) case -> CASE valor COLON . body BREAK SEMICOLON
    (132) case -> CASE valor COLON . body
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    BREAK           reduce using rule 75 (empty -> .)
    CASE            reduce using rule 75 (empty -> .)
    DEFAULT         reduce using rule 75 (empty -> .)
    RBRACE          reduce using rule 75 (empty -> .)
    ENDSWITCH       reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    valor                          shift and go to state 45
    body                           shift and go to state 448
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 433

    (131) case -> CASE valor SEMICOLON . body BREAK SEMICOLON
    (133) case -> CASE valor SEMICOLON .
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    CASE            reduce using rule 133 (case -> CASE valor SEMICOLON .)
    DEFAULT         reduce using rule 133 (case -> CASE valor SEMICOLON .)
    RBRACE          reduce using rule 133 (case -> CASE valor SEMICOLON .)
    ENDSWITCH       reduce using rule 133 (case -> CASE valor SEMICOLON .)
    BREAK           reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    valor                          shift and go to state 45
    body                           shift and go to state 449
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 434

    (122) switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .

    VARIABLE        reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ECHO            reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PRINT           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    TRY             reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FUNCTION        reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    RETURN          reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ID              reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    EMPTY           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CLASS           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    INTERFACE       reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    INCLUDE         reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    NAMESPACE       reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    THROW           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CONST           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    THIS            reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    INT             reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FLOAT           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ABSTRACT        reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PRIVATE         reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PROTECTED       reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PUBLIC          reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    STATIC          reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FINAL           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    STRING          reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    BOOL            reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    NULL            reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ARRAY           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    IF              reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    WHILE           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    DO              reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    SWITCH          reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FOREACH         reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FOR             reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CLOSETAG        reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    RBRACE          reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    SEMICOLON       reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    BREAK           reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ENDSWITCH       reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CASE            reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    DEFAULT         reduce using rule 122 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)


state 435

    (129) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 450


state 436

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol . INT SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol . INT SEMICOLON VARIABLE DOUBLEMINUS

    INT             shift and go to state 451


state 437

    (167) try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .

    VARIABLE        reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ECHO            reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PRINT           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    TRY             reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FUNCTION        reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    RETURN          reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ID              reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    EMPTY           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CLASS           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    INTERFACE       reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    INCLUDE         reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    THROW           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CONST           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    THIS            reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    INT             reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FLOAT           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PRIVATE         reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PROTECTED       reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PUBLIC          reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    STATIC          reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FINAL           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    STRING          reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    BOOL            reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    NULL            reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ARRAY           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    IF              reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    WHILE           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    DO              reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    SWITCH          reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FOREACH         reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FOR             reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    RBRACE          reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    BREAK           reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CASE            reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    DEFAULT         reduce using rule 167 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)


state 438

    (168) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 452


state 439

    (173) funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    EMPTY           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 173 (funcionDeclaration -> data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)


state 440

    (190) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 453


state 441

    (183) classMember -> type FUNCTION ID LPAREN argumentos RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 454


state 442

    (188) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 188 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 443

    (88) else_blocks -> ELSE LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 455
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 444

    (89) else_blocks -> ELSEIF LPAREN . conditions RPAREN LBRACE body RBRACE else_blocks
    (91) conditions -> . condition
    (92) conditions -> . condition opLogic conditions
    (93) conditions -> . LPAREN conditions RPAREN
    (94) condition -> . valor
    (95) condition -> . valor opSymbol valor
    (96) condition -> . NOT condition
    (97) condition -> . LPAREN conditions RPAREN
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN

    LPAREN          shift and go to state 213
    NOT             shift and go to state 217
    INT             shift and go to state 99
    VARIABLE        shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    ID              shift and go to state 34
    EMPTY           shift and go to state 37

    conditions                     shift and go to state 456
    condition                      shift and go to state 215
    valor                          shift and go to state 216
    llamadaFuncion                 shift and go to state 102

state 445

    (120) dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .

    VARIABLE        reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ECHO            reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PRINT           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    TRY             reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ID              reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    EMPTY           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CLASS           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    THROW           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CONST           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    THIS            reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    INT             reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FLOAT           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    STATIC          reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FINAL           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    STRING          reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    BOOL            reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    NULL            reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ARRAY           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    IF              reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    DO              reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    SWITCH          reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FOREACH         reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FOR             reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    RBRACE          reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    BREAK           reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CASE            reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 120 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)


state 446

    (148) default -> DEFAULT COLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 457


state 447

    (149) default -> DEFAULT SEMICOLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 458


state 448

    (130) case -> CASE valor COLON body . BREAK SEMICOLON
    (132) case -> CASE valor COLON body .

    BREAK           shift and go to state 459
    CASE            reduce using rule 132 (case -> CASE valor COLON body .)
    DEFAULT         reduce using rule 132 (case -> CASE valor COLON body .)
    RBRACE          reduce using rule 132 (case -> CASE valor COLON body .)
    ENDSWITCH       reduce using rule 132 (case -> CASE valor COLON body .)


state 449

    (131) case -> CASE valor SEMICOLON body . BREAK SEMICOLON

    BREAK           shift and go to state 460


state 450

    (129) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    EMPTY           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 129 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)


state 451

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT . SEMICOLON VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT . SEMICOLON VARIABLE DOUBLEMINUS

    SEMICOLON       shift and go to state 461


state 452

    (168) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 462
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 453

    (190) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    EMPTY           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SEMICOLON       reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 190 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 454

    (183) classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE . body RBRACE
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 463
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 455

    (88) else_blocks -> ELSE LBRACE body . RBRACE

    RBRACE          shift and go to state 464


state 456

    (89) else_blocks -> ELSEIF LPAREN conditions . RPAREN LBRACE body RBRACE else_blocks

    RPAREN          shift and go to state 465


state 457

    (148) default -> DEFAULT COLON body BREAK SEMICOLON .

    RBRACE          reduce using rule 148 (default -> DEFAULT COLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 148 (default -> DEFAULT COLON body BREAK SEMICOLON .)


state 458

    (149) default -> DEFAULT SEMICOLON body BREAK SEMICOLON .

    RBRACE          reduce using rule 149 (default -> DEFAULT SEMICOLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 149 (default -> DEFAULT SEMICOLON body BREAK SEMICOLON .)


state 459

    (130) case -> CASE valor COLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 466


state 460

    (131) case -> CASE valor SEMICOLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 467


state 461

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON . VARIABLE DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON . VARIABLE DOUBLEMINUS

    VARIABLE        shift and go to state 468


state 462

    (168) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 469


state 463

    (183) classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 470


state 464

    (88) else_blocks -> ELSE LBRACE body RBRACE .

    VARIABLE        reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    ECHO            reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    PRINT           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    TRY             reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    FUNCTION        reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    RETURN          reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    ID              reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    EMPTY           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    CLASS           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    INTERFACE       reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    INCLUDE         reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    THROW           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    CONST           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    THIS            reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    INT             reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    FLOAT           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    PRIVATE         reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    PROTECTED       reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    PUBLIC          reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    STATIC          reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    FINAL           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    STRING          reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    BOOL            reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    NULL            reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    ARRAY           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    IF              reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    WHILE           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    DO              reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    SWITCH          reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    FOREACH         reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    FOR             reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    RBRACE          reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    BREAK           reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    CASE            reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)
    DEFAULT         reduce using rule 88 (else_blocks -> ELSE LBRACE body RBRACE .)


state 465

    (89) else_blocks -> ELSEIF LPAREN conditions RPAREN . LBRACE body RBRACE else_blocks

    LBRACE          shift and go to state 471


state 466

    (130) case -> CASE valor COLON body BREAK SEMICOLON .

    CASE            reduce using rule 130 (case -> CASE valor COLON body BREAK SEMICOLON .)
    DEFAULT         reduce using rule 130 (case -> CASE valor COLON body BREAK SEMICOLON .)
    RBRACE          reduce using rule 130 (case -> CASE valor COLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 130 (case -> CASE valor COLON body BREAK SEMICOLON .)


state 467

    (131) case -> CASE valor SEMICOLON body BREAK SEMICOLON .

    CASE            reduce using rule 131 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)
    DEFAULT         reduce using rule 131 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)
    RBRACE          reduce using rule 131 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 131 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)


state 468

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE . DOUBLEPLUS
    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE . DOUBLEMINUS

    DOUBLEPLUS      shift and go to state 472
    DOUBLEMINUS     shift and go to state 473


state 469

    (168) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .

    CATCH           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FINALLY         reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    VARIABLE        reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    EMPTY           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    SEMICOLON       reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 168 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)


state 470

    (183) classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .

    INT_TYPE        reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FLOAT_TYPE      reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STRING_TYPE     reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BOOL_TYPE       reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ARRAY_TYPE      reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    VOID            reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NEW             reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 183 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)


state 471

    (89) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE . body RBRACE else_blocks
    (110) body -> . sentenciaList
    (111) body -> . empty
    (112) sentenciaList -> . sentencia
    (113) sentenciaList -> . sentencia sentenciaList
    (75) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . alterVar
    (31) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (32) asignacion -> . VARIABLE minuse SEMICOLON
    (33) asignacion -> . VARIABLE pluse SEMICOLON
    (34) asignacion -> . VARIABLE EQUALS funcion_strlen SEMICOLON
    (45) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (66) comparacion -> . valornumerico opSymbol valornumerico
    (67) impresion -> . ECHO imprimir SEMICOLON
    (68) impresion -> . PRINT imprimir SEMICOLON
    (76) estructurasPrograma -> . controlStructure
    (77) estructurasPrograma -> . dataStructure
    (166) try -> . TRY LBRACE body RBRACE catchs
    (167) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (172) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (173) funcionDeclaration -> . data FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (25) returnStatement -> . RETURN expresion SEMICOLON
    (26) returnStatement -> . RETURN SEMICOLON
    (174) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (175) llamadaFuncion -> . EMPTY LPAREN argumentos RPAREN
    (176) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (178) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (179) classDeclarate -> . classInterface
    (199) interface -> . INTERFACE ID LBRACE sentenciaList RBRACE
    (171) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (200) includes -> . INCLUDE STRING SEMICOLON
    (201) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (202) namespace -> . NAMESPACE ID SEMICOLON
    (203) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (205) throw -> . THROW valor SEMICOLON
    (206) instance -> . VARIABLE INSTANCEOF ID
    (207) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (208) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (209) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (210) concatenate -> . valor DOT STRING
    (78) alterVar -> . VARIABLE DOUBLEPLUS SEMICOLON
    (79) alterVar -> . VARIABLE DOUBLEMINUS SEMICOLON
    (49) valornumerico -> . INT
    (50) valornumerico -> . FLOAT
    (51) valornumerico -> . VARIABLE
    (80) controlStructure -> . if
    (81) controlStructure -> . for
    (82) controlStructure -> . while
    (83) controlStructure -> . dowhile
    (84) controlStructure -> . switch
    (85) controlStructure -> . foreach
    (135) dataStructure -> . array
    (193) data -> . ABSTRACT
    (194) data -> . PRIVATE
    (195) data -> . PROTECTED
    (196) data -> . PUBLIC
    (197) data -> . STATIC
    (198) data -> . FINAL
    (187) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (189) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (190) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (52) valor -> . INT
    (53) valor -> . VARIABLE
    (54) valor -> . FLOAT
    (55) valor -> . STRING
    (56) valor -> . BOOL
    (57) valor -> . NULL
    (58) valor -> . ARRAY
    (59) valor -> . llamadaFuncion
    (86) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (87) if -> . IF LPAREN conditions RPAREN body SEMICOLON
    (114) for -> . forStatement
    (118) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (119) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (120) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (121) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (122) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (129) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (136) array -> . VARIABLE EQUALS arrays SEMICOLON
    (137) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (138) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (139) array -> . map
    (115) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (143) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (144) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 75 (empty -> .)
    VARIABLE        shift and go to state 26
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    TRY             shift and go to state 32
    FUNCTION        shift and go to state 33
    RETURN          shift and go to state 36
    ID              shift and go to state 34
    EMPTY           shift and go to state 37
    CLASS           shift and go to state 38
    INTERFACE       shift and go to state 40
    INCLUDE         shift and go to state 41
    NAMESPACE       shift and go to state 43
    THROW           shift and go to state 44
    CONST           shift and go to state 46
    THIS            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    ABSTRACT        shift and go to state 57
    PRIVATE         shift and go to state 58
    PROTECTED       shift and go to state 59
    PUBLIC          shift and go to state 60
    STATIC          shift and go to state 61
    FINAL           shift and go to state 62
    STRING          shift and go to state 42
    BOOL            shift and go to state 63
    NULL            shift and go to state 64
    ARRAY           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 68
    DO              shift and go to state 69
    SWITCH          shift and go to state 70
    FOREACH         shift and go to state 71
    FOR             shift and go to state 73

    body                           shift and go to state 474
    sentenciaList                  shift and go to state 165
    empty                          shift and go to state 166
    sentencia                      shift and go to state 167
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    alterVar                       shift and go to state 25
    valornumerico                  shift and go to state 27
    controlStructure               shift and go to state 30
    dataStructure                  shift and go to state 31
    data                           shift and go to state 35
    classInterface                 shift and go to state 39
    valor                          shift and go to state 45
    if                             shift and go to state 50
    for                            shift and go to state 51
    while                          shift and go to state 52
    dowhile                        shift and go to state 53
    switch                         shift and go to state 54
    foreach                        shift and go to state 55
    array                          shift and go to state 56
    forStatement                   shift and go to state 67
    map                            shift and go to state 72

state 472

    (116) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS .

    RPAREN          reduce using rule 116 (forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS .)


state 473

    (117) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS .

    RPAREN          reduce using rule 117 (forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS .)


state 474

    (89) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body . RBRACE else_blocks

    RBRACE          shift and go to state 475


state 475

    (89) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE . else_blocks
    (88) else_blocks -> . ELSE LBRACE body RBRACE
    (89) else_blocks -> . ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (90) else_blocks -> . empty
    (75) empty -> .

    ELSE            shift and go to state 426
    ELSEIF          shift and go to state 427
    VARIABLE        reduce using rule 75 (empty -> .)
    ECHO            reduce using rule 75 (empty -> .)
    PRINT           reduce using rule 75 (empty -> .)
    TRY             reduce using rule 75 (empty -> .)
    FUNCTION        reduce using rule 75 (empty -> .)
    RETURN          reduce using rule 75 (empty -> .)
    ID              reduce using rule 75 (empty -> .)
    EMPTY           reduce using rule 75 (empty -> .)
    CLASS           reduce using rule 75 (empty -> .)
    INTERFACE       reduce using rule 75 (empty -> .)
    INCLUDE         reduce using rule 75 (empty -> .)
    NAMESPACE       reduce using rule 75 (empty -> .)
    THROW           reduce using rule 75 (empty -> .)
    CONST           reduce using rule 75 (empty -> .)
    THIS            reduce using rule 75 (empty -> .)
    INT             reduce using rule 75 (empty -> .)
    FLOAT           reduce using rule 75 (empty -> .)
    ABSTRACT        reduce using rule 75 (empty -> .)
    PRIVATE         reduce using rule 75 (empty -> .)
    PROTECTED       reduce using rule 75 (empty -> .)
    PUBLIC          reduce using rule 75 (empty -> .)
    STATIC          reduce using rule 75 (empty -> .)
    FINAL           reduce using rule 75 (empty -> .)
    STRING          reduce using rule 75 (empty -> .)
    BOOL            reduce using rule 75 (empty -> .)
    NULL            reduce using rule 75 (empty -> .)
    ARRAY           reduce using rule 75 (empty -> .)
    IF              reduce using rule 75 (empty -> .)
    WHILE           reduce using rule 75 (empty -> .)
    DO              reduce using rule 75 (empty -> .)
    SWITCH          reduce using rule 75 (empty -> .)
    FOREACH         reduce using rule 75 (empty -> .)
    FOR             reduce using rule 75 (empty -> .)
    CLOSETAG        reduce using rule 75 (empty -> .)
    RBRACE          reduce using rule 75 (empty -> .)
    SEMICOLON       reduce using rule 75 (empty -> .)
    BREAK           reduce using rule 75 (empty -> .)
    ENDSWITCH       reduce using rule 75 (empty -> .)
    CASE            reduce using rule 75 (empty -> .)
    DEFAULT         reduce using rule 75 (empty -> .)

    else_blocks                    shift and go to state 476
    empty                          shift and go to state 428

state 476

    (89) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .

    VARIABLE        reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ECHO            reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRINT           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    TRY             reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FUNCTION        reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RETURN          reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ID              reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    EMPTY           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLASS           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INTERFACE       reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INCLUDE         reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NAMESPACE       reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THROW           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CONST           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THIS            reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INT             reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FLOAT           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ABSTRACT        reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRIVATE         reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PROTECTED       reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PUBLIC          reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STATIC          reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FINAL           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STRING          reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BOOL            reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NULL            reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ARRAY           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    IF              reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    WHILE           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DO              reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    SWITCH          reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOREACH         reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOR             reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLOSETAG        reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RBRACE          reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    SEMICOLON       reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BREAK           reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ENDSWITCH       reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CASE            reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DEFAULT         reduce using rule 89 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 189 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 191 resolved as shift
WARNING: shift/reduce conflict for AND in state 253 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_AND in state 253 resolved as shift
WARNING: shift/reduce conflict for OR in state 253 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OR in state 253 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 257 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 257 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 257 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 257 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 257 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 257 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 331 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 361 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (valornumerico -> INT)
WARNING: rejected rule (valor -> INT) in state 48
WARNING: reduce/reduce conflict in state 49 resolved using rule (valornumerico -> FLOAT)
WARNING: rejected rule (valor -> FLOAT) in state 49
WARNING: reduce/reduce conflict in state 115 resolved using rule (expresion -> llamadaFuncion)
WARNING: rejected rule (valor -> llamadaFuncion) in state 115
WARNING: reduce/reduce conflict in state 119 resolved using rule (valornumerico -> INT)
WARNING: rejected rule (valor -> INT) in state 119
WARNING: reduce/reduce conflict in state 120 resolved using rule (valornumerico -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 120
WARNING: reduce/reduce conflict in state 121 resolved using rule (valornumerico -> FLOAT)
WARNING: rejected rule (valor -> FLOAT) in state 121
WARNING: reduce/reduce conflict in state 192 resolved using rule (valornumerico -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 192
WARNING: reduce/reduce conflict in state 325 resolved using rule (conditions -> LPAREN conditions RPAREN)
WARNING: rejected rule (condition -> LPAREN conditions RPAREN) in state 325
