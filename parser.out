Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AS
    BOOL
    CATCH
    CLONE
    CLOSETAG
    CONCATENATEEQUAL
    CONST
    CONTINUE
    DECLARE
    DO
    EMPTY
    ENDSWITCH
    EXCEPTION
    FINAL
    FINALLY
    GLOBAL
    IMPLEMENTS
    INCLUDE
    INSTANCEOF
    INTERFACE
    ISSET
    LIST
    MINUSEQUAL
    NAMESPACE
    NEW
    OPENTAG
    PLUSEQUAL
    POTENCIA
    PRIVATE
    PROTECTED
    PUBLIC
    STATIC
    THROW
    TRY

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencia
Rule 2     programa -> sentencia programa
Rule 3     sentencia -> asignacion
Rule 4     sentencia -> impresion
Rule 5     sentencia -> comparacion
Rule 6     sentencia -> estructurasProgram
Rule 7     asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
Rule 8     sentencias -> sentencia
Rule 9     sentencias -> sentencia sentencias
Rule 10    sentencias -> empty
Rule 11    asignacion -> VARIABLE EQUALS operaArit SEMICOLON
Rule 12    impresion -> ECHO imprimir SEMICOLON
Rule 13    impresion -> PRINT imprimir SEMICOLON
Rule 14    estructurasProgram -> controlStructure
Rule 15    estructurasProgram -> dataStructure
Rule 16    estructurasProgram -> funcionDeclarate
Rule 17    estructurasProgram -> classDeclarate
Rule 18    controlStructure -> if
Rule 19    controlStructure -> for
Rule 20    controlStructure -> while
Rule 21    controlStructure -> switch
Rule 22    if -> statementif ELSE body
Rule 23    if -> statementif ELSE if
Rule 24    if -> statementif ELSEIF if
Rule 25    if -> statementif
Rule 26    statementif -> IF LPAREN conditionProdu RPAREN LBRACE body RBRACE
Rule 27    conditionProdu -> condition
Rule 28    conditionProdu -> condition opLogic condition conditionProdu
Rule 29    condition -> valor opSymbol valor
Rule 30    condition -> LPAREN conditionProdu RPAREN
Rule 31    opSymbol -> EQ
Rule 32    opSymbol -> NEQ
Rule 33    opSymbol -> STRICTEQ
Rule 34    opSymbol -> STRICTNEQ
Rule 35    opSymbol -> LT
Rule 36    opSymbol -> GT
Rule 37    opSymbol -> LEQ
Rule 38    opSymbol -> GEQ
Rule 39    opLogic -> AND
Rule 40    opLogic -> OR
Rule 41    opLogic -> NOT
Rule 42    for -> forStatement
Rule 43    forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE
Rule 44    forStatement -> FOREACH LPAREN forcondition RPAREN LBRACE body break SEMICOLON RBRACE
Rule 45    forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
Rule 46    forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS
Rule 47    while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE
Rule 48    while -> WHILE LPAREN condition RPAREN LBRACE RBRACE
Rule 49    switch -> SWITCH LPAREN condition RPAREN LBRACE caseLists RBRACE
Rule 50    switch -> SWITCH LPAREN condition RPAREN LBRACE RBRACE
Rule 51    caseLists -> cases default
Rule 52    caseLists -> cases
Rule 53    caseLists -> default
Rule 54    caseLists -> empty
Rule 55    cases -> case cases
Rule 56    cases -> case
Rule 57    case -> CASE valor COLON body BREAK SEMICOLON
Rule 58    default -> DEFAULT COLON body BREAK SEMICOLON
Rule 59    dataStructure -> array
Rule 60    dataStructure -> map
Rule 61    funcionDeclarate -> FUNCTION ID LPAREN parametros RPAREN LBRACE funcionBody RBRACE
Rule 62    funcionDeclarate -> FUNCTION ID LPAREN parametros RPAREN DOUBLEDOT dataType LBRACE funcionBody RBRACE
Rule 63    funcionBody -> body
Rule 64    funcionBody -> RETURN expresion SEMICOLON
Rule 65    parametros -> parametro
Rule 66    parametros -> parametro COMMA parametros
Rule 67    parametros -> empty
Rule 68    parametro -> ID
Rule 69    parametro -> dataType ID
Rule 70    parametro -> ID EQUALS valor
Rule 71    parametro -> dataType ID EQUALS valor
Rule 72    arrowfunction -> FN LPAREN parametros RPAREN ARROWMAP expresion SEMICOLON
Rule 73    brace -> LBRACE body RBRACE
Rule 74    funcionParen -> ID LPAREN parametros RPAREN
Rule 75    funcionAnonima -> VARIABLE EQUALS FUNCTION LPAREN parametros RPAREN LBRACE RETURN expresion SEMICOLON RBRACE SEMICOLON
Rule 76    classDeclarate -> CLASS ID LBRACE classBody RBRACE
Rule 77    classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE
Rule 78    classBody -> classMember classBody
Rule 79    classBody -> empty
Rule 80    classMember -> dataType VARIABLE SEMICOLON
Rule 81    classMember -> dataType FUNCTION ID LPAREN parametros RPAREN brace
Rule 82    accessMember -> VARIABLE ARROW ID
Rule 83    accessMember -> VARIABLE ARROW funcionParen
Rule 84    array -> VARIABLE EQUALS LBRACKET repiteValores RBRACKET SEMICOLON
Rule 85    array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
Rule 86    array -> VARIABLE EQUALS ARRAY LPAREN mapProduc RPAREN SEMICOLON
Rule 87    array -> VARIABLE EQUALS LBRACKET mapProduc RBRACKET SEMICOLON
Rule 88    map -> VARIABLE EQUALS LBRACKET mapProduc RBRACKET SEMICOLON
Rule 89    map -> VARIABLE EQUALS ARRAY LPAREN mapProduc RPAREN SEMICOLON
Rule 90    mapProduc -> mapArrow
Rule 91    mapProduc -> mapArrow COMMA mapProduc
Rule 92    mapArrow -> valor ARROWMAP valor
Rule 93    body -> sentencia
Rule 94    body -> sentencia sentencias
Rule 95    body -> empty
Rule 96    imprimir -> LPAREN repiteValores RPAREN
Rule 97    imprimir -> LPAREN RPAREN
Rule 98    imprimir -> repiteValores
Rule 99    valor -> INT
Rule 100   valor -> FLOAT
Rule 101   valor -> VARIABLE
Rule 102   valor -> STRING
Rule 103   valor -> TRUE
Rule 104   valor -> FALSE
Rule 105   valor -> THIS
Rule 106   valor -> funcionParen
Rule 107   valor -> funcionAnonima
Rule 108   dataType -> INTEGER
Rule 109   dataType -> FLOATING
Rule 110   dataType -> STRINGS
Rule 111   dataType -> BOOLEAN
Rule 112   dataType -> VOID
Rule 113   comparacion -> INT operador INT
Rule 114   comparacion -> FLOAT operador FLOAT
Rule 115   comparacion -> INT operador FLOAT
Rule 116   comparacion -> FLOAT operador INT
Rule 117   repiteValores -> valor COMMA repiteValores
Rule 118   repiteValores -> valor
Rule 119   operaArit -> valor
Rule 120   operaArit -> valor operador operaArit
Rule 121   operaArit -> valor DOT valor
Rule 122   expresion -> valor
Rule 123   expresion -> operaArit
Rule 124   expresion -> conditionProdu
Rule 125   expresion -> ternario
Rule 126   expresion -> accessMember
Rule 127   operador -> PLUS
Rule 128   operador -> MINUS
Rule 129   operador -> TIMES
Rule 130   operador -> DIVIDE
Rule 131   operador -> MODULO
Rule 132   ternario -> conditionProdu QUESTION expresion COLON expresion
Rule 133   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 39
ARRAY                : 85 86 89
ARROW                : 82 83
ARROWMAP             : 72 92
AS                   : 
BOOL                 : 
BOOLEAN              : 111
BREAK                : 57 58
CASE                 : 57
CATCH                : 
CLASS                : 76 77
CLONE                : 
CLOSETAG             : 
COLON                : 57 58 132
COMMA                : 66 91 117
CONCATENATEEQUAL     : 
CONST                : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 58
DIVIDE               : 130
DO                   : 
DOT                  : 121
DOUBLEDOT            : 62
DOUBLEMINUS          : 46
DOUBLEPLUS           : 45
ECHO                 : 12
ELSE                 : 22 23
ELSEIF               : 24
EMPTY                : 
ENDSWITCH            : 
EQ                   : 31
EQUALS               : 7 11 45 46 70 71 75 84 85 86 87 88 89
EXCEPTION            : 
EXTENDS              : 77
FALSE                : 104
FGETS                : 7
FINAL                : 
FINALLY              : 
FLOAT                : 100 114 114 115 116
FLOATING             : 109
FN                   : 72
FOR                  : 43
FOREACH              : 44
FUNCTION             : 61 62 75 81
GEQ                  : 38
GLOBAL               : 
GT                   : 36
ID                   : 61 62 68 69 70 71 74 76 77 77 81 82
IF                   : 26
IMPLEMENTS           : 
INCLUDE              : 
INSTANCEOF           : 
INT                  : 45 45 46 46 99 113 113 115 116
INTEGER              : 108
INTERFACE            : 
ISSET                : 
LBRACE               : 26 43 44 47 48 49 50 61 62 73 75 76 77
LBRACKET             : 84 87 88
LEQ                  : 37
LIST                 : 
LPAREN               : 7 26 30 43 44 47 48 49 50 61 62 72 74 75 81 85 86 89 96 97
LT                   : 35
MINUS                : 128
MINUSEQUAL           : 
MODULO               : 131
NAMESPACE            : 
NEQ                  : 32
NEW                  : 
NOT                  : 41
OPENTAG              : 
OR                   : 40
PLUS                 : 127
PLUSEQUAL            : 
POTENCIA             : 
PRINT                : 13
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
QUESTION             : 132
RBRACE               : 26 43 44 47 48 49 50 61 62 73 75 76 77
RBRACKET             : 84 87 88
RETURN               : 64 75
RPAREN               : 7 26 30 43 44 47 48 49 50 61 62 72 74 75 81 85 86 89 96 97
SEMICOLON            : 7 11 12 13 44 45 45 46 46 57 58 64 72 75 75 80 84 85 86 87 88 89
STATIC               : 
STDIN                : 7
STRICTEQ             : 33
STRICTNEQ            : 34
STRING               : 102
STRINGS              : 110
SWITCH               : 49 50
THIS                 : 105
THROW                : 
TIMES                : 129
TRUE                 : 103
TRY                  : 
VARIABLE             : 7 11 45 45 45 46 46 46 75 80 82 83 84 85 86 87 88 89 101
VOID                 : 112
WHILE                : 47 48
error                : 

Nonterminals, with rules where they appear

accessMember         : 126
array                : 59
arrowfunction        : 
asignacion           : 3
asignacion_fgets     : 
body                 : 22 26 43 44 47 57 58 63 73
brace                : 81
break                : 44
case                 : 55 56
caseLists            : 49
cases                : 51 52 55
classBody            : 76 77 78
classDeclarate       : 17
classMember          : 78
comparacion          : 5
condition            : 27 28 28 47 48 49 50
conditionProdu       : 26 28 30 124 132
controlStructure     : 14
dataStructure        : 15
dataType             : 62 69 71 80 81
default              : 51 53
empty                : 10 54 67 79 95
estructurasProgram   : 6
expresion            : 64 72 75 132 132
for                  : 19
forStatement         : 42
forcondition         : 43 44
funcionAnonima       : 107
funcionBody          : 61 62
funcionDeclarate     : 16
funcionParen         : 83 106
if                   : 18 23 24
impresion            : 4
imprimir             : 12 13
map                  : 60
mapArrow             : 90 91
mapProduc            : 86 87 88 89 91
opLogic              : 28
opSymbol             : 29 45 46
operaArit            : 11 120 123
operador             : 113 114 115 116 120
parametro            : 65 66
parametros           : 61 62 66 72 74 75 81
programa             : 2 0
repiteValores        : 84 85 96 98 117
sentencia            : 1 2 8 9 93 94
sentencias           : 9 94
statementif          : 22 23 24 25
switch               : 21
ternario             : 125
valor                : 29 29 57 70 71 92 92 117 118 119 120 121 121 122
while                : 20

