Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EMPTY
    OBJECT_TYPE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OPENTAG programa CLOSETAG
Rule 2     programa -> sentencia
Rule 3     programa -> sentencia programa
Rule 4     sentencia -> asignacion
Rule 5     sentencia -> asignacion_fgets
Rule 6     sentencia -> comparacion
Rule 7     sentencia -> impresion
Rule 8     sentencia -> estructurasPrograma
Rule 9     sentencia -> try
Rule 10    sentencia -> funcionDeclaration
Rule 11    sentencia -> returnStatement
Rule 12    sentencia -> llamadaFuncion
Rule 13    sentencia -> classDeclarate
Rule 14    sentencia -> interface
Rule 15    sentencia -> objeto
Rule 16    sentencia -> includes
Rule 17    sentencia -> namespace
Rule 18    sentencia -> anonymousFunction
Rule 19    sentencia -> throw
Rule 20    sentencia -> instance
Rule 21    sentencia -> constdeclaration
Rule 22    sentencia -> thisdeclaration
Rule 23    sentencia -> concatenate
Rule 24    sentencia -> minuse
Rule 25    sentencia -> pluse
Rule 26    returnStatement -> RETURN expresion SEMICOLON
Rule 27    returnStatement -> RETURN SEMICOLON
Rule 28    asignacion -> VARIABLE EQUALS expresion SEMICOLON
Rule 29    expresion -> valor
Rule 30    expresion -> expresion opLogic expresion
Rule 31    expresion -> comparacion
Rule 32    expresion -> LPAREN comparacion RPAREN
Rule 33    expresion -> operaArit
Rule 34    expresion -> LPAREN expresion RPAREN
Rule 35    expresion -> operador_ternario
Rule 36    asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
Rule 37    operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor
Rule 38    operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor
Rule 39    operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor
Rule 40    operaArit -> valor
Rule 41    operaArit -> valor operador operaArit
Rule 42    operaArit -> LPAREN operaArit RPAREN
Rule 43    valornumerico -> INT
Rule 44    valornumerico -> FLOAT
Rule 45    valornumerico -> VARIABLE
Rule 46    valor -> INT
Rule 47    valor -> VARIABLE
Rule 48    valor -> FLOAT
Rule 49    valor -> STRING
Rule 50    valor -> BOOL
Rule 51    valor -> NULL
Rule 52    valor -> ARRAY
Rule 53    valor -> llamadaFuncion
Rule 54    operador -> PLUS
Rule 55    operador -> MINUS
Rule 56    operador -> TIMES
Rule 57    operador -> DIVIDE
Rule 58    operador -> MODULO
Rule 59    operador -> POTENCIA
Rule 60    comparacion -> valor opSymbol valor
Rule 61    comparacion -> expresion opSymbol expresion
Rule 62    impresion -> ECHO imprimir SEMICOLON
Rule 63    impresion -> PRINT imprimir SEMICOLON
Rule 64    imprimir -> LPAREN repiteValores RPAREN
Rule 65    imprimir -> LPAREN RPAREN
Rule 66    imprimir -> repiteValores
Rule 67    imprimir -> operador_ternario
Rule 68    imprimir -> empty
Rule 69    repiteValores -> valor
Rule 70    repiteValores -> valor COMMA repiteValores
Rule 71    empty -> <empty>
Rule 72    estructurasPrograma -> controlStructure
Rule 73    estructurasPrograma -> dataStructure
Rule 74    controlStructure -> if
Rule 75    controlStructure -> for
Rule 76    controlStructure -> while
Rule 77    controlStructure -> dowhile
Rule 78    controlStructure -> switch
Rule 79    controlStructure -> foreach
Rule 80    if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
Rule 81    if -> IF LPAREN conditions RPAREN body
Rule 82    else_blocks -> ELSE LBRACE body RBRACE
Rule 83    else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
Rule 84    else_blocks -> empty
Rule 85    conditions -> condition
Rule 86    conditions -> condition opLogic conditions
Rule 87    conditions -> LPAREN conditions RPAREN
Rule 88    condition -> valor
Rule 89    condition -> valor opSymbol valor
Rule 90    condition -> NOT condition
Rule 91    condition -> LPAREN conditions RPAREN
Rule 92    opSymbol -> EQ
Rule 93    opSymbol -> NEQ
Rule 94    opSymbol -> STRICTEQ
Rule 95    opSymbol -> STRICTNEQ
Rule 96    opSymbol -> LT
Rule 97    opSymbol -> GT
Rule 98    opSymbol -> LEQ
Rule 99    opSymbol -> GEQ
Rule 100   opLogic -> AND
Rule 101   opLogic -> LOGICAL_AND
Rule 102   opLogic -> OR
Rule 103   opLogic -> LOGICAL_OR
Rule 104   body -> sentenciaList
Rule 105   body -> empty
Rule 106   sentenciaList -> sentencia
Rule 107   sentenciaList -> sentencia sentenciaList
Rule 108   for -> forStatement
Rule 109   forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE
Rule 110   forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
Rule 111   forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS
Rule 112   while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE
Rule 113   while -> WHILE LPAREN condition RPAREN LBRACE RBRACE
Rule 114   dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
Rule 115   switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
Rule 116   switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
Rule 117   caseLists -> cases
Rule 118   caseLists -> cases default
Rule 119   caseLists -> default
Rule 120   caseLists -> empty
Rule 121   cases -> case
Rule 122   cases -> case cases
Rule 123   foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
Rule 124   case -> CASE valor COLON body BREAK SEMICOLON
Rule 125   case -> CASE valor SEMICOLON body BREAK SEMICOLON
Rule 126   case -> CASE valor COLON body
Rule 127   case -> CASE valor SEMICOLON
Rule 128   case -> CASE valor
Rule 129   dataStructure -> array
Rule 130   array -> VARIABLE EQUALS arrays SEMICOLON
Rule 131   array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
Rule 132   array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
Rule 133   array -> map
Rule 134   arrays -> LBRACKET repiteValores RBRACKET
Rule 135   arrayAnidado -> arrays
Rule 136   arrayAnidado -> arrays COMMA arrayAnidado
Rule 137   map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
Rule 138   map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON
Rule 139   maps -> mapArrow
Rule 140   maps -> mapArrow COMMA maps
Rule 141   mapArrow -> valor ARROWMAP valor
Rule 142   default -> DEFAULT COLON body BREAK SEMICOLON
Rule 143   default -> DEFAULT SEMICOLON body BREAK SEMICOLON
Rule 144   default -> DEFAULT COLON body
Rule 145   default -> DEFAULT SEMICOLON body
Rule 146   default -> DEFAULT
Rule 147   argumentos -> argumento
Rule 148   argumentos -> argumento COMMA argumentos
Rule 149   argumentos -> empty
Rule 150   argumento -> type VARIABLE
Rule 151   argumento -> VARIABLE EQUALS valor
Rule 152   argumento -> type VARIABLE EQUALS valor
Rule 153   argumento -> operaArit
Rule 154   argumento -> valor
Rule 155   argumento -> llamadaFuncion
Rule 156   argumento -> VARIABLE
Rule 157   type -> INT_TYPE
Rule 158   type -> FLOAT_TYPE
Rule 159   type -> STRING_TYPE
Rule 160   type -> BOOL_TYPE
Rule 161   type -> ARRAY_TYPE
Rule 162   type -> VOID
Rule 163   try -> TRY LBRACE body RBRACE catchs
Rule 164   try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
Rule 165   catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE
Rule 166   catchs -> catch
Rule 167   catchs -> catch catchs
Rule 168   objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
Rule 169   funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
Rule 170   llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON
Rule 171   llamadaFuncion -> ID LPAREN argumentos RPAREN
Rule 172   llamadaFuncion -> ID LPAREN RPAREN SEMICOLON
Rule 173   llamadaFuncion -> ID LPAREN RPAREN
Rule 174   classDeclarate -> CLASS ID LBRACE classBody RBRACE
Rule 175   classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE
Rule 176   classDeclarate -> data CLASS ID LBRACE classBody RBRACE
Rule 177   classDeclarate -> classInterface
Rule 178   classBody -> classMember
Rule 179   classBody -> classMember classBody
Rule 180   classMember -> type VARIABLE SEMICOLON
Rule 181   classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
Rule 182   classMember -> objectInstantiation
Rule 183   objectInstantiation -> NEW ID LPAREN argumentos RPAREN
Rule 184   objectInstantiation -> NEW ID LPAREN RPAREN
Rule 185   classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 186   classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 187   classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 188   classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
Rule 189   impInterface -> ID
Rule 190   impInterface -> ID COMMA impInterface
Rule 191   data -> ABSTRACT
Rule 192   data -> PRIVATE
Rule 193   data -> PROTECTED
Rule 194   data -> PUBLIC
Rule 195   data -> STATIC
Rule 196   data -> FINAL
Rule 197   interface -> INTERFACE ID LBRACE classBody RBRACE
Rule 198   includes -> INCLUDE STRING SEMICOLON
Rule 199   includes -> INCLUDE STRING DOT STRING SEMICOLON
Rule 200   namespace -> NAMESPACE ID SEMICOLON
Rule 201   anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
Rule 202   throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
Rule 203   throw -> THROW valor SEMICOLON
Rule 204   instance -> VARIABLE INSTANCEOF ID
Rule 205   constdeclaration -> CONST ID EQUALS valor SEMICOLON
Rule 206   thisdeclaration -> THIS ARROW ID SEMICOLON
Rule 207   thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON
Rule 208   concatenate -> VARIABLE CONCATENATEEQUAL STRING
Rule 209   minuse -> VARIABLE MINUSEQUAL INT
Rule 210   pluse -> VARIABLE PLUSEQUAL INT

Terminals, with rules where they appear

ABSTRACT             : 191
AND                  : 100
ARRAY                : 52 132 138
ARRAY_TYPE           : 161
ARROW                : 168 206 207
ARROWMAP             : 141 201
AS                   : 123
BOOL                 : 50
BOOL_TYPE            : 160
BREAK                : 124 125 142 143
CASE                 : 124 125 126 127 128
CATCH                : 165
CLASS                : 174 175 176 185 186 187 188
CLOSETAG             : 1
COLON                : 37 38 39 116 124 126 142 144
COMMA                : 70 136 140 148 190
CONCATENATEEQUAL     : 208
CONST                : 205
DEFAULT              : 142 143 144 145 146
DIVIDE               : 57
DO                   : 114
DOT                  : 199
DOUBLEMINUS          : 111
DOUBLEPLUS           : 110
ECHO                 : 62
ELSE                 : 82
ELSEIF               : 83
EMPTY                : 
ENDSWITCH            : 116
EQ                   : 92
EQUALS               : 28 36 110 111 130 131 132 137 138 151 152 201 205
EXCEPTION            : 165 202
EXTENDS              : 175 186 188
FGETS                : 36
FINAL                : 196
FINALLY              : 164
FLOAT                : 44 48
FLOAT_TYPE           : 158
FN                   : 201
FOR                  : 109
FOREACH              : 123
FUNCTION             : 169 181
GEQ                  : 99
GT                   : 97
ID                   : 168 169 170 171 172 173 174 175 175 176 181 183 184 185 186 186 187 188 188 189 190 197 200 204 205 206 207
IF                   : 80 81
IMPLEMENTS           : 185 186 187 188
INCLUDE              : 198 199
INSTANCEOF           : 204
INT                  : 43 46 110 110 111 111 209 210
INTERFACE            : 197
INT_TYPE             : 157
LBRACE               : 80 82 83 109 112 113 114 115 123 163 164 164 165 169 174 175 176 181 185 186 187 188 197
LBRACKET             : 131 134 137
LEQ                  : 98
LOGICAL_AND          : 101
LOGICAL_OR           : 103
LPAREN               : 32 34 36 37 38 39 42 64 65 80 81 83 87 91 109 112 113 114 115 116 123 132 138 165 168 169 170 171 172 173 181 183 184 201 202 207
LT                   : 96
MINUS                : 55
MINUSEQUAL           : 209
MODULO               : 58
NAMESPACE            : 200
NEQ                  : 93
NEW                  : 183 184 202
NOT                  : 90
NULL                 : 51
OBJECT_TYPE          : 
OPENTAG              : 1
OR                   : 102
PLUS                 : 54
PLUSEQUAL            : 210
POTENCIA             : 59
PRINT                : 63
PRIVATE              : 192
PROTECTED            : 193
PUBLIC               : 194
QUESTION             : 37 38 39
RBRACE               : 80 82 83 109 112 113 114 115 123 163 164 164 165 169 174 175 176 181 185 186 187 188 197
RBRACKET             : 131 134 137
RETURN               : 26 27
RPAREN               : 32 34 36 37 38 39 42 64 65 80 81 83 87 91 109 112 113 114 115 116 123 132 138 165 168 169 170 171 172 173 181 183 184 201 202 207
SEMICOLON            : 26 27 28 36 62 63 110 110 111 111 114 116 124 125 125 127 130 131 132 137 138 142 143 143 145 168 170 172 180 198 199 200 201 202 203 205 206 207
STATIC               : 195
STDIN                : 36
STRICTEQ             : 94
STRICTNEQ            : 95
STRING               : 49 198 199 199 208
STRING_TYPE          : 159
SWITCH               : 115 116
THIS                 : 206 207
THROW                : 202 203
TIMES                : 56
TRY                  : 163 164
VARIABLE             : 28 36 39 45 47 110 110 110 111 111 111 123 123 130 131 132 137 138 150 151 152 156 165 168 180 201 204 208 209 210
VOID                 : 162
WHILE                : 112 113 114
error                : 

Nonterminals, with rules where they appear

anonymousFunction    : 18
argumento            : 147 148
argumentos           : 148 168 169 170 171 181 183
array                : 129
arrayAnidado         : 131 136
arrays               : 130 135 136
asignacion           : 4
asignacion_fgets     : 5
body                 : 80 81 82 83 109 112 114 123 124 125 126 142 143 144 145 163 164 164 165 169 181
case                 : 121 122
caseLists            : 115 116
cases                : 117 118 122
catch                : 166 167
catchs               : 163 164 167
classBody            : 174 175 176 179 185 186 187 188 197
classDeclarate       : 13
classInterface       : 177
classMember          : 178 179
comparacion          : 6 31 32 201
concatenate          : 23
condition            : 85 86 90 112 113 114
conditions           : 37 38 80 81 83 86 87 91
constdeclaration     : 21
controlStructure     : 72
data                 : 176 187 188
dataStructure        : 73
default              : 118 119
dowhile              : 77
else_blocks          : 80 83
empty                : 68 84 105 120 149
estructurasPrograma  : 8
expresion            : 26 28 30 30 34 61 61
for                  : 75
forStatement         : 108
forcondition         : 109
foreach              : 79
funcionDeclaration   : 10
if                   : 74
impInterface         : 185 186 187 188 190
impresion            : 7
imprimir             : 62 63
includes             : 16
inicio               : 0
instance             : 20
interface            : 14
llamadaFuncion       : 12 53 155
map                  : 133
mapArrow             : 139 140
maps                 : 137 138 140
minuse               : 24
namespace            : 17
objectInstantiation  : 182
objeto               : 15
opLogic              : 30 86
opSymbol             : 60 61 89 110 111
operaArit            : 33 41 42 153
operador             : 41
operador_ternario    : 35 67
pluse                : 25
programa             : 1 3
repiteValores        : 64 66 70 132 134 202
returnStatement      : 11
sentencia            : 2 3 106 107
sentenciaList        : 104 107
switch               : 78
thisdeclaration      : 22
throw                : 19
try                  : 9
type                 : 150 152 180 181
valor                : 29 37 37 38 39 40 41 60 60 69 70 88 89 89 115 116 124 125 126 127 128 141 141 151 152 154 203 205
valornumerico        : 
while                : 76

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OPENTAG programa CLOSETAG

    OPENTAG         shift and go to state 2

    inicio                         shift and go to state 1

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OPENTAG . programa CLOSETAG
    (2) programa -> . sentencia
    (3) programa -> . sentencia programa
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    programa                       shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 3

    (1) inicio -> OPENTAG programa . CLOSETAG

    CLOSETAG        shift and go to state 77


state 4

    (2) programa -> sentencia .
    (3) programa -> sentencia . programa
    (2) programa -> . sentencia
    (3) programa -> . sentencia programa
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    CLOSETAG        reduce using rule 2 (programa -> sentencia .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    sentencia                      shift and go to state 4
    programa                       shift and go to state 78
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 5

    (4) sentencia -> asignacion .

    VARIABLE        reduce using rule 4 (sentencia -> asignacion .)
    ECHO            reduce using rule 4 (sentencia -> asignacion .)
    PRINT           reduce using rule 4 (sentencia -> asignacion .)
    TRY             reduce using rule 4 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 4 (sentencia -> asignacion .)
    RETURN          reduce using rule 4 (sentencia -> asignacion .)
    ID              reduce using rule 4 (sentencia -> asignacion .)
    CLASS           reduce using rule 4 (sentencia -> asignacion .)
    INTERFACE       reduce using rule 4 (sentencia -> asignacion .)
    INCLUDE         reduce using rule 4 (sentencia -> asignacion .)
    NAMESPACE       reduce using rule 4 (sentencia -> asignacion .)
    THROW           reduce using rule 4 (sentencia -> asignacion .)
    CONST           reduce using rule 4 (sentencia -> asignacion .)
    THIS            reduce using rule 4 (sentencia -> asignacion .)
    INT             reduce using rule 4 (sentencia -> asignacion .)
    FLOAT           reduce using rule 4 (sentencia -> asignacion .)
    STRING          reduce using rule 4 (sentencia -> asignacion .)
    BOOL            reduce using rule 4 (sentencia -> asignacion .)
    NULL            reduce using rule 4 (sentencia -> asignacion .)
    ARRAY           reduce using rule 4 (sentencia -> asignacion .)
    LPAREN          reduce using rule 4 (sentencia -> asignacion .)
    ABSTRACT        reduce using rule 4 (sentencia -> asignacion .)
    PRIVATE         reduce using rule 4 (sentencia -> asignacion .)
    PROTECTED       reduce using rule 4 (sentencia -> asignacion .)
    PUBLIC          reduce using rule 4 (sentencia -> asignacion .)
    STATIC          reduce using rule 4 (sentencia -> asignacion .)
    FINAL           reduce using rule 4 (sentencia -> asignacion .)
    IF              reduce using rule 4 (sentencia -> asignacion .)
    WHILE           reduce using rule 4 (sentencia -> asignacion .)
    DO              reduce using rule 4 (sentencia -> asignacion .)
    SWITCH          reduce using rule 4 (sentencia -> asignacion .)
    FOREACH         reduce using rule 4 (sentencia -> asignacion .)
    FOR             reduce using rule 4 (sentencia -> asignacion .)
    CLOSETAG        reduce using rule 4 (sentencia -> asignacion .)
    RBRACE          reduce using rule 4 (sentencia -> asignacion .)
    BREAK           reduce using rule 4 (sentencia -> asignacion .)
    ENDSWITCH       reduce using rule 4 (sentencia -> asignacion .)
    CASE            reduce using rule 4 (sentencia -> asignacion .)
    DEFAULT         reduce using rule 4 (sentencia -> asignacion .)


state 6

    (5) sentencia -> asignacion_fgets .

    VARIABLE        reduce using rule 5 (sentencia -> asignacion_fgets .)
    ECHO            reduce using rule 5 (sentencia -> asignacion_fgets .)
    PRINT           reduce using rule 5 (sentencia -> asignacion_fgets .)
    TRY             reduce using rule 5 (sentencia -> asignacion_fgets .)
    FUNCTION        reduce using rule 5 (sentencia -> asignacion_fgets .)
    RETURN          reduce using rule 5 (sentencia -> asignacion_fgets .)
    ID              reduce using rule 5 (sentencia -> asignacion_fgets .)
    CLASS           reduce using rule 5 (sentencia -> asignacion_fgets .)
    INTERFACE       reduce using rule 5 (sentencia -> asignacion_fgets .)
    INCLUDE         reduce using rule 5 (sentencia -> asignacion_fgets .)
    NAMESPACE       reduce using rule 5 (sentencia -> asignacion_fgets .)
    THROW           reduce using rule 5 (sentencia -> asignacion_fgets .)
    CONST           reduce using rule 5 (sentencia -> asignacion_fgets .)
    THIS            reduce using rule 5 (sentencia -> asignacion_fgets .)
    INT             reduce using rule 5 (sentencia -> asignacion_fgets .)
    FLOAT           reduce using rule 5 (sentencia -> asignacion_fgets .)
    STRING          reduce using rule 5 (sentencia -> asignacion_fgets .)
    BOOL            reduce using rule 5 (sentencia -> asignacion_fgets .)
    NULL            reduce using rule 5 (sentencia -> asignacion_fgets .)
    ARRAY           reduce using rule 5 (sentencia -> asignacion_fgets .)
    LPAREN          reduce using rule 5 (sentencia -> asignacion_fgets .)
    ABSTRACT        reduce using rule 5 (sentencia -> asignacion_fgets .)
    PRIVATE         reduce using rule 5 (sentencia -> asignacion_fgets .)
    PROTECTED       reduce using rule 5 (sentencia -> asignacion_fgets .)
    PUBLIC          reduce using rule 5 (sentencia -> asignacion_fgets .)
    STATIC          reduce using rule 5 (sentencia -> asignacion_fgets .)
    FINAL           reduce using rule 5 (sentencia -> asignacion_fgets .)
    IF              reduce using rule 5 (sentencia -> asignacion_fgets .)
    WHILE           reduce using rule 5 (sentencia -> asignacion_fgets .)
    DO              reduce using rule 5 (sentencia -> asignacion_fgets .)
    SWITCH          reduce using rule 5 (sentencia -> asignacion_fgets .)
    FOREACH         reduce using rule 5 (sentencia -> asignacion_fgets .)
    FOR             reduce using rule 5 (sentencia -> asignacion_fgets .)
    CLOSETAG        reduce using rule 5 (sentencia -> asignacion_fgets .)
    RBRACE          reduce using rule 5 (sentencia -> asignacion_fgets .)
    BREAK           reduce using rule 5 (sentencia -> asignacion_fgets .)
    ENDSWITCH       reduce using rule 5 (sentencia -> asignacion_fgets .)
    CASE            reduce using rule 5 (sentencia -> asignacion_fgets .)
    DEFAULT         reduce using rule 5 (sentencia -> asignacion_fgets .)


state 7

    (6) sentencia -> comparacion .
    (31) expresion -> comparacion .

    VARIABLE        reduce using rule 6 (sentencia -> comparacion .)
    ECHO            reduce using rule 6 (sentencia -> comparacion .)
    PRINT           reduce using rule 6 (sentencia -> comparacion .)
    TRY             reduce using rule 6 (sentencia -> comparacion .)
    FUNCTION        reduce using rule 6 (sentencia -> comparacion .)
    RETURN          reduce using rule 6 (sentencia -> comparacion .)
    ID              reduce using rule 6 (sentencia -> comparacion .)
    CLASS           reduce using rule 6 (sentencia -> comparacion .)
    INTERFACE       reduce using rule 6 (sentencia -> comparacion .)
    INCLUDE         reduce using rule 6 (sentencia -> comparacion .)
    NAMESPACE       reduce using rule 6 (sentencia -> comparacion .)
    THROW           reduce using rule 6 (sentencia -> comparacion .)
    CONST           reduce using rule 6 (sentencia -> comparacion .)
    THIS            reduce using rule 6 (sentencia -> comparacion .)
    INT             reduce using rule 6 (sentencia -> comparacion .)
    FLOAT           reduce using rule 6 (sentencia -> comparacion .)
    STRING          reduce using rule 6 (sentencia -> comparacion .)
    BOOL            reduce using rule 6 (sentencia -> comparacion .)
    NULL            reduce using rule 6 (sentencia -> comparacion .)
    ARRAY           reduce using rule 6 (sentencia -> comparacion .)
    LPAREN          reduce using rule 6 (sentencia -> comparacion .)
    ABSTRACT        reduce using rule 6 (sentencia -> comparacion .)
    PRIVATE         reduce using rule 6 (sentencia -> comparacion .)
    PROTECTED       reduce using rule 6 (sentencia -> comparacion .)
    PUBLIC          reduce using rule 6 (sentencia -> comparacion .)
    STATIC          reduce using rule 6 (sentencia -> comparacion .)
    FINAL           reduce using rule 6 (sentencia -> comparacion .)
    IF              reduce using rule 6 (sentencia -> comparacion .)
    WHILE           reduce using rule 6 (sentencia -> comparacion .)
    DO              reduce using rule 6 (sentencia -> comparacion .)
    SWITCH          reduce using rule 6 (sentencia -> comparacion .)
    FOREACH         reduce using rule 6 (sentencia -> comparacion .)
    FOR             reduce using rule 6 (sentencia -> comparacion .)
    CLOSETAG        reduce using rule 6 (sentencia -> comparacion .)
    RBRACE          reduce using rule 6 (sentencia -> comparacion .)
    BREAK           reduce using rule 6 (sentencia -> comparacion .)
    ENDSWITCH       reduce using rule 6 (sentencia -> comparacion .)
    CASE            reduce using rule 6 (sentencia -> comparacion .)
    DEFAULT         reduce using rule 6 (sentencia -> comparacion .)
    EQ              reduce using rule 31 (expresion -> comparacion .)
    NEQ             reduce using rule 31 (expresion -> comparacion .)
    STRICTEQ        reduce using rule 31 (expresion -> comparacion .)
    STRICTNEQ       reduce using rule 31 (expresion -> comparacion .)
    LT              reduce using rule 31 (expresion -> comparacion .)
    GT              reduce using rule 31 (expresion -> comparacion .)
    LEQ             reduce using rule 31 (expresion -> comparacion .)
    GEQ             reduce using rule 31 (expresion -> comparacion .)
    AND             reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_AND     reduce using rule 31 (expresion -> comparacion .)
    OR              reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_OR      reduce using rule 31 (expresion -> comparacion .)


state 8

    (7) sentencia -> impresion .

    VARIABLE        reduce using rule 7 (sentencia -> impresion .)
    ECHO            reduce using rule 7 (sentencia -> impresion .)
    PRINT           reduce using rule 7 (sentencia -> impresion .)
    TRY             reduce using rule 7 (sentencia -> impresion .)
    FUNCTION        reduce using rule 7 (sentencia -> impresion .)
    RETURN          reduce using rule 7 (sentencia -> impresion .)
    ID              reduce using rule 7 (sentencia -> impresion .)
    CLASS           reduce using rule 7 (sentencia -> impresion .)
    INTERFACE       reduce using rule 7 (sentencia -> impresion .)
    INCLUDE         reduce using rule 7 (sentencia -> impresion .)
    NAMESPACE       reduce using rule 7 (sentencia -> impresion .)
    THROW           reduce using rule 7 (sentencia -> impresion .)
    CONST           reduce using rule 7 (sentencia -> impresion .)
    THIS            reduce using rule 7 (sentencia -> impresion .)
    INT             reduce using rule 7 (sentencia -> impresion .)
    FLOAT           reduce using rule 7 (sentencia -> impresion .)
    STRING          reduce using rule 7 (sentencia -> impresion .)
    BOOL            reduce using rule 7 (sentencia -> impresion .)
    NULL            reduce using rule 7 (sentencia -> impresion .)
    ARRAY           reduce using rule 7 (sentencia -> impresion .)
    LPAREN          reduce using rule 7 (sentencia -> impresion .)
    ABSTRACT        reduce using rule 7 (sentencia -> impresion .)
    PRIVATE         reduce using rule 7 (sentencia -> impresion .)
    PROTECTED       reduce using rule 7 (sentencia -> impresion .)
    PUBLIC          reduce using rule 7 (sentencia -> impresion .)
    STATIC          reduce using rule 7 (sentencia -> impresion .)
    FINAL           reduce using rule 7 (sentencia -> impresion .)
    IF              reduce using rule 7 (sentencia -> impresion .)
    WHILE           reduce using rule 7 (sentencia -> impresion .)
    DO              reduce using rule 7 (sentencia -> impresion .)
    SWITCH          reduce using rule 7 (sentencia -> impresion .)
    FOREACH         reduce using rule 7 (sentencia -> impresion .)
    FOR             reduce using rule 7 (sentencia -> impresion .)
    CLOSETAG        reduce using rule 7 (sentencia -> impresion .)
    RBRACE          reduce using rule 7 (sentencia -> impresion .)
    BREAK           reduce using rule 7 (sentencia -> impresion .)
    ENDSWITCH       reduce using rule 7 (sentencia -> impresion .)
    CASE            reduce using rule 7 (sentencia -> impresion .)
    DEFAULT         reduce using rule 7 (sentencia -> impresion .)


state 9

    (8) sentencia -> estructurasPrograma .

    VARIABLE        reduce using rule 8 (sentencia -> estructurasPrograma .)
    ECHO            reduce using rule 8 (sentencia -> estructurasPrograma .)
    PRINT           reduce using rule 8 (sentencia -> estructurasPrograma .)
    TRY             reduce using rule 8 (sentencia -> estructurasPrograma .)
    FUNCTION        reduce using rule 8 (sentencia -> estructurasPrograma .)
    RETURN          reduce using rule 8 (sentencia -> estructurasPrograma .)
    ID              reduce using rule 8 (sentencia -> estructurasPrograma .)
    CLASS           reduce using rule 8 (sentencia -> estructurasPrograma .)
    INTERFACE       reduce using rule 8 (sentencia -> estructurasPrograma .)
    INCLUDE         reduce using rule 8 (sentencia -> estructurasPrograma .)
    NAMESPACE       reduce using rule 8 (sentencia -> estructurasPrograma .)
    THROW           reduce using rule 8 (sentencia -> estructurasPrograma .)
    CONST           reduce using rule 8 (sentencia -> estructurasPrograma .)
    THIS            reduce using rule 8 (sentencia -> estructurasPrograma .)
    INT             reduce using rule 8 (sentencia -> estructurasPrograma .)
    FLOAT           reduce using rule 8 (sentencia -> estructurasPrograma .)
    STRING          reduce using rule 8 (sentencia -> estructurasPrograma .)
    BOOL            reduce using rule 8 (sentencia -> estructurasPrograma .)
    NULL            reduce using rule 8 (sentencia -> estructurasPrograma .)
    ARRAY           reduce using rule 8 (sentencia -> estructurasPrograma .)
    LPAREN          reduce using rule 8 (sentencia -> estructurasPrograma .)
    ABSTRACT        reduce using rule 8 (sentencia -> estructurasPrograma .)
    PRIVATE         reduce using rule 8 (sentencia -> estructurasPrograma .)
    PROTECTED       reduce using rule 8 (sentencia -> estructurasPrograma .)
    PUBLIC          reduce using rule 8 (sentencia -> estructurasPrograma .)
    STATIC          reduce using rule 8 (sentencia -> estructurasPrograma .)
    FINAL           reduce using rule 8 (sentencia -> estructurasPrograma .)
    IF              reduce using rule 8 (sentencia -> estructurasPrograma .)
    WHILE           reduce using rule 8 (sentencia -> estructurasPrograma .)
    DO              reduce using rule 8 (sentencia -> estructurasPrograma .)
    SWITCH          reduce using rule 8 (sentencia -> estructurasPrograma .)
    FOREACH         reduce using rule 8 (sentencia -> estructurasPrograma .)
    FOR             reduce using rule 8 (sentencia -> estructurasPrograma .)
    CLOSETAG        reduce using rule 8 (sentencia -> estructurasPrograma .)
    RBRACE          reduce using rule 8 (sentencia -> estructurasPrograma .)
    BREAK           reduce using rule 8 (sentencia -> estructurasPrograma .)
    ENDSWITCH       reduce using rule 8 (sentencia -> estructurasPrograma .)
    CASE            reduce using rule 8 (sentencia -> estructurasPrograma .)
    DEFAULT         reduce using rule 8 (sentencia -> estructurasPrograma .)


state 10

    (9) sentencia -> try .

    VARIABLE        reduce using rule 9 (sentencia -> try .)
    ECHO            reduce using rule 9 (sentencia -> try .)
    PRINT           reduce using rule 9 (sentencia -> try .)
    TRY             reduce using rule 9 (sentencia -> try .)
    FUNCTION        reduce using rule 9 (sentencia -> try .)
    RETURN          reduce using rule 9 (sentencia -> try .)
    ID              reduce using rule 9 (sentencia -> try .)
    CLASS           reduce using rule 9 (sentencia -> try .)
    INTERFACE       reduce using rule 9 (sentencia -> try .)
    INCLUDE         reduce using rule 9 (sentencia -> try .)
    NAMESPACE       reduce using rule 9 (sentencia -> try .)
    THROW           reduce using rule 9 (sentencia -> try .)
    CONST           reduce using rule 9 (sentencia -> try .)
    THIS            reduce using rule 9 (sentencia -> try .)
    INT             reduce using rule 9 (sentencia -> try .)
    FLOAT           reduce using rule 9 (sentencia -> try .)
    STRING          reduce using rule 9 (sentencia -> try .)
    BOOL            reduce using rule 9 (sentencia -> try .)
    NULL            reduce using rule 9 (sentencia -> try .)
    ARRAY           reduce using rule 9 (sentencia -> try .)
    LPAREN          reduce using rule 9 (sentencia -> try .)
    ABSTRACT        reduce using rule 9 (sentencia -> try .)
    PRIVATE         reduce using rule 9 (sentencia -> try .)
    PROTECTED       reduce using rule 9 (sentencia -> try .)
    PUBLIC          reduce using rule 9 (sentencia -> try .)
    STATIC          reduce using rule 9 (sentencia -> try .)
    FINAL           reduce using rule 9 (sentencia -> try .)
    IF              reduce using rule 9 (sentencia -> try .)
    WHILE           reduce using rule 9 (sentencia -> try .)
    DO              reduce using rule 9 (sentencia -> try .)
    SWITCH          reduce using rule 9 (sentencia -> try .)
    FOREACH         reduce using rule 9 (sentencia -> try .)
    FOR             reduce using rule 9 (sentencia -> try .)
    CLOSETAG        reduce using rule 9 (sentencia -> try .)
    RBRACE          reduce using rule 9 (sentencia -> try .)
    BREAK           reduce using rule 9 (sentencia -> try .)
    ENDSWITCH       reduce using rule 9 (sentencia -> try .)
    CASE            reduce using rule 9 (sentencia -> try .)
    DEFAULT         reduce using rule 9 (sentencia -> try .)


state 11

    (10) sentencia -> funcionDeclaration .

    VARIABLE        reduce using rule 10 (sentencia -> funcionDeclaration .)
    ECHO            reduce using rule 10 (sentencia -> funcionDeclaration .)
    PRINT           reduce using rule 10 (sentencia -> funcionDeclaration .)
    TRY             reduce using rule 10 (sentencia -> funcionDeclaration .)
    FUNCTION        reduce using rule 10 (sentencia -> funcionDeclaration .)
    RETURN          reduce using rule 10 (sentencia -> funcionDeclaration .)
    ID              reduce using rule 10 (sentencia -> funcionDeclaration .)
    CLASS           reduce using rule 10 (sentencia -> funcionDeclaration .)
    INTERFACE       reduce using rule 10 (sentencia -> funcionDeclaration .)
    INCLUDE         reduce using rule 10 (sentencia -> funcionDeclaration .)
    NAMESPACE       reduce using rule 10 (sentencia -> funcionDeclaration .)
    THROW           reduce using rule 10 (sentencia -> funcionDeclaration .)
    CONST           reduce using rule 10 (sentencia -> funcionDeclaration .)
    THIS            reduce using rule 10 (sentencia -> funcionDeclaration .)
    INT             reduce using rule 10 (sentencia -> funcionDeclaration .)
    FLOAT           reduce using rule 10 (sentencia -> funcionDeclaration .)
    STRING          reduce using rule 10 (sentencia -> funcionDeclaration .)
    BOOL            reduce using rule 10 (sentencia -> funcionDeclaration .)
    NULL            reduce using rule 10 (sentencia -> funcionDeclaration .)
    ARRAY           reduce using rule 10 (sentencia -> funcionDeclaration .)
    LPAREN          reduce using rule 10 (sentencia -> funcionDeclaration .)
    ABSTRACT        reduce using rule 10 (sentencia -> funcionDeclaration .)
    PRIVATE         reduce using rule 10 (sentencia -> funcionDeclaration .)
    PROTECTED       reduce using rule 10 (sentencia -> funcionDeclaration .)
    PUBLIC          reduce using rule 10 (sentencia -> funcionDeclaration .)
    STATIC          reduce using rule 10 (sentencia -> funcionDeclaration .)
    FINAL           reduce using rule 10 (sentencia -> funcionDeclaration .)
    IF              reduce using rule 10 (sentencia -> funcionDeclaration .)
    WHILE           reduce using rule 10 (sentencia -> funcionDeclaration .)
    DO              reduce using rule 10 (sentencia -> funcionDeclaration .)
    SWITCH          reduce using rule 10 (sentencia -> funcionDeclaration .)
    FOREACH         reduce using rule 10 (sentencia -> funcionDeclaration .)
    FOR             reduce using rule 10 (sentencia -> funcionDeclaration .)
    CLOSETAG        reduce using rule 10 (sentencia -> funcionDeclaration .)
    RBRACE          reduce using rule 10 (sentencia -> funcionDeclaration .)
    BREAK           reduce using rule 10 (sentencia -> funcionDeclaration .)
    ENDSWITCH       reduce using rule 10 (sentencia -> funcionDeclaration .)
    CASE            reduce using rule 10 (sentencia -> funcionDeclaration .)
    DEFAULT         reduce using rule 10 (sentencia -> funcionDeclaration .)


state 12

    (11) sentencia -> returnStatement .

    VARIABLE        reduce using rule 11 (sentencia -> returnStatement .)
    ECHO            reduce using rule 11 (sentencia -> returnStatement .)
    PRINT           reduce using rule 11 (sentencia -> returnStatement .)
    TRY             reduce using rule 11 (sentencia -> returnStatement .)
    FUNCTION        reduce using rule 11 (sentencia -> returnStatement .)
    RETURN          reduce using rule 11 (sentencia -> returnStatement .)
    ID              reduce using rule 11 (sentencia -> returnStatement .)
    CLASS           reduce using rule 11 (sentencia -> returnStatement .)
    INTERFACE       reduce using rule 11 (sentencia -> returnStatement .)
    INCLUDE         reduce using rule 11 (sentencia -> returnStatement .)
    NAMESPACE       reduce using rule 11 (sentencia -> returnStatement .)
    THROW           reduce using rule 11 (sentencia -> returnStatement .)
    CONST           reduce using rule 11 (sentencia -> returnStatement .)
    THIS            reduce using rule 11 (sentencia -> returnStatement .)
    INT             reduce using rule 11 (sentencia -> returnStatement .)
    FLOAT           reduce using rule 11 (sentencia -> returnStatement .)
    STRING          reduce using rule 11 (sentencia -> returnStatement .)
    BOOL            reduce using rule 11 (sentencia -> returnStatement .)
    NULL            reduce using rule 11 (sentencia -> returnStatement .)
    ARRAY           reduce using rule 11 (sentencia -> returnStatement .)
    LPAREN          reduce using rule 11 (sentencia -> returnStatement .)
    ABSTRACT        reduce using rule 11 (sentencia -> returnStatement .)
    PRIVATE         reduce using rule 11 (sentencia -> returnStatement .)
    PROTECTED       reduce using rule 11 (sentencia -> returnStatement .)
    PUBLIC          reduce using rule 11 (sentencia -> returnStatement .)
    STATIC          reduce using rule 11 (sentencia -> returnStatement .)
    FINAL           reduce using rule 11 (sentencia -> returnStatement .)
    IF              reduce using rule 11 (sentencia -> returnStatement .)
    WHILE           reduce using rule 11 (sentencia -> returnStatement .)
    DO              reduce using rule 11 (sentencia -> returnStatement .)
    SWITCH          reduce using rule 11 (sentencia -> returnStatement .)
    FOREACH         reduce using rule 11 (sentencia -> returnStatement .)
    FOR             reduce using rule 11 (sentencia -> returnStatement .)
    CLOSETAG        reduce using rule 11 (sentencia -> returnStatement .)
    RBRACE          reduce using rule 11 (sentencia -> returnStatement .)
    BREAK           reduce using rule 11 (sentencia -> returnStatement .)
    ENDSWITCH       reduce using rule 11 (sentencia -> returnStatement .)
    CASE            reduce using rule 11 (sentencia -> returnStatement .)
    DEFAULT         reduce using rule 11 (sentencia -> returnStatement .)


state 13

    (12) sentencia -> llamadaFuncion .
    (53) valor -> llamadaFuncion .

    VARIABLE        reduce using rule 12 (sentencia -> llamadaFuncion .)
    ECHO            reduce using rule 12 (sentencia -> llamadaFuncion .)
    PRINT           reduce using rule 12 (sentencia -> llamadaFuncion .)
    TRY             reduce using rule 12 (sentencia -> llamadaFuncion .)
    FUNCTION        reduce using rule 12 (sentencia -> llamadaFuncion .)
    RETURN          reduce using rule 12 (sentencia -> llamadaFuncion .)
    ID              reduce using rule 12 (sentencia -> llamadaFuncion .)
    CLASS           reduce using rule 12 (sentencia -> llamadaFuncion .)
    INTERFACE       reduce using rule 12 (sentencia -> llamadaFuncion .)
    INCLUDE         reduce using rule 12 (sentencia -> llamadaFuncion .)
    NAMESPACE       reduce using rule 12 (sentencia -> llamadaFuncion .)
    THROW           reduce using rule 12 (sentencia -> llamadaFuncion .)
    CONST           reduce using rule 12 (sentencia -> llamadaFuncion .)
    THIS            reduce using rule 12 (sentencia -> llamadaFuncion .)
    INT             reduce using rule 12 (sentencia -> llamadaFuncion .)
    FLOAT           reduce using rule 12 (sentencia -> llamadaFuncion .)
    STRING          reduce using rule 12 (sentencia -> llamadaFuncion .)
    BOOL            reduce using rule 12 (sentencia -> llamadaFuncion .)
    NULL            reduce using rule 12 (sentencia -> llamadaFuncion .)
    ARRAY           reduce using rule 12 (sentencia -> llamadaFuncion .)
    LPAREN          reduce using rule 12 (sentencia -> llamadaFuncion .)
    ABSTRACT        reduce using rule 12 (sentencia -> llamadaFuncion .)
    PRIVATE         reduce using rule 12 (sentencia -> llamadaFuncion .)
    PROTECTED       reduce using rule 12 (sentencia -> llamadaFuncion .)
    PUBLIC          reduce using rule 12 (sentencia -> llamadaFuncion .)
    STATIC          reduce using rule 12 (sentencia -> llamadaFuncion .)
    FINAL           reduce using rule 12 (sentencia -> llamadaFuncion .)
    IF              reduce using rule 12 (sentencia -> llamadaFuncion .)
    WHILE           reduce using rule 12 (sentencia -> llamadaFuncion .)
    DO              reduce using rule 12 (sentencia -> llamadaFuncion .)
    SWITCH          reduce using rule 12 (sentencia -> llamadaFuncion .)
    FOREACH         reduce using rule 12 (sentencia -> llamadaFuncion .)
    FOR             reduce using rule 12 (sentencia -> llamadaFuncion .)
    CLOSETAG        reduce using rule 12 (sentencia -> llamadaFuncion .)
    RBRACE          reduce using rule 12 (sentencia -> llamadaFuncion .)
    BREAK           reduce using rule 12 (sentencia -> llamadaFuncion .)
    ENDSWITCH       reduce using rule 12 (sentencia -> llamadaFuncion .)
    CASE            reduce using rule 12 (sentencia -> llamadaFuncion .)
    DEFAULT         reduce using rule 12 (sentencia -> llamadaFuncion .)
    EQ              reduce using rule 53 (valor -> llamadaFuncion .)
    NEQ             reduce using rule 53 (valor -> llamadaFuncion .)
    STRICTEQ        reduce using rule 53 (valor -> llamadaFuncion .)
    STRICTNEQ       reduce using rule 53 (valor -> llamadaFuncion .)
    LT              reduce using rule 53 (valor -> llamadaFuncion .)
    GT              reduce using rule 53 (valor -> llamadaFuncion .)
    LEQ             reduce using rule 53 (valor -> llamadaFuncion .)
    GEQ             reduce using rule 53 (valor -> llamadaFuncion .)
    PLUS            reduce using rule 53 (valor -> llamadaFuncion .)
    MINUS           reduce using rule 53 (valor -> llamadaFuncion .)
    TIMES           reduce using rule 53 (valor -> llamadaFuncion .)
    DIVIDE          reduce using rule 53 (valor -> llamadaFuncion .)
    MODULO          reduce using rule 53 (valor -> llamadaFuncion .)
    POTENCIA        reduce using rule 53 (valor -> llamadaFuncion .)
    AND             reduce using rule 53 (valor -> llamadaFuncion .)
    LOGICAL_AND     reduce using rule 53 (valor -> llamadaFuncion .)
    OR              reduce using rule 53 (valor -> llamadaFuncion .)
    LOGICAL_OR      reduce using rule 53 (valor -> llamadaFuncion .)


state 14

    (13) sentencia -> classDeclarate .

    VARIABLE        reduce using rule 13 (sentencia -> classDeclarate .)
    ECHO            reduce using rule 13 (sentencia -> classDeclarate .)
    PRINT           reduce using rule 13 (sentencia -> classDeclarate .)
    TRY             reduce using rule 13 (sentencia -> classDeclarate .)
    FUNCTION        reduce using rule 13 (sentencia -> classDeclarate .)
    RETURN          reduce using rule 13 (sentencia -> classDeclarate .)
    ID              reduce using rule 13 (sentencia -> classDeclarate .)
    CLASS           reduce using rule 13 (sentencia -> classDeclarate .)
    INTERFACE       reduce using rule 13 (sentencia -> classDeclarate .)
    INCLUDE         reduce using rule 13 (sentencia -> classDeclarate .)
    NAMESPACE       reduce using rule 13 (sentencia -> classDeclarate .)
    THROW           reduce using rule 13 (sentencia -> classDeclarate .)
    CONST           reduce using rule 13 (sentencia -> classDeclarate .)
    THIS            reduce using rule 13 (sentencia -> classDeclarate .)
    INT             reduce using rule 13 (sentencia -> classDeclarate .)
    FLOAT           reduce using rule 13 (sentencia -> classDeclarate .)
    STRING          reduce using rule 13 (sentencia -> classDeclarate .)
    BOOL            reduce using rule 13 (sentencia -> classDeclarate .)
    NULL            reduce using rule 13 (sentencia -> classDeclarate .)
    ARRAY           reduce using rule 13 (sentencia -> classDeclarate .)
    LPAREN          reduce using rule 13 (sentencia -> classDeclarate .)
    ABSTRACT        reduce using rule 13 (sentencia -> classDeclarate .)
    PRIVATE         reduce using rule 13 (sentencia -> classDeclarate .)
    PROTECTED       reduce using rule 13 (sentencia -> classDeclarate .)
    PUBLIC          reduce using rule 13 (sentencia -> classDeclarate .)
    STATIC          reduce using rule 13 (sentencia -> classDeclarate .)
    FINAL           reduce using rule 13 (sentencia -> classDeclarate .)
    IF              reduce using rule 13 (sentencia -> classDeclarate .)
    WHILE           reduce using rule 13 (sentencia -> classDeclarate .)
    DO              reduce using rule 13 (sentencia -> classDeclarate .)
    SWITCH          reduce using rule 13 (sentencia -> classDeclarate .)
    FOREACH         reduce using rule 13 (sentencia -> classDeclarate .)
    FOR             reduce using rule 13 (sentencia -> classDeclarate .)
    CLOSETAG        reduce using rule 13 (sentencia -> classDeclarate .)
    RBRACE          reduce using rule 13 (sentencia -> classDeclarate .)
    BREAK           reduce using rule 13 (sentencia -> classDeclarate .)
    ENDSWITCH       reduce using rule 13 (sentencia -> classDeclarate .)
    CASE            reduce using rule 13 (sentencia -> classDeclarate .)
    DEFAULT         reduce using rule 13 (sentencia -> classDeclarate .)


state 15

    (14) sentencia -> interface .

    VARIABLE        reduce using rule 14 (sentencia -> interface .)
    ECHO            reduce using rule 14 (sentencia -> interface .)
    PRINT           reduce using rule 14 (sentencia -> interface .)
    TRY             reduce using rule 14 (sentencia -> interface .)
    FUNCTION        reduce using rule 14 (sentencia -> interface .)
    RETURN          reduce using rule 14 (sentencia -> interface .)
    ID              reduce using rule 14 (sentencia -> interface .)
    CLASS           reduce using rule 14 (sentencia -> interface .)
    INTERFACE       reduce using rule 14 (sentencia -> interface .)
    INCLUDE         reduce using rule 14 (sentencia -> interface .)
    NAMESPACE       reduce using rule 14 (sentencia -> interface .)
    THROW           reduce using rule 14 (sentencia -> interface .)
    CONST           reduce using rule 14 (sentencia -> interface .)
    THIS            reduce using rule 14 (sentencia -> interface .)
    INT             reduce using rule 14 (sentencia -> interface .)
    FLOAT           reduce using rule 14 (sentencia -> interface .)
    STRING          reduce using rule 14 (sentencia -> interface .)
    BOOL            reduce using rule 14 (sentencia -> interface .)
    NULL            reduce using rule 14 (sentencia -> interface .)
    ARRAY           reduce using rule 14 (sentencia -> interface .)
    LPAREN          reduce using rule 14 (sentencia -> interface .)
    ABSTRACT        reduce using rule 14 (sentencia -> interface .)
    PRIVATE         reduce using rule 14 (sentencia -> interface .)
    PROTECTED       reduce using rule 14 (sentencia -> interface .)
    PUBLIC          reduce using rule 14 (sentencia -> interface .)
    STATIC          reduce using rule 14 (sentencia -> interface .)
    FINAL           reduce using rule 14 (sentencia -> interface .)
    IF              reduce using rule 14 (sentencia -> interface .)
    WHILE           reduce using rule 14 (sentencia -> interface .)
    DO              reduce using rule 14 (sentencia -> interface .)
    SWITCH          reduce using rule 14 (sentencia -> interface .)
    FOREACH         reduce using rule 14 (sentencia -> interface .)
    FOR             reduce using rule 14 (sentencia -> interface .)
    CLOSETAG        reduce using rule 14 (sentencia -> interface .)
    RBRACE          reduce using rule 14 (sentencia -> interface .)
    BREAK           reduce using rule 14 (sentencia -> interface .)
    ENDSWITCH       reduce using rule 14 (sentencia -> interface .)
    CASE            reduce using rule 14 (sentencia -> interface .)
    DEFAULT         reduce using rule 14 (sentencia -> interface .)


state 16

    (15) sentencia -> objeto .

    VARIABLE        reduce using rule 15 (sentencia -> objeto .)
    ECHO            reduce using rule 15 (sentencia -> objeto .)
    PRINT           reduce using rule 15 (sentencia -> objeto .)
    TRY             reduce using rule 15 (sentencia -> objeto .)
    FUNCTION        reduce using rule 15 (sentencia -> objeto .)
    RETURN          reduce using rule 15 (sentencia -> objeto .)
    ID              reduce using rule 15 (sentencia -> objeto .)
    CLASS           reduce using rule 15 (sentencia -> objeto .)
    INTERFACE       reduce using rule 15 (sentencia -> objeto .)
    INCLUDE         reduce using rule 15 (sentencia -> objeto .)
    NAMESPACE       reduce using rule 15 (sentencia -> objeto .)
    THROW           reduce using rule 15 (sentencia -> objeto .)
    CONST           reduce using rule 15 (sentencia -> objeto .)
    THIS            reduce using rule 15 (sentencia -> objeto .)
    INT             reduce using rule 15 (sentencia -> objeto .)
    FLOAT           reduce using rule 15 (sentencia -> objeto .)
    STRING          reduce using rule 15 (sentencia -> objeto .)
    BOOL            reduce using rule 15 (sentencia -> objeto .)
    NULL            reduce using rule 15 (sentencia -> objeto .)
    ARRAY           reduce using rule 15 (sentencia -> objeto .)
    LPAREN          reduce using rule 15 (sentencia -> objeto .)
    ABSTRACT        reduce using rule 15 (sentencia -> objeto .)
    PRIVATE         reduce using rule 15 (sentencia -> objeto .)
    PROTECTED       reduce using rule 15 (sentencia -> objeto .)
    PUBLIC          reduce using rule 15 (sentencia -> objeto .)
    STATIC          reduce using rule 15 (sentencia -> objeto .)
    FINAL           reduce using rule 15 (sentencia -> objeto .)
    IF              reduce using rule 15 (sentencia -> objeto .)
    WHILE           reduce using rule 15 (sentencia -> objeto .)
    DO              reduce using rule 15 (sentencia -> objeto .)
    SWITCH          reduce using rule 15 (sentencia -> objeto .)
    FOREACH         reduce using rule 15 (sentencia -> objeto .)
    FOR             reduce using rule 15 (sentencia -> objeto .)
    CLOSETAG        reduce using rule 15 (sentencia -> objeto .)
    RBRACE          reduce using rule 15 (sentencia -> objeto .)
    BREAK           reduce using rule 15 (sentencia -> objeto .)
    ENDSWITCH       reduce using rule 15 (sentencia -> objeto .)
    CASE            reduce using rule 15 (sentencia -> objeto .)
    DEFAULT         reduce using rule 15 (sentencia -> objeto .)


state 17

    (16) sentencia -> includes .

    VARIABLE        reduce using rule 16 (sentencia -> includes .)
    ECHO            reduce using rule 16 (sentencia -> includes .)
    PRINT           reduce using rule 16 (sentencia -> includes .)
    TRY             reduce using rule 16 (sentencia -> includes .)
    FUNCTION        reduce using rule 16 (sentencia -> includes .)
    RETURN          reduce using rule 16 (sentencia -> includes .)
    ID              reduce using rule 16 (sentencia -> includes .)
    CLASS           reduce using rule 16 (sentencia -> includes .)
    INTERFACE       reduce using rule 16 (sentencia -> includes .)
    INCLUDE         reduce using rule 16 (sentencia -> includes .)
    NAMESPACE       reduce using rule 16 (sentencia -> includes .)
    THROW           reduce using rule 16 (sentencia -> includes .)
    CONST           reduce using rule 16 (sentencia -> includes .)
    THIS            reduce using rule 16 (sentencia -> includes .)
    INT             reduce using rule 16 (sentencia -> includes .)
    FLOAT           reduce using rule 16 (sentencia -> includes .)
    STRING          reduce using rule 16 (sentencia -> includes .)
    BOOL            reduce using rule 16 (sentencia -> includes .)
    NULL            reduce using rule 16 (sentencia -> includes .)
    ARRAY           reduce using rule 16 (sentencia -> includes .)
    LPAREN          reduce using rule 16 (sentencia -> includes .)
    ABSTRACT        reduce using rule 16 (sentencia -> includes .)
    PRIVATE         reduce using rule 16 (sentencia -> includes .)
    PROTECTED       reduce using rule 16 (sentencia -> includes .)
    PUBLIC          reduce using rule 16 (sentencia -> includes .)
    STATIC          reduce using rule 16 (sentencia -> includes .)
    FINAL           reduce using rule 16 (sentencia -> includes .)
    IF              reduce using rule 16 (sentencia -> includes .)
    WHILE           reduce using rule 16 (sentencia -> includes .)
    DO              reduce using rule 16 (sentencia -> includes .)
    SWITCH          reduce using rule 16 (sentencia -> includes .)
    FOREACH         reduce using rule 16 (sentencia -> includes .)
    FOR             reduce using rule 16 (sentencia -> includes .)
    CLOSETAG        reduce using rule 16 (sentencia -> includes .)
    RBRACE          reduce using rule 16 (sentencia -> includes .)
    BREAK           reduce using rule 16 (sentencia -> includes .)
    ENDSWITCH       reduce using rule 16 (sentencia -> includes .)
    CASE            reduce using rule 16 (sentencia -> includes .)
    DEFAULT         reduce using rule 16 (sentencia -> includes .)


state 18

    (17) sentencia -> namespace .

    VARIABLE        reduce using rule 17 (sentencia -> namespace .)
    ECHO            reduce using rule 17 (sentencia -> namespace .)
    PRINT           reduce using rule 17 (sentencia -> namespace .)
    TRY             reduce using rule 17 (sentencia -> namespace .)
    FUNCTION        reduce using rule 17 (sentencia -> namespace .)
    RETURN          reduce using rule 17 (sentencia -> namespace .)
    ID              reduce using rule 17 (sentencia -> namespace .)
    CLASS           reduce using rule 17 (sentencia -> namespace .)
    INTERFACE       reduce using rule 17 (sentencia -> namespace .)
    INCLUDE         reduce using rule 17 (sentencia -> namespace .)
    NAMESPACE       reduce using rule 17 (sentencia -> namespace .)
    THROW           reduce using rule 17 (sentencia -> namespace .)
    CONST           reduce using rule 17 (sentencia -> namespace .)
    THIS            reduce using rule 17 (sentencia -> namespace .)
    INT             reduce using rule 17 (sentencia -> namespace .)
    FLOAT           reduce using rule 17 (sentencia -> namespace .)
    STRING          reduce using rule 17 (sentencia -> namespace .)
    BOOL            reduce using rule 17 (sentencia -> namespace .)
    NULL            reduce using rule 17 (sentencia -> namespace .)
    ARRAY           reduce using rule 17 (sentencia -> namespace .)
    LPAREN          reduce using rule 17 (sentencia -> namespace .)
    ABSTRACT        reduce using rule 17 (sentencia -> namespace .)
    PRIVATE         reduce using rule 17 (sentencia -> namespace .)
    PROTECTED       reduce using rule 17 (sentencia -> namespace .)
    PUBLIC          reduce using rule 17 (sentencia -> namespace .)
    STATIC          reduce using rule 17 (sentencia -> namespace .)
    FINAL           reduce using rule 17 (sentencia -> namespace .)
    IF              reduce using rule 17 (sentencia -> namespace .)
    WHILE           reduce using rule 17 (sentencia -> namespace .)
    DO              reduce using rule 17 (sentencia -> namespace .)
    SWITCH          reduce using rule 17 (sentencia -> namespace .)
    FOREACH         reduce using rule 17 (sentencia -> namespace .)
    FOR             reduce using rule 17 (sentencia -> namespace .)
    CLOSETAG        reduce using rule 17 (sentencia -> namespace .)
    RBRACE          reduce using rule 17 (sentencia -> namespace .)
    BREAK           reduce using rule 17 (sentencia -> namespace .)
    ENDSWITCH       reduce using rule 17 (sentencia -> namespace .)
    CASE            reduce using rule 17 (sentencia -> namespace .)
    DEFAULT         reduce using rule 17 (sentencia -> namespace .)


state 19

    (18) sentencia -> anonymousFunction .

    VARIABLE        reduce using rule 18 (sentencia -> anonymousFunction .)
    ECHO            reduce using rule 18 (sentencia -> anonymousFunction .)
    PRINT           reduce using rule 18 (sentencia -> anonymousFunction .)
    TRY             reduce using rule 18 (sentencia -> anonymousFunction .)
    FUNCTION        reduce using rule 18 (sentencia -> anonymousFunction .)
    RETURN          reduce using rule 18 (sentencia -> anonymousFunction .)
    ID              reduce using rule 18 (sentencia -> anonymousFunction .)
    CLASS           reduce using rule 18 (sentencia -> anonymousFunction .)
    INTERFACE       reduce using rule 18 (sentencia -> anonymousFunction .)
    INCLUDE         reduce using rule 18 (sentencia -> anonymousFunction .)
    NAMESPACE       reduce using rule 18 (sentencia -> anonymousFunction .)
    THROW           reduce using rule 18 (sentencia -> anonymousFunction .)
    CONST           reduce using rule 18 (sentencia -> anonymousFunction .)
    THIS            reduce using rule 18 (sentencia -> anonymousFunction .)
    INT             reduce using rule 18 (sentencia -> anonymousFunction .)
    FLOAT           reduce using rule 18 (sentencia -> anonymousFunction .)
    STRING          reduce using rule 18 (sentencia -> anonymousFunction .)
    BOOL            reduce using rule 18 (sentencia -> anonymousFunction .)
    NULL            reduce using rule 18 (sentencia -> anonymousFunction .)
    ARRAY           reduce using rule 18 (sentencia -> anonymousFunction .)
    LPAREN          reduce using rule 18 (sentencia -> anonymousFunction .)
    ABSTRACT        reduce using rule 18 (sentencia -> anonymousFunction .)
    PRIVATE         reduce using rule 18 (sentencia -> anonymousFunction .)
    PROTECTED       reduce using rule 18 (sentencia -> anonymousFunction .)
    PUBLIC          reduce using rule 18 (sentencia -> anonymousFunction .)
    STATIC          reduce using rule 18 (sentencia -> anonymousFunction .)
    FINAL           reduce using rule 18 (sentencia -> anonymousFunction .)
    IF              reduce using rule 18 (sentencia -> anonymousFunction .)
    WHILE           reduce using rule 18 (sentencia -> anonymousFunction .)
    DO              reduce using rule 18 (sentencia -> anonymousFunction .)
    SWITCH          reduce using rule 18 (sentencia -> anonymousFunction .)
    FOREACH         reduce using rule 18 (sentencia -> anonymousFunction .)
    FOR             reduce using rule 18 (sentencia -> anonymousFunction .)
    CLOSETAG        reduce using rule 18 (sentencia -> anonymousFunction .)
    RBRACE          reduce using rule 18 (sentencia -> anonymousFunction .)
    BREAK           reduce using rule 18 (sentencia -> anonymousFunction .)
    ENDSWITCH       reduce using rule 18 (sentencia -> anonymousFunction .)
    CASE            reduce using rule 18 (sentencia -> anonymousFunction .)
    DEFAULT         reduce using rule 18 (sentencia -> anonymousFunction .)


state 20

    (19) sentencia -> throw .

    VARIABLE        reduce using rule 19 (sentencia -> throw .)
    ECHO            reduce using rule 19 (sentencia -> throw .)
    PRINT           reduce using rule 19 (sentencia -> throw .)
    TRY             reduce using rule 19 (sentencia -> throw .)
    FUNCTION        reduce using rule 19 (sentencia -> throw .)
    RETURN          reduce using rule 19 (sentencia -> throw .)
    ID              reduce using rule 19 (sentencia -> throw .)
    CLASS           reduce using rule 19 (sentencia -> throw .)
    INTERFACE       reduce using rule 19 (sentencia -> throw .)
    INCLUDE         reduce using rule 19 (sentencia -> throw .)
    NAMESPACE       reduce using rule 19 (sentencia -> throw .)
    THROW           reduce using rule 19 (sentencia -> throw .)
    CONST           reduce using rule 19 (sentencia -> throw .)
    THIS            reduce using rule 19 (sentencia -> throw .)
    INT             reduce using rule 19 (sentencia -> throw .)
    FLOAT           reduce using rule 19 (sentencia -> throw .)
    STRING          reduce using rule 19 (sentencia -> throw .)
    BOOL            reduce using rule 19 (sentencia -> throw .)
    NULL            reduce using rule 19 (sentencia -> throw .)
    ARRAY           reduce using rule 19 (sentencia -> throw .)
    LPAREN          reduce using rule 19 (sentencia -> throw .)
    ABSTRACT        reduce using rule 19 (sentencia -> throw .)
    PRIVATE         reduce using rule 19 (sentencia -> throw .)
    PROTECTED       reduce using rule 19 (sentencia -> throw .)
    PUBLIC          reduce using rule 19 (sentencia -> throw .)
    STATIC          reduce using rule 19 (sentencia -> throw .)
    FINAL           reduce using rule 19 (sentencia -> throw .)
    IF              reduce using rule 19 (sentencia -> throw .)
    WHILE           reduce using rule 19 (sentencia -> throw .)
    DO              reduce using rule 19 (sentencia -> throw .)
    SWITCH          reduce using rule 19 (sentencia -> throw .)
    FOREACH         reduce using rule 19 (sentencia -> throw .)
    FOR             reduce using rule 19 (sentencia -> throw .)
    CLOSETAG        reduce using rule 19 (sentencia -> throw .)
    RBRACE          reduce using rule 19 (sentencia -> throw .)
    BREAK           reduce using rule 19 (sentencia -> throw .)
    ENDSWITCH       reduce using rule 19 (sentencia -> throw .)
    CASE            reduce using rule 19 (sentencia -> throw .)
    DEFAULT         reduce using rule 19 (sentencia -> throw .)


state 21

    (20) sentencia -> instance .

    VARIABLE        reduce using rule 20 (sentencia -> instance .)
    ECHO            reduce using rule 20 (sentencia -> instance .)
    PRINT           reduce using rule 20 (sentencia -> instance .)
    TRY             reduce using rule 20 (sentencia -> instance .)
    FUNCTION        reduce using rule 20 (sentencia -> instance .)
    RETURN          reduce using rule 20 (sentencia -> instance .)
    ID              reduce using rule 20 (sentencia -> instance .)
    CLASS           reduce using rule 20 (sentencia -> instance .)
    INTERFACE       reduce using rule 20 (sentencia -> instance .)
    INCLUDE         reduce using rule 20 (sentencia -> instance .)
    NAMESPACE       reduce using rule 20 (sentencia -> instance .)
    THROW           reduce using rule 20 (sentencia -> instance .)
    CONST           reduce using rule 20 (sentencia -> instance .)
    THIS            reduce using rule 20 (sentencia -> instance .)
    INT             reduce using rule 20 (sentencia -> instance .)
    FLOAT           reduce using rule 20 (sentencia -> instance .)
    STRING          reduce using rule 20 (sentencia -> instance .)
    BOOL            reduce using rule 20 (sentencia -> instance .)
    NULL            reduce using rule 20 (sentencia -> instance .)
    ARRAY           reduce using rule 20 (sentencia -> instance .)
    LPAREN          reduce using rule 20 (sentencia -> instance .)
    ABSTRACT        reduce using rule 20 (sentencia -> instance .)
    PRIVATE         reduce using rule 20 (sentencia -> instance .)
    PROTECTED       reduce using rule 20 (sentencia -> instance .)
    PUBLIC          reduce using rule 20 (sentencia -> instance .)
    STATIC          reduce using rule 20 (sentencia -> instance .)
    FINAL           reduce using rule 20 (sentencia -> instance .)
    IF              reduce using rule 20 (sentencia -> instance .)
    WHILE           reduce using rule 20 (sentencia -> instance .)
    DO              reduce using rule 20 (sentencia -> instance .)
    SWITCH          reduce using rule 20 (sentencia -> instance .)
    FOREACH         reduce using rule 20 (sentencia -> instance .)
    FOR             reduce using rule 20 (sentencia -> instance .)
    CLOSETAG        reduce using rule 20 (sentencia -> instance .)
    RBRACE          reduce using rule 20 (sentencia -> instance .)
    BREAK           reduce using rule 20 (sentencia -> instance .)
    ENDSWITCH       reduce using rule 20 (sentencia -> instance .)
    CASE            reduce using rule 20 (sentencia -> instance .)
    DEFAULT         reduce using rule 20 (sentencia -> instance .)


state 22

    (21) sentencia -> constdeclaration .

    VARIABLE        reduce using rule 21 (sentencia -> constdeclaration .)
    ECHO            reduce using rule 21 (sentencia -> constdeclaration .)
    PRINT           reduce using rule 21 (sentencia -> constdeclaration .)
    TRY             reduce using rule 21 (sentencia -> constdeclaration .)
    FUNCTION        reduce using rule 21 (sentencia -> constdeclaration .)
    RETURN          reduce using rule 21 (sentencia -> constdeclaration .)
    ID              reduce using rule 21 (sentencia -> constdeclaration .)
    CLASS           reduce using rule 21 (sentencia -> constdeclaration .)
    INTERFACE       reduce using rule 21 (sentencia -> constdeclaration .)
    INCLUDE         reduce using rule 21 (sentencia -> constdeclaration .)
    NAMESPACE       reduce using rule 21 (sentencia -> constdeclaration .)
    THROW           reduce using rule 21 (sentencia -> constdeclaration .)
    CONST           reduce using rule 21 (sentencia -> constdeclaration .)
    THIS            reduce using rule 21 (sentencia -> constdeclaration .)
    INT             reduce using rule 21 (sentencia -> constdeclaration .)
    FLOAT           reduce using rule 21 (sentencia -> constdeclaration .)
    STRING          reduce using rule 21 (sentencia -> constdeclaration .)
    BOOL            reduce using rule 21 (sentencia -> constdeclaration .)
    NULL            reduce using rule 21 (sentencia -> constdeclaration .)
    ARRAY           reduce using rule 21 (sentencia -> constdeclaration .)
    LPAREN          reduce using rule 21 (sentencia -> constdeclaration .)
    ABSTRACT        reduce using rule 21 (sentencia -> constdeclaration .)
    PRIVATE         reduce using rule 21 (sentencia -> constdeclaration .)
    PROTECTED       reduce using rule 21 (sentencia -> constdeclaration .)
    PUBLIC          reduce using rule 21 (sentencia -> constdeclaration .)
    STATIC          reduce using rule 21 (sentencia -> constdeclaration .)
    FINAL           reduce using rule 21 (sentencia -> constdeclaration .)
    IF              reduce using rule 21 (sentencia -> constdeclaration .)
    WHILE           reduce using rule 21 (sentencia -> constdeclaration .)
    DO              reduce using rule 21 (sentencia -> constdeclaration .)
    SWITCH          reduce using rule 21 (sentencia -> constdeclaration .)
    FOREACH         reduce using rule 21 (sentencia -> constdeclaration .)
    FOR             reduce using rule 21 (sentencia -> constdeclaration .)
    CLOSETAG        reduce using rule 21 (sentencia -> constdeclaration .)
    RBRACE          reduce using rule 21 (sentencia -> constdeclaration .)
    BREAK           reduce using rule 21 (sentencia -> constdeclaration .)
    ENDSWITCH       reduce using rule 21 (sentencia -> constdeclaration .)
    CASE            reduce using rule 21 (sentencia -> constdeclaration .)
    DEFAULT         reduce using rule 21 (sentencia -> constdeclaration .)


state 23

    (22) sentencia -> thisdeclaration .

    VARIABLE        reduce using rule 22 (sentencia -> thisdeclaration .)
    ECHO            reduce using rule 22 (sentencia -> thisdeclaration .)
    PRINT           reduce using rule 22 (sentencia -> thisdeclaration .)
    TRY             reduce using rule 22 (sentencia -> thisdeclaration .)
    FUNCTION        reduce using rule 22 (sentencia -> thisdeclaration .)
    RETURN          reduce using rule 22 (sentencia -> thisdeclaration .)
    ID              reduce using rule 22 (sentencia -> thisdeclaration .)
    CLASS           reduce using rule 22 (sentencia -> thisdeclaration .)
    INTERFACE       reduce using rule 22 (sentencia -> thisdeclaration .)
    INCLUDE         reduce using rule 22 (sentencia -> thisdeclaration .)
    NAMESPACE       reduce using rule 22 (sentencia -> thisdeclaration .)
    THROW           reduce using rule 22 (sentencia -> thisdeclaration .)
    CONST           reduce using rule 22 (sentencia -> thisdeclaration .)
    THIS            reduce using rule 22 (sentencia -> thisdeclaration .)
    INT             reduce using rule 22 (sentencia -> thisdeclaration .)
    FLOAT           reduce using rule 22 (sentencia -> thisdeclaration .)
    STRING          reduce using rule 22 (sentencia -> thisdeclaration .)
    BOOL            reduce using rule 22 (sentencia -> thisdeclaration .)
    NULL            reduce using rule 22 (sentencia -> thisdeclaration .)
    ARRAY           reduce using rule 22 (sentencia -> thisdeclaration .)
    LPAREN          reduce using rule 22 (sentencia -> thisdeclaration .)
    ABSTRACT        reduce using rule 22 (sentencia -> thisdeclaration .)
    PRIVATE         reduce using rule 22 (sentencia -> thisdeclaration .)
    PROTECTED       reduce using rule 22 (sentencia -> thisdeclaration .)
    PUBLIC          reduce using rule 22 (sentencia -> thisdeclaration .)
    STATIC          reduce using rule 22 (sentencia -> thisdeclaration .)
    FINAL           reduce using rule 22 (sentencia -> thisdeclaration .)
    IF              reduce using rule 22 (sentencia -> thisdeclaration .)
    WHILE           reduce using rule 22 (sentencia -> thisdeclaration .)
    DO              reduce using rule 22 (sentencia -> thisdeclaration .)
    SWITCH          reduce using rule 22 (sentencia -> thisdeclaration .)
    FOREACH         reduce using rule 22 (sentencia -> thisdeclaration .)
    FOR             reduce using rule 22 (sentencia -> thisdeclaration .)
    CLOSETAG        reduce using rule 22 (sentencia -> thisdeclaration .)
    RBRACE          reduce using rule 22 (sentencia -> thisdeclaration .)
    BREAK           reduce using rule 22 (sentencia -> thisdeclaration .)
    ENDSWITCH       reduce using rule 22 (sentencia -> thisdeclaration .)
    CASE            reduce using rule 22 (sentencia -> thisdeclaration .)
    DEFAULT         reduce using rule 22 (sentencia -> thisdeclaration .)


state 24

    (23) sentencia -> concatenate .

    VARIABLE        reduce using rule 23 (sentencia -> concatenate .)
    ECHO            reduce using rule 23 (sentencia -> concatenate .)
    PRINT           reduce using rule 23 (sentencia -> concatenate .)
    TRY             reduce using rule 23 (sentencia -> concatenate .)
    FUNCTION        reduce using rule 23 (sentencia -> concatenate .)
    RETURN          reduce using rule 23 (sentencia -> concatenate .)
    ID              reduce using rule 23 (sentencia -> concatenate .)
    CLASS           reduce using rule 23 (sentencia -> concatenate .)
    INTERFACE       reduce using rule 23 (sentencia -> concatenate .)
    INCLUDE         reduce using rule 23 (sentencia -> concatenate .)
    NAMESPACE       reduce using rule 23 (sentencia -> concatenate .)
    THROW           reduce using rule 23 (sentencia -> concatenate .)
    CONST           reduce using rule 23 (sentencia -> concatenate .)
    THIS            reduce using rule 23 (sentencia -> concatenate .)
    INT             reduce using rule 23 (sentencia -> concatenate .)
    FLOAT           reduce using rule 23 (sentencia -> concatenate .)
    STRING          reduce using rule 23 (sentencia -> concatenate .)
    BOOL            reduce using rule 23 (sentencia -> concatenate .)
    NULL            reduce using rule 23 (sentencia -> concatenate .)
    ARRAY           reduce using rule 23 (sentencia -> concatenate .)
    LPAREN          reduce using rule 23 (sentencia -> concatenate .)
    ABSTRACT        reduce using rule 23 (sentencia -> concatenate .)
    PRIVATE         reduce using rule 23 (sentencia -> concatenate .)
    PROTECTED       reduce using rule 23 (sentencia -> concatenate .)
    PUBLIC          reduce using rule 23 (sentencia -> concatenate .)
    STATIC          reduce using rule 23 (sentencia -> concatenate .)
    FINAL           reduce using rule 23 (sentencia -> concatenate .)
    IF              reduce using rule 23 (sentencia -> concatenate .)
    WHILE           reduce using rule 23 (sentencia -> concatenate .)
    DO              reduce using rule 23 (sentencia -> concatenate .)
    SWITCH          reduce using rule 23 (sentencia -> concatenate .)
    FOREACH         reduce using rule 23 (sentencia -> concatenate .)
    FOR             reduce using rule 23 (sentencia -> concatenate .)
    CLOSETAG        reduce using rule 23 (sentencia -> concatenate .)
    RBRACE          reduce using rule 23 (sentencia -> concatenate .)
    BREAK           reduce using rule 23 (sentencia -> concatenate .)
    ENDSWITCH       reduce using rule 23 (sentencia -> concatenate .)
    CASE            reduce using rule 23 (sentencia -> concatenate .)
    DEFAULT         reduce using rule 23 (sentencia -> concatenate .)


state 25

    (24) sentencia -> minuse .

    VARIABLE        reduce using rule 24 (sentencia -> minuse .)
    ECHO            reduce using rule 24 (sentencia -> minuse .)
    PRINT           reduce using rule 24 (sentencia -> minuse .)
    TRY             reduce using rule 24 (sentencia -> minuse .)
    FUNCTION        reduce using rule 24 (sentencia -> minuse .)
    RETURN          reduce using rule 24 (sentencia -> minuse .)
    ID              reduce using rule 24 (sentencia -> minuse .)
    CLASS           reduce using rule 24 (sentencia -> minuse .)
    INTERFACE       reduce using rule 24 (sentencia -> minuse .)
    INCLUDE         reduce using rule 24 (sentencia -> minuse .)
    NAMESPACE       reduce using rule 24 (sentencia -> minuse .)
    THROW           reduce using rule 24 (sentencia -> minuse .)
    CONST           reduce using rule 24 (sentencia -> minuse .)
    THIS            reduce using rule 24 (sentencia -> minuse .)
    INT             reduce using rule 24 (sentencia -> minuse .)
    FLOAT           reduce using rule 24 (sentencia -> minuse .)
    STRING          reduce using rule 24 (sentencia -> minuse .)
    BOOL            reduce using rule 24 (sentencia -> minuse .)
    NULL            reduce using rule 24 (sentencia -> minuse .)
    ARRAY           reduce using rule 24 (sentencia -> minuse .)
    LPAREN          reduce using rule 24 (sentencia -> minuse .)
    ABSTRACT        reduce using rule 24 (sentencia -> minuse .)
    PRIVATE         reduce using rule 24 (sentencia -> minuse .)
    PROTECTED       reduce using rule 24 (sentencia -> minuse .)
    PUBLIC          reduce using rule 24 (sentencia -> minuse .)
    STATIC          reduce using rule 24 (sentencia -> minuse .)
    FINAL           reduce using rule 24 (sentencia -> minuse .)
    IF              reduce using rule 24 (sentencia -> minuse .)
    WHILE           reduce using rule 24 (sentencia -> minuse .)
    DO              reduce using rule 24 (sentencia -> minuse .)
    SWITCH          reduce using rule 24 (sentencia -> minuse .)
    FOREACH         reduce using rule 24 (sentencia -> minuse .)
    FOR             reduce using rule 24 (sentencia -> minuse .)
    CLOSETAG        reduce using rule 24 (sentencia -> minuse .)
    RBRACE          reduce using rule 24 (sentencia -> minuse .)
    BREAK           reduce using rule 24 (sentencia -> minuse .)
    ENDSWITCH       reduce using rule 24 (sentencia -> minuse .)
    CASE            reduce using rule 24 (sentencia -> minuse .)
    DEFAULT         reduce using rule 24 (sentencia -> minuse .)


state 26

    (25) sentencia -> pluse .

    VARIABLE        reduce using rule 25 (sentencia -> pluse .)
    ECHO            reduce using rule 25 (sentencia -> pluse .)
    PRINT           reduce using rule 25 (sentencia -> pluse .)
    TRY             reduce using rule 25 (sentencia -> pluse .)
    FUNCTION        reduce using rule 25 (sentencia -> pluse .)
    RETURN          reduce using rule 25 (sentencia -> pluse .)
    ID              reduce using rule 25 (sentencia -> pluse .)
    CLASS           reduce using rule 25 (sentencia -> pluse .)
    INTERFACE       reduce using rule 25 (sentencia -> pluse .)
    INCLUDE         reduce using rule 25 (sentencia -> pluse .)
    NAMESPACE       reduce using rule 25 (sentencia -> pluse .)
    THROW           reduce using rule 25 (sentencia -> pluse .)
    CONST           reduce using rule 25 (sentencia -> pluse .)
    THIS            reduce using rule 25 (sentencia -> pluse .)
    INT             reduce using rule 25 (sentencia -> pluse .)
    FLOAT           reduce using rule 25 (sentencia -> pluse .)
    STRING          reduce using rule 25 (sentencia -> pluse .)
    BOOL            reduce using rule 25 (sentencia -> pluse .)
    NULL            reduce using rule 25 (sentencia -> pluse .)
    ARRAY           reduce using rule 25 (sentencia -> pluse .)
    LPAREN          reduce using rule 25 (sentencia -> pluse .)
    ABSTRACT        reduce using rule 25 (sentencia -> pluse .)
    PRIVATE         reduce using rule 25 (sentencia -> pluse .)
    PROTECTED       reduce using rule 25 (sentencia -> pluse .)
    PUBLIC          reduce using rule 25 (sentencia -> pluse .)
    STATIC          reduce using rule 25 (sentencia -> pluse .)
    FINAL           reduce using rule 25 (sentencia -> pluse .)
    IF              reduce using rule 25 (sentencia -> pluse .)
    WHILE           reduce using rule 25 (sentencia -> pluse .)
    DO              reduce using rule 25 (sentencia -> pluse .)
    SWITCH          reduce using rule 25 (sentencia -> pluse .)
    FOREACH         reduce using rule 25 (sentencia -> pluse .)
    FOR             reduce using rule 25 (sentencia -> pluse .)
    CLOSETAG        reduce using rule 25 (sentencia -> pluse .)
    RBRACE          reduce using rule 25 (sentencia -> pluse .)
    BREAK           reduce using rule 25 (sentencia -> pluse .)
    ENDSWITCH       reduce using rule 25 (sentencia -> pluse .)
    CASE            reduce using rule 25 (sentencia -> pluse .)
    DEFAULT         reduce using rule 25 (sentencia -> pluse .)


state 27

    (28) asignacion -> VARIABLE . EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> VARIABLE . EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (168) objeto -> VARIABLE . ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (201) anonymousFunction -> VARIABLE . EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (204) instance -> VARIABLE . INSTANCEOF ID
    (208) concatenate -> VARIABLE . CONCATENATEEQUAL STRING
    (209) minuse -> VARIABLE . MINUSEQUAL INT
    (210) pluse -> VARIABLE . PLUSEQUAL INT
    (47) valor -> VARIABLE .
    (130) array -> VARIABLE . EQUALS arrays SEMICOLON
    (131) array -> VARIABLE . EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> VARIABLE . EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (137) map -> VARIABLE . EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> VARIABLE . EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    EQUALS          shift and go to state 79
    ARROW           shift and go to state 80
    INSTANCEOF      shift and go to state 81
    CONCATENATEEQUAL shift and go to state 82
    MINUSEQUAL      shift and go to state 83
    PLUSEQUAL       shift and go to state 84
    EQ              reduce using rule 47 (valor -> VARIABLE .)
    NEQ             reduce using rule 47 (valor -> VARIABLE .)
    STRICTEQ        reduce using rule 47 (valor -> VARIABLE .)
    STRICTNEQ       reduce using rule 47 (valor -> VARIABLE .)
    LT              reduce using rule 47 (valor -> VARIABLE .)
    GT              reduce using rule 47 (valor -> VARIABLE .)
    LEQ             reduce using rule 47 (valor -> VARIABLE .)
    GEQ             reduce using rule 47 (valor -> VARIABLE .)
    PLUS            reduce using rule 47 (valor -> VARIABLE .)
    MINUS           reduce using rule 47 (valor -> VARIABLE .)
    TIMES           reduce using rule 47 (valor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (valor -> VARIABLE .)
    MODULO          reduce using rule 47 (valor -> VARIABLE .)
    POTENCIA        reduce using rule 47 (valor -> VARIABLE .)
    AND             reduce using rule 47 (valor -> VARIABLE .)
    LOGICAL_AND     reduce using rule 47 (valor -> VARIABLE .)
    OR              reduce using rule 47 (valor -> VARIABLE .)
    LOGICAL_OR      reduce using rule 47 (valor -> VARIABLE .)


state 28

    (61) comparacion -> expresion . opSymbol expresion
    (30) expresion -> expresion . opLogic expresion
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR

    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98

    opSymbol                       shift and go to state 85
    opLogic                        shift and go to state 86

state 29

    (32) expresion -> LPAREN . comparacion RPAREN
    (34) expresion -> LPAREN . expresion RPAREN
    (42) operaArit -> LPAREN . operaArit RPAREN
    (37) operador_ternario -> LPAREN . conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN . conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> LPAREN . VARIABLE RPAREN QUESTION COLON valor
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    VARIABLE        shift and go to state 105
    LPAREN          shift and go to state 99
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    NOT             shift and go to state 108
    ID              shift and go to state 37

    comparacion                    shift and go to state 100
    expresion                      shift and go to state 101
    operaArit                      shift and go to state 102
    conditions                     shift and go to state 103
    valor                          shift and go to state 104
    operador_ternario              shift and go to state 55
    condition                      shift and go to state 106
    llamadaFuncion                 shift and go to state 107

state 30

    (60) comparacion -> valor . opSymbol valor
    (29) expresion -> valor .
    (40) operaArit -> valor .
    (41) operaArit -> valor . operador operaArit
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ
    (54) operador -> . PLUS
    (55) operador -> . MINUS
    (56) operador -> . TIMES
    (57) operador -> . DIVIDE
    (58) operador -> . MODULO
    (59) operador -> . POTENCIA

  ! reduce/reduce conflict for EQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for NEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRICTEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRICTNEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for GT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for GEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 29 (expresion -> valor .)
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICTEQ resolved as shift
  ! shift/reduce conflict for STRICTNEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
    AND             reduce using rule 29 (expresion -> valor .)
    LOGICAL_AND     reduce using rule 29 (expresion -> valor .)
    OR              reduce using rule 29 (expresion -> valor .)
    LOGICAL_OR      reduce using rule 29 (expresion -> valor .)
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! EQ              [ reduce using rule 29 (expresion -> valor .) ]
  ! NEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! STRICTEQ        [ reduce using rule 29 (expresion -> valor .) ]
  ! STRICTNEQ       [ reduce using rule 29 (expresion -> valor .) ]
  ! LT              [ reduce using rule 29 (expresion -> valor .) ]
  ! GT              [ reduce using rule 29 (expresion -> valor .) ]
  ! LEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! GEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! EQ              [ reduce using rule 40 (operaArit -> valor .) ]
  ! NEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRICTEQ        [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRICTNEQ       [ reduce using rule 40 (operaArit -> valor .) ]
  ! LT              [ reduce using rule 40 (operaArit -> valor .) ]
  ! GT              [ reduce using rule 40 (operaArit -> valor .) ]
  ! LEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! GEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! AND             [ reduce using rule 40 (operaArit -> valor .) ]
  ! LOGICAL_AND     [ reduce using rule 40 (operaArit -> valor .) ]
  ! OR              [ reduce using rule 40 (operaArit -> valor .) ]
  ! LOGICAL_OR      [ reduce using rule 40 (operaArit -> valor .) ]

    opSymbol                       shift and go to state 109
    operador                       shift and go to state 110

state 31

    (62) impresion -> ECHO . imprimir SEMICOLON
    (64) imprimir -> . LPAREN repiteValores RPAREN
    (65) imprimir -> . LPAREN RPAREN
    (66) imprimir -> . repiteValores
    (67) imprimir -> . operador_ternario
    (68) imprimir -> . empty
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (71) empty -> .
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 118
    SEMICOLON       reduce using rule 71 (empty -> .)
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    imprimir                       shift and go to state 117
    repiteValores                  shift and go to state 119
    operador_ternario              shift and go to state 120
    empty                          shift and go to state 121
    valor                          shift and go to state 122
    llamadaFuncion                 shift and go to state 107

state 32

    (63) impresion -> PRINT . imprimir SEMICOLON
    (64) imprimir -> . LPAREN repiteValores RPAREN
    (65) imprimir -> . LPAREN RPAREN
    (66) imprimir -> . repiteValores
    (67) imprimir -> . operador_ternario
    (68) imprimir -> . empty
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (71) empty -> .
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 118
    SEMICOLON       reduce using rule 71 (empty -> .)
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    imprimir                       shift and go to state 124
    repiteValores                  shift and go to state 119
    operador_ternario              shift and go to state 120
    empty                          shift and go to state 121
    valor                          shift and go to state 122
    llamadaFuncion                 shift and go to state 107

state 33

    (72) estructurasPrograma -> controlStructure .

    VARIABLE        reduce using rule 72 (estructurasPrograma -> controlStructure .)
    ECHO            reduce using rule 72 (estructurasPrograma -> controlStructure .)
    PRINT           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    TRY             reduce using rule 72 (estructurasPrograma -> controlStructure .)
    FUNCTION        reduce using rule 72 (estructurasPrograma -> controlStructure .)
    RETURN          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    ID              reduce using rule 72 (estructurasPrograma -> controlStructure .)
    CLASS           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    INTERFACE       reduce using rule 72 (estructurasPrograma -> controlStructure .)
    INCLUDE         reduce using rule 72 (estructurasPrograma -> controlStructure .)
    NAMESPACE       reduce using rule 72 (estructurasPrograma -> controlStructure .)
    THROW           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    CONST           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    THIS            reduce using rule 72 (estructurasPrograma -> controlStructure .)
    INT             reduce using rule 72 (estructurasPrograma -> controlStructure .)
    FLOAT           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    STRING          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    BOOL            reduce using rule 72 (estructurasPrograma -> controlStructure .)
    NULL            reduce using rule 72 (estructurasPrograma -> controlStructure .)
    ARRAY           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    LPAREN          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    ABSTRACT        reduce using rule 72 (estructurasPrograma -> controlStructure .)
    PRIVATE         reduce using rule 72 (estructurasPrograma -> controlStructure .)
    PROTECTED       reduce using rule 72 (estructurasPrograma -> controlStructure .)
    PUBLIC          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    STATIC          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    FINAL           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    IF              reduce using rule 72 (estructurasPrograma -> controlStructure .)
    WHILE           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    DO              reduce using rule 72 (estructurasPrograma -> controlStructure .)
    SWITCH          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    FOREACH         reduce using rule 72 (estructurasPrograma -> controlStructure .)
    FOR             reduce using rule 72 (estructurasPrograma -> controlStructure .)
    CLOSETAG        reduce using rule 72 (estructurasPrograma -> controlStructure .)
    RBRACE          reduce using rule 72 (estructurasPrograma -> controlStructure .)
    BREAK           reduce using rule 72 (estructurasPrograma -> controlStructure .)
    ENDSWITCH       reduce using rule 72 (estructurasPrograma -> controlStructure .)
    CASE            reduce using rule 72 (estructurasPrograma -> controlStructure .)
    DEFAULT         reduce using rule 72 (estructurasPrograma -> controlStructure .)


state 34

    (73) estructurasPrograma -> dataStructure .

    VARIABLE        reduce using rule 73 (estructurasPrograma -> dataStructure .)
    ECHO            reduce using rule 73 (estructurasPrograma -> dataStructure .)
    PRINT           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    TRY             reduce using rule 73 (estructurasPrograma -> dataStructure .)
    FUNCTION        reduce using rule 73 (estructurasPrograma -> dataStructure .)
    RETURN          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    ID              reduce using rule 73 (estructurasPrograma -> dataStructure .)
    CLASS           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    INTERFACE       reduce using rule 73 (estructurasPrograma -> dataStructure .)
    INCLUDE         reduce using rule 73 (estructurasPrograma -> dataStructure .)
    NAMESPACE       reduce using rule 73 (estructurasPrograma -> dataStructure .)
    THROW           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    CONST           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    THIS            reduce using rule 73 (estructurasPrograma -> dataStructure .)
    INT             reduce using rule 73 (estructurasPrograma -> dataStructure .)
    FLOAT           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    STRING          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    BOOL            reduce using rule 73 (estructurasPrograma -> dataStructure .)
    NULL            reduce using rule 73 (estructurasPrograma -> dataStructure .)
    ARRAY           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    LPAREN          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    ABSTRACT        reduce using rule 73 (estructurasPrograma -> dataStructure .)
    PRIVATE         reduce using rule 73 (estructurasPrograma -> dataStructure .)
    PROTECTED       reduce using rule 73 (estructurasPrograma -> dataStructure .)
    PUBLIC          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    STATIC          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    FINAL           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    IF              reduce using rule 73 (estructurasPrograma -> dataStructure .)
    WHILE           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    DO              reduce using rule 73 (estructurasPrograma -> dataStructure .)
    SWITCH          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    FOREACH         reduce using rule 73 (estructurasPrograma -> dataStructure .)
    FOR             reduce using rule 73 (estructurasPrograma -> dataStructure .)
    CLOSETAG        reduce using rule 73 (estructurasPrograma -> dataStructure .)
    RBRACE          reduce using rule 73 (estructurasPrograma -> dataStructure .)
    BREAK           reduce using rule 73 (estructurasPrograma -> dataStructure .)
    ENDSWITCH       reduce using rule 73 (estructurasPrograma -> dataStructure .)
    CASE            reduce using rule 73 (estructurasPrograma -> dataStructure .)
    DEFAULT         reduce using rule 73 (estructurasPrograma -> dataStructure .)


state 35

    (163) try -> TRY . LBRACE body RBRACE catchs
    (164) try -> TRY . LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE

    LBRACE          shift and go to state 125


state 36

    (169) funcionDeclaration -> FUNCTION . ID LPAREN argumentos RPAREN LBRACE body RBRACE

    ID              shift and go to state 126


state 37

    (170) llamadaFuncion -> ID . LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> ID . LPAREN argumentos RPAREN
    (172) llamadaFuncion -> ID . LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 127


state 38

    (26) returnStatement -> RETURN . expresion SEMICOLON
    (27) returnStatement -> RETURN . SEMICOLON
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 129
    LPAREN          shift and go to state 29
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    expresion                      shift and go to state 128
    valor                          shift and go to state 130
    comparacion                    shift and go to state 131
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    llamadaFuncion                 shift and go to state 107

state 39

    (174) classDeclarate -> CLASS . ID LBRACE classBody RBRACE
    (175) classDeclarate -> CLASS . ID EXTENDS ID LBRACE classBody RBRACE
    (185) classInterface -> CLASS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> CLASS . ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 132


state 40

    (176) classDeclarate -> data . CLASS ID LBRACE classBody RBRACE
    (187) classInterface -> data . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> data . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    CLASS           shift and go to state 133


state 41

    (177) classDeclarate -> classInterface .

    VARIABLE        reduce using rule 177 (classDeclarate -> classInterface .)
    ECHO            reduce using rule 177 (classDeclarate -> classInterface .)
    PRINT           reduce using rule 177 (classDeclarate -> classInterface .)
    TRY             reduce using rule 177 (classDeclarate -> classInterface .)
    FUNCTION        reduce using rule 177 (classDeclarate -> classInterface .)
    RETURN          reduce using rule 177 (classDeclarate -> classInterface .)
    ID              reduce using rule 177 (classDeclarate -> classInterface .)
    CLASS           reduce using rule 177 (classDeclarate -> classInterface .)
    INTERFACE       reduce using rule 177 (classDeclarate -> classInterface .)
    INCLUDE         reduce using rule 177 (classDeclarate -> classInterface .)
    NAMESPACE       reduce using rule 177 (classDeclarate -> classInterface .)
    THROW           reduce using rule 177 (classDeclarate -> classInterface .)
    CONST           reduce using rule 177 (classDeclarate -> classInterface .)
    THIS            reduce using rule 177 (classDeclarate -> classInterface .)
    INT             reduce using rule 177 (classDeclarate -> classInterface .)
    FLOAT           reduce using rule 177 (classDeclarate -> classInterface .)
    STRING          reduce using rule 177 (classDeclarate -> classInterface .)
    BOOL            reduce using rule 177 (classDeclarate -> classInterface .)
    NULL            reduce using rule 177 (classDeclarate -> classInterface .)
    ARRAY           reduce using rule 177 (classDeclarate -> classInterface .)
    LPAREN          reduce using rule 177 (classDeclarate -> classInterface .)
    ABSTRACT        reduce using rule 177 (classDeclarate -> classInterface .)
    PRIVATE         reduce using rule 177 (classDeclarate -> classInterface .)
    PROTECTED       reduce using rule 177 (classDeclarate -> classInterface .)
    PUBLIC          reduce using rule 177 (classDeclarate -> classInterface .)
    STATIC          reduce using rule 177 (classDeclarate -> classInterface .)
    FINAL           reduce using rule 177 (classDeclarate -> classInterface .)
    IF              reduce using rule 177 (classDeclarate -> classInterface .)
    WHILE           reduce using rule 177 (classDeclarate -> classInterface .)
    DO              reduce using rule 177 (classDeclarate -> classInterface .)
    SWITCH          reduce using rule 177 (classDeclarate -> classInterface .)
    FOREACH         reduce using rule 177 (classDeclarate -> classInterface .)
    FOR             reduce using rule 177 (classDeclarate -> classInterface .)
    CLOSETAG        reduce using rule 177 (classDeclarate -> classInterface .)
    RBRACE          reduce using rule 177 (classDeclarate -> classInterface .)
    BREAK           reduce using rule 177 (classDeclarate -> classInterface .)
    ENDSWITCH       reduce using rule 177 (classDeclarate -> classInterface .)
    CASE            reduce using rule 177 (classDeclarate -> classInterface .)
    DEFAULT         reduce using rule 177 (classDeclarate -> classInterface .)


state 42

    (197) interface -> INTERFACE . ID LBRACE classBody RBRACE

    ID              shift and go to state 134


state 43

    (198) includes -> INCLUDE . STRING SEMICOLON
    (199) includes -> INCLUDE . STRING DOT STRING SEMICOLON

    STRING          shift and go to state 135


state 44

    (49) valor -> STRING .

    EQ              reduce using rule 49 (valor -> STRING .)
    NEQ             reduce using rule 49 (valor -> STRING .)
    STRICTEQ        reduce using rule 49 (valor -> STRING .)
    STRICTNEQ       reduce using rule 49 (valor -> STRING .)
    LT              reduce using rule 49 (valor -> STRING .)
    GT              reduce using rule 49 (valor -> STRING .)
    LEQ             reduce using rule 49 (valor -> STRING .)
    GEQ             reduce using rule 49 (valor -> STRING .)
    PLUS            reduce using rule 49 (valor -> STRING .)
    MINUS           reduce using rule 49 (valor -> STRING .)
    TIMES           reduce using rule 49 (valor -> STRING .)
    DIVIDE          reduce using rule 49 (valor -> STRING .)
    MODULO          reduce using rule 49 (valor -> STRING .)
    POTENCIA        reduce using rule 49 (valor -> STRING .)
    AND             reduce using rule 49 (valor -> STRING .)
    LOGICAL_AND     reduce using rule 49 (valor -> STRING .)
    OR              reduce using rule 49 (valor -> STRING .)
    LOGICAL_OR      reduce using rule 49 (valor -> STRING .)
    RPAREN          reduce using rule 49 (valor -> STRING .)
    COMMA           reduce using rule 49 (valor -> STRING .)
    SEMICOLON       reduce using rule 49 (valor -> STRING .)
    VARIABLE        reduce using rule 49 (valor -> STRING .)
    ECHO            reduce using rule 49 (valor -> STRING .)
    PRINT           reduce using rule 49 (valor -> STRING .)
    TRY             reduce using rule 49 (valor -> STRING .)
    FUNCTION        reduce using rule 49 (valor -> STRING .)
    RETURN          reduce using rule 49 (valor -> STRING .)
    ID              reduce using rule 49 (valor -> STRING .)
    CLASS           reduce using rule 49 (valor -> STRING .)
    INTERFACE       reduce using rule 49 (valor -> STRING .)
    INCLUDE         reduce using rule 49 (valor -> STRING .)
    NAMESPACE       reduce using rule 49 (valor -> STRING .)
    THROW           reduce using rule 49 (valor -> STRING .)
    CONST           reduce using rule 49 (valor -> STRING .)
    THIS            reduce using rule 49 (valor -> STRING .)
    INT             reduce using rule 49 (valor -> STRING .)
    FLOAT           reduce using rule 49 (valor -> STRING .)
    STRING          reduce using rule 49 (valor -> STRING .)
    BOOL            reduce using rule 49 (valor -> STRING .)
    NULL            reduce using rule 49 (valor -> STRING .)
    ARRAY           reduce using rule 49 (valor -> STRING .)
    LPAREN          reduce using rule 49 (valor -> STRING .)
    ABSTRACT        reduce using rule 49 (valor -> STRING .)
    PRIVATE         reduce using rule 49 (valor -> STRING .)
    PROTECTED       reduce using rule 49 (valor -> STRING .)
    PUBLIC          reduce using rule 49 (valor -> STRING .)
    STATIC          reduce using rule 49 (valor -> STRING .)
    FINAL           reduce using rule 49 (valor -> STRING .)
    IF              reduce using rule 49 (valor -> STRING .)
    WHILE           reduce using rule 49 (valor -> STRING .)
    DO              reduce using rule 49 (valor -> STRING .)
    SWITCH          reduce using rule 49 (valor -> STRING .)
    FOREACH         reduce using rule 49 (valor -> STRING .)
    FOR             reduce using rule 49 (valor -> STRING .)
    CLOSETAG        reduce using rule 49 (valor -> STRING .)
    RBRACE          reduce using rule 49 (valor -> STRING .)
    BREAK           reduce using rule 49 (valor -> STRING .)
    ENDSWITCH       reduce using rule 49 (valor -> STRING .)
    CASE            reduce using rule 49 (valor -> STRING .)
    DEFAULT         reduce using rule 49 (valor -> STRING .)
    ARROWMAP        reduce using rule 49 (valor -> STRING .)
    RBRACKET        reduce using rule 49 (valor -> STRING .)
    COLON           reduce using rule 49 (valor -> STRING .)


state 45

    (200) namespace -> NAMESPACE . ID SEMICOLON

    ID              shift and go to state 136


state 46

    (202) throw -> THROW . NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> THROW . valor SEMICOLON
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    NEW             shift and go to state 137
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 138
    llamadaFuncion                 shift and go to state 107

state 47

    (205) constdeclaration -> CONST . ID EQUALS valor SEMICOLON

    ID              shift and go to state 139


state 48

    (206) thisdeclaration -> THIS . ARROW ID SEMICOLON
    (207) thisdeclaration -> THIS . ARROW ID LPAREN RPAREN SEMICOLON

    ARROW           shift and go to state 140


state 49

    (46) valor -> INT .

    EQ              reduce using rule 46 (valor -> INT .)
    NEQ             reduce using rule 46 (valor -> INT .)
    STRICTEQ        reduce using rule 46 (valor -> INT .)
    STRICTNEQ       reduce using rule 46 (valor -> INT .)
    LT              reduce using rule 46 (valor -> INT .)
    GT              reduce using rule 46 (valor -> INT .)
    LEQ             reduce using rule 46 (valor -> INT .)
    GEQ             reduce using rule 46 (valor -> INT .)
    PLUS            reduce using rule 46 (valor -> INT .)
    MINUS           reduce using rule 46 (valor -> INT .)
    TIMES           reduce using rule 46 (valor -> INT .)
    DIVIDE          reduce using rule 46 (valor -> INT .)
    MODULO          reduce using rule 46 (valor -> INT .)
    POTENCIA        reduce using rule 46 (valor -> INT .)
    AND             reduce using rule 46 (valor -> INT .)
    LOGICAL_AND     reduce using rule 46 (valor -> INT .)
    OR              reduce using rule 46 (valor -> INT .)
    LOGICAL_OR      reduce using rule 46 (valor -> INT .)
    RPAREN          reduce using rule 46 (valor -> INT .)
    COMMA           reduce using rule 46 (valor -> INT .)
    SEMICOLON       reduce using rule 46 (valor -> INT .)
    VARIABLE        reduce using rule 46 (valor -> INT .)
    ECHO            reduce using rule 46 (valor -> INT .)
    PRINT           reduce using rule 46 (valor -> INT .)
    TRY             reduce using rule 46 (valor -> INT .)
    FUNCTION        reduce using rule 46 (valor -> INT .)
    RETURN          reduce using rule 46 (valor -> INT .)
    ID              reduce using rule 46 (valor -> INT .)
    CLASS           reduce using rule 46 (valor -> INT .)
    INTERFACE       reduce using rule 46 (valor -> INT .)
    INCLUDE         reduce using rule 46 (valor -> INT .)
    NAMESPACE       reduce using rule 46 (valor -> INT .)
    THROW           reduce using rule 46 (valor -> INT .)
    CONST           reduce using rule 46 (valor -> INT .)
    THIS            reduce using rule 46 (valor -> INT .)
    INT             reduce using rule 46 (valor -> INT .)
    FLOAT           reduce using rule 46 (valor -> INT .)
    STRING          reduce using rule 46 (valor -> INT .)
    BOOL            reduce using rule 46 (valor -> INT .)
    NULL            reduce using rule 46 (valor -> INT .)
    ARRAY           reduce using rule 46 (valor -> INT .)
    LPAREN          reduce using rule 46 (valor -> INT .)
    ABSTRACT        reduce using rule 46 (valor -> INT .)
    PRIVATE         reduce using rule 46 (valor -> INT .)
    PROTECTED       reduce using rule 46 (valor -> INT .)
    PUBLIC          reduce using rule 46 (valor -> INT .)
    STATIC          reduce using rule 46 (valor -> INT .)
    FINAL           reduce using rule 46 (valor -> INT .)
    IF              reduce using rule 46 (valor -> INT .)
    WHILE           reduce using rule 46 (valor -> INT .)
    DO              reduce using rule 46 (valor -> INT .)
    SWITCH          reduce using rule 46 (valor -> INT .)
    FOREACH         reduce using rule 46 (valor -> INT .)
    FOR             reduce using rule 46 (valor -> INT .)
    CLOSETAG        reduce using rule 46 (valor -> INT .)
    RBRACE          reduce using rule 46 (valor -> INT .)
    BREAK           reduce using rule 46 (valor -> INT .)
    ENDSWITCH       reduce using rule 46 (valor -> INT .)
    CASE            reduce using rule 46 (valor -> INT .)
    DEFAULT         reduce using rule 46 (valor -> INT .)
    ARROWMAP        reduce using rule 46 (valor -> INT .)
    RBRACKET        reduce using rule 46 (valor -> INT .)
    COLON           reduce using rule 46 (valor -> INT .)


state 50

    (48) valor -> FLOAT .

    EQ              reduce using rule 48 (valor -> FLOAT .)
    NEQ             reduce using rule 48 (valor -> FLOAT .)
    STRICTEQ        reduce using rule 48 (valor -> FLOAT .)
    STRICTNEQ       reduce using rule 48 (valor -> FLOAT .)
    LT              reduce using rule 48 (valor -> FLOAT .)
    GT              reduce using rule 48 (valor -> FLOAT .)
    LEQ             reduce using rule 48 (valor -> FLOAT .)
    GEQ             reduce using rule 48 (valor -> FLOAT .)
    PLUS            reduce using rule 48 (valor -> FLOAT .)
    MINUS           reduce using rule 48 (valor -> FLOAT .)
    TIMES           reduce using rule 48 (valor -> FLOAT .)
    DIVIDE          reduce using rule 48 (valor -> FLOAT .)
    MODULO          reduce using rule 48 (valor -> FLOAT .)
    POTENCIA        reduce using rule 48 (valor -> FLOAT .)
    AND             reduce using rule 48 (valor -> FLOAT .)
    LOGICAL_AND     reduce using rule 48 (valor -> FLOAT .)
    OR              reduce using rule 48 (valor -> FLOAT .)
    LOGICAL_OR      reduce using rule 48 (valor -> FLOAT .)
    RPAREN          reduce using rule 48 (valor -> FLOAT .)
    COMMA           reduce using rule 48 (valor -> FLOAT .)
    SEMICOLON       reduce using rule 48 (valor -> FLOAT .)
    VARIABLE        reduce using rule 48 (valor -> FLOAT .)
    ECHO            reduce using rule 48 (valor -> FLOAT .)
    PRINT           reduce using rule 48 (valor -> FLOAT .)
    TRY             reduce using rule 48 (valor -> FLOAT .)
    FUNCTION        reduce using rule 48 (valor -> FLOAT .)
    RETURN          reduce using rule 48 (valor -> FLOAT .)
    ID              reduce using rule 48 (valor -> FLOAT .)
    CLASS           reduce using rule 48 (valor -> FLOAT .)
    INTERFACE       reduce using rule 48 (valor -> FLOAT .)
    INCLUDE         reduce using rule 48 (valor -> FLOAT .)
    NAMESPACE       reduce using rule 48 (valor -> FLOAT .)
    THROW           reduce using rule 48 (valor -> FLOAT .)
    CONST           reduce using rule 48 (valor -> FLOAT .)
    THIS            reduce using rule 48 (valor -> FLOAT .)
    INT             reduce using rule 48 (valor -> FLOAT .)
    FLOAT           reduce using rule 48 (valor -> FLOAT .)
    STRING          reduce using rule 48 (valor -> FLOAT .)
    BOOL            reduce using rule 48 (valor -> FLOAT .)
    NULL            reduce using rule 48 (valor -> FLOAT .)
    ARRAY           reduce using rule 48 (valor -> FLOAT .)
    LPAREN          reduce using rule 48 (valor -> FLOAT .)
    ABSTRACT        reduce using rule 48 (valor -> FLOAT .)
    PRIVATE         reduce using rule 48 (valor -> FLOAT .)
    PROTECTED       reduce using rule 48 (valor -> FLOAT .)
    PUBLIC          reduce using rule 48 (valor -> FLOAT .)
    STATIC          reduce using rule 48 (valor -> FLOAT .)
    FINAL           reduce using rule 48 (valor -> FLOAT .)
    IF              reduce using rule 48 (valor -> FLOAT .)
    WHILE           reduce using rule 48 (valor -> FLOAT .)
    DO              reduce using rule 48 (valor -> FLOAT .)
    SWITCH          reduce using rule 48 (valor -> FLOAT .)
    FOREACH         reduce using rule 48 (valor -> FLOAT .)
    FOR             reduce using rule 48 (valor -> FLOAT .)
    CLOSETAG        reduce using rule 48 (valor -> FLOAT .)
    RBRACE          reduce using rule 48 (valor -> FLOAT .)
    BREAK           reduce using rule 48 (valor -> FLOAT .)
    ENDSWITCH       reduce using rule 48 (valor -> FLOAT .)
    CASE            reduce using rule 48 (valor -> FLOAT .)
    DEFAULT         reduce using rule 48 (valor -> FLOAT .)
    ARROWMAP        reduce using rule 48 (valor -> FLOAT .)
    RBRACKET        reduce using rule 48 (valor -> FLOAT .)
    COLON           reduce using rule 48 (valor -> FLOAT .)


state 51

    (50) valor -> BOOL .

    EQ              reduce using rule 50 (valor -> BOOL .)
    NEQ             reduce using rule 50 (valor -> BOOL .)
    STRICTEQ        reduce using rule 50 (valor -> BOOL .)
    STRICTNEQ       reduce using rule 50 (valor -> BOOL .)
    LT              reduce using rule 50 (valor -> BOOL .)
    GT              reduce using rule 50 (valor -> BOOL .)
    LEQ             reduce using rule 50 (valor -> BOOL .)
    GEQ             reduce using rule 50 (valor -> BOOL .)
    PLUS            reduce using rule 50 (valor -> BOOL .)
    MINUS           reduce using rule 50 (valor -> BOOL .)
    TIMES           reduce using rule 50 (valor -> BOOL .)
    DIVIDE          reduce using rule 50 (valor -> BOOL .)
    MODULO          reduce using rule 50 (valor -> BOOL .)
    POTENCIA        reduce using rule 50 (valor -> BOOL .)
    AND             reduce using rule 50 (valor -> BOOL .)
    LOGICAL_AND     reduce using rule 50 (valor -> BOOL .)
    OR              reduce using rule 50 (valor -> BOOL .)
    LOGICAL_OR      reduce using rule 50 (valor -> BOOL .)
    RPAREN          reduce using rule 50 (valor -> BOOL .)
    COMMA           reduce using rule 50 (valor -> BOOL .)
    SEMICOLON       reduce using rule 50 (valor -> BOOL .)
    VARIABLE        reduce using rule 50 (valor -> BOOL .)
    ECHO            reduce using rule 50 (valor -> BOOL .)
    PRINT           reduce using rule 50 (valor -> BOOL .)
    TRY             reduce using rule 50 (valor -> BOOL .)
    FUNCTION        reduce using rule 50 (valor -> BOOL .)
    RETURN          reduce using rule 50 (valor -> BOOL .)
    ID              reduce using rule 50 (valor -> BOOL .)
    CLASS           reduce using rule 50 (valor -> BOOL .)
    INTERFACE       reduce using rule 50 (valor -> BOOL .)
    INCLUDE         reduce using rule 50 (valor -> BOOL .)
    NAMESPACE       reduce using rule 50 (valor -> BOOL .)
    THROW           reduce using rule 50 (valor -> BOOL .)
    CONST           reduce using rule 50 (valor -> BOOL .)
    THIS            reduce using rule 50 (valor -> BOOL .)
    INT             reduce using rule 50 (valor -> BOOL .)
    FLOAT           reduce using rule 50 (valor -> BOOL .)
    STRING          reduce using rule 50 (valor -> BOOL .)
    BOOL            reduce using rule 50 (valor -> BOOL .)
    NULL            reduce using rule 50 (valor -> BOOL .)
    ARRAY           reduce using rule 50 (valor -> BOOL .)
    LPAREN          reduce using rule 50 (valor -> BOOL .)
    ABSTRACT        reduce using rule 50 (valor -> BOOL .)
    PRIVATE         reduce using rule 50 (valor -> BOOL .)
    PROTECTED       reduce using rule 50 (valor -> BOOL .)
    PUBLIC          reduce using rule 50 (valor -> BOOL .)
    STATIC          reduce using rule 50 (valor -> BOOL .)
    FINAL           reduce using rule 50 (valor -> BOOL .)
    IF              reduce using rule 50 (valor -> BOOL .)
    WHILE           reduce using rule 50 (valor -> BOOL .)
    DO              reduce using rule 50 (valor -> BOOL .)
    SWITCH          reduce using rule 50 (valor -> BOOL .)
    FOREACH         reduce using rule 50 (valor -> BOOL .)
    FOR             reduce using rule 50 (valor -> BOOL .)
    CLOSETAG        reduce using rule 50 (valor -> BOOL .)
    RBRACE          reduce using rule 50 (valor -> BOOL .)
    BREAK           reduce using rule 50 (valor -> BOOL .)
    ENDSWITCH       reduce using rule 50 (valor -> BOOL .)
    CASE            reduce using rule 50 (valor -> BOOL .)
    DEFAULT         reduce using rule 50 (valor -> BOOL .)
    ARROWMAP        reduce using rule 50 (valor -> BOOL .)
    RBRACKET        reduce using rule 50 (valor -> BOOL .)
    COLON           reduce using rule 50 (valor -> BOOL .)


state 52

    (51) valor -> NULL .

    EQ              reduce using rule 51 (valor -> NULL .)
    NEQ             reduce using rule 51 (valor -> NULL .)
    STRICTEQ        reduce using rule 51 (valor -> NULL .)
    STRICTNEQ       reduce using rule 51 (valor -> NULL .)
    LT              reduce using rule 51 (valor -> NULL .)
    GT              reduce using rule 51 (valor -> NULL .)
    LEQ             reduce using rule 51 (valor -> NULL .)
    GEQ             reduce using rule 51 (valor -> NULL .)
    PLUS            reduce using rule 51 (valor -> NULL .)
    MINUS           reduce using rule 51 (valor -> NULL .)
    TIMES           reduce using rule 51 (valor -> NULL .)
    DIVIDE          reduce using rule 51 (valor -> NULL .)
    MODULO          reduce using rule 51 (valor -> NULL .)
    POTENCIA        reduce using rule 51 (valor -> NULL .)
    AND             reduce using rule 51 (valor -> NULL .)
    LOGICAL_AND     reduce using rule 51 (valor -> NULL .)
    OR              reduce using rule 51 (valor -> NULL .)
    LOGICAL_OR      reduce using rule 51 (valor -> NULL .)
    RPAREN          reduce using rule 51 (valor -> NULL .)
    COMMA           reduce using rule 51 (valor -> NULL .)
    SEMICOLON       reduce using rule 51 (valor -> NULL .)
    VARIABLE        reduce using rule 51 (valor -> NULL .)
    ECHO            reduce using rule 51 (valor -> NULL .)
    PRINT           reduce using rule 51 (valor -> NULL .)
    TRY             reduce using rule 51 (valor -> NULL .)
    FUNCTION        reduce using rule 51 (valor -> NULL .)
    RETURN          reduce using rule 51 (valor -> NULL .)
    ID              reduce using rule 51 (valor -> NULL .)
    CLASS           reduce using rule 51 (valor -> NULL .)
    INTERFACE       reduce using rule 51 (valor -> NULL .)
    INCLUDE         reduce using rule 51 (valor -> NULL .)
    NAMESPACE       reduce using rule 51 (valor -> NULL .)
    THROW           reduce using rule 51 (valor -> NULL .)
    CONST           reduce using rule 51 (valor -> NULL .)
    THIS            reduce using rule 51 (valor -> NULL .)
    INT             reduce using rule 51 (valor -> NULL .)
    FLOAT           reduce using rule 51 (valor -> NULL .)
    STRING          reduce using rule 51 (valor -> NULL .)
    BOOL            reduce using rule 51 (valor -> NULL .)
    NULL            reduce using rule 51 (valor -> NULL .)
    ARRAY           reduce using rule 51 (valor -> NULL .)
    LPAREN          reduce using rule 51 (valor -> NULL .)
    ABSTRACT        reduce using rule 51 (valor -> NULL .)
    PRIVATE         reduce using rule 51 (valor -> NULL .)
    PROTECTED       reduce using rule 51 (valor -> NULL .)
    PUBLIC          reduce using rule 51 (valor -> NULL .)
    STATIC          reduce using rule 51 (valor -> NULL .)
    FINAL           reduce using rule 51 (valor -> NULL .)
    IF              reduce using rule 51 (valor -> NULL .)
    WHILE           reduce using rule 51 (valor -> NULL .)
    DO              reduce using rule 51 (valor -> NULL .)
    SWITCH          reduce using rule 51 (valor -> NULL .)
    FOREACH         reduce using rule 51 (valor -> NULL .)
    FOR             reduce using rule 51 (valor -> NULL .)
    CLOSETAG        reduce using rule 51 (valor -> NULL .)
    RBRACE          reduce using rule 51 (valor -> NULL .)
    BREAK           reduce using rule 51 (valor -> NULL .)
    ENDSWITCH       reduce using rule 51 (valor -> NULL .)
    CASE            reduce using rule 51 (valor -> NULL .)
    DEFAULT         reduce using rule 51 (valor -> NULL .)
    ARROWMAP        reduce using rule 51 (valor -> NULL .)
    RBRACKET        reduce using rule 51 (valor -> NULL .)
    COLON           reduce using rule 51 (valor -> NULL .)


state 53

    (52) valor -> ARRAY .

    EQ              reduce using rule 52 (valor -> ARRAY .)
    NEQ             reduce using rule 52 (valor -> ARRAY .)
    STRICTEQ        reduce using rule 52 (valor -> ARRAY .)
    STRICTNEQ       reduce using rule 52 (valor -> ARRAY .)
    LT              reduce using rule 52 (valor -> ARRAY .)
    GT              reduce using rule 52 (valor -> ARRAY .)
    LEQ             reduce using rule 52 (valor -> ARRAY .)
    GEQ             reduce using rule 52 (valor -> ARRAY .)
    PLUS            reduce using rule 52 (valor -> ARRAY .)
    MINUS           reduce using rule 52 (valor -> ARRAY .)
    TIMES           reduce using rule 52 (valor -> ARRAY .)
    DIVIDE          reduce using rule 52 (valor -> ARRAY .)
    MODULO          reduce using rule 52 (valor -> ARRAY .)
    POTENCIA        reduce using rule 52 (valor -> ARRAY .)
    AND             reduce using rule 52 (valor -> ARRAY .)
    LOGICAL_AND     reduce using rule 52 (valor -> ARRAY .)
    OR              reduce using rule 52 (valor -> ARRAY .)
    LOGICAL_OR      reduce using rule 52 (valor -> ARRAY .)
    RPAREN          reduce using rule 52 (valor -> ARRAY .)
    COMMA           reduce using rule 52 (valor -> ARRAY .)
    SEMICOLON       reduce using rule 52 (valor -> ARRAY .)
    VARIABLE        reduce using rule 52 (valor -> ARRAY .)
    ECHO            reduce using rule 52 (valor -> ARRAY .)
    PRINT           reduce using rule 52 (valor -> ARRAY .)
    TRY             reduce using rule 52 (valor -> ARRAY .)
    FUNCTION        reduce using rule 52 (valor -> ARRAY .)
    RETURN          reduce using rule 52 (valor -> ARRAY .)
    ID              reduce using rule 52 (valor -> ARRAY .)
    CLASS           reduce using rule 52 (valor -> ARRAY .)
    INTERFACE       reduce using rule 52 (valor -> ARRAY .)
    INCLUDE         reduce using rule 52 (valor -> ARRAY .)
    NAMESPACE       reduce using rule 52 (valor -> ARRAY .)
    THROW           reduce using rule 52 (valor -> ARRAY .)
    CONST           reduce using rule 52 (valor -> ARRAY .)
    THIS            reduce using rule 52 (valor -> ARRAY .)
    INT             reduce using rule 52 (valor -> ARRAY .)
    FLOAT           reduce using rule 52 (valor -> ARRAY .)
    STRING          reduce using rule 52 (valor -> ARRAY .)
    BOOL            reduce using rule 52 (valor -> ARRAY .)
    NULL            reduce using rule 52 (valor -> ARRAY .)
    ARRAY           reduce using rule 52 (valor -> ARRAY .)
    LPAREN          reduce using rule 52 (valor -> ARRAY .)
    ABSTRACT        reduce using rule 52 (valor -> ARRAY .)
    PRIVATE         reduce using rule 52 (valor -> ARRAY .)
    PROTECTED       reduce using rule 52 (valor -> ARRAY .)
    PUBLIC          reduce using rule 52 (valor -> ARRAY .)
    STATIC          reduce using rule 52 (valor -> ARRAY .)
    FINAL           reduce using rule 52 (valor -> ARRAY .)
    IF              reduce using rule 52 (valor -> ARRAY .)
    WHILE           reduce using rule 52 (valor -> ARRAY .)
    DO              reduce using rule 52 (valor -> ARRAY .)
    SWITCH          reduce using rule 52 (valor -> ARRAY .)
    FOREACH         reduce using rule 52 (valor -> ARRAY .)
    FOR             reduce using rule 52 (valor -> ARRAY .)
    CLOSETAG        reduce using rule 52 (valor -> ARRAY .)
    RBRACE          reduce using rule 52 (valor -> ARRAY .)
    BREAK           reduce using rule 52 (valor -> ARRAY .)
    ENDSWITCH       reduce using rule 52 (valor -> ARRAY .)
    CASE            reduce using rule 52 (valor -> ARRAY .)
    DEFAULT         reduce using rule 52 (valor -> ARRAY .)
    ARROWMAP        reduce using rule 52 (valor -> ARRAY .)
    RBRACKET        reduce using rule 52 (valor -> ARRAY .)
    COLON           reduce using rule 52 (valor -> ARRAY .)


state 54

    (33) expresion -> operaArit .

    EQ              reduce using rule 33 (expresion -> operaArit .)
    NEQ             reduce using rule 33 (expresion -> operaArit .)
    STRICTEQ        reduce using rule 33 (expresion -> operaArit .)
    STRICTNEQ       reduce using rule 33 (expresion -> operaArit .)
    LT              reduce using rule 33 (expresion -> operaArit .)
    GT              reduce using rule 33 (expresion -> operaArit .)
    LEQ             reduce using rule 33 (expresion -> operaArit .)
    GEQ             reduce using rule 33 (expresion -> operaArit .)
    AND             reduce using rule 33 (expresion -> operaArit .)
    LOGICAL_AND     reduce using rule 33 (expresion -> operaArit .)
    OR              reduce using rule 33 (expresion -> operaArit .)
    LOGICAL_OR      reduce using rule 33 (expresion -> operaArit .)
    SEMICOLON       reduce using rule 33 (expresion -> operaArit .)
    VARIABLE        reduce using rule 33 (expresion -> operaArit .)
    ECHO            reduce using rule 33 (expresion -> operaArit .)
    PRINT           reduce using rule 33 (expresion -> operaArit .)
    TRY             reduce using rule 33 (expresion -> operaArit .)
    FUNCTION        reduce using rule 33 (expresion -> operaArit .)
    RETURN          reduce using rule 33 (expresion -> operaArit .)
    ID              reduce using rule 33 (expresion -> operaArit .)
    CLASS           reduce using rule 33 (expresion -> operaArit .)
    INTERFACE       reduce using rule 33 (expresion -> operaArit .)
    INCLUDE         reduce using rule 33 (expresion -> operaArit .)
    NAMESPACE       reduce using rule 33 (expresion -> operaArit .)
    THROW           reduce using rule 33 (expresion -> operaArit .)
    CONST           reduce using rule 33 (expresion -> operaArit .)
    THIS            reduce using rule 33 (expresion -> operaArit .)
    INT             reduce using rule 33 (expresion -> operaArit .)
    FLOAT           reduce using rule 33 (expresion -> operaArit .)
    STRING          reduce using rule 33 (expresion -> operaArit .)
    BOOL            reduce using rule 33 (expresion -> operaArit .)
    NULL            reduce using rule 33 (expresion -> operaArit .)
    ARRAY           reduce using rule 33 (expresion -> operaArit .)
    LPAREN          reduce using rule 33 (expresion -> operaArit .)
    ABSTRACT        reduce using rule 33 (expresion -> operaArit .)
    PRIVATE         reduce using rule 33 (expresion -> operaArit .)
    PROTECTED       reduce using rule 33 (expresion -> operaArit .)
    PUBLIC          reduce using rule 33 (expresion -> operaArit .)
    STATIC          reduce using rule 33 (expresion -> operaArit .)
    FINAL           reduce using rule 33 (expresion -> operaArit .)
    IF              reduce using rule 33 (expresion -> operaArit .)
    WHILE           reduce using rule 33 (expresion -> operaArit .)
    DO              reduce using rule 33 (expresion -> operaArit .)
    SWITCH          reduce using rule 33 (expresion -> operaArit .)
    FOREACH         reduce using rule 33 (expresion -> operaArit .)
    FOR             reduce using rule 33 (expresion -> operaArit .)
    CLOSETAG        reduce using rule 33 (expresion -> operaArit .)
    RPAREN          reduce using rule 33 (expresion -> operaArit .)
    RBRACE          reduce using rule 33 (expresion -> operaArit .)
    BREAK           reduce using rule 33 (expresion -> operaArit .)
    ENDSWITCH       reduce using rule 33 (expresion -> operaArit .)
    CASE            reduce using rule 33 (expresion -> operaArit .)
    DEFAULT         reduce using rule 33 (expresion -> operaArit .)


state 55

    (35) expresion -> operador_ternario .

    EQ              reduce using rule 35 (expresion -> operador_ternario .)
    NEQ             reduce using rule 35 (expresion -> operador_ternario .)
    STRICTEQ        reduce using rule 35 (expresion -> operador_ternario .)
    STRICTNEQ       reduce using rule 35 (expresion -> operador_ternario .)
    LT              reduce using rule 35 (expresion -> operador_ternario .)
    GT              reduce using rule 35 (expresion -> operador_ternario .)
    LEQ             reduce using rule 35 (expresion -> operador_ternario .)
    GEQ             reduce using rule 35 (expresion -> operador_ternario .)
    AND             reduce using rule 35 (expresion -> operador_ternario .)
    LOGICAL_AND     reduce using rule 35 (expresion -> operador_ternario .)
    OR              reduce using rule 35 (expresion -> operador_ternario .)
    LOGICAL_OR      reduce using rule 35 (expresion -> operador_ternario .)
    RPAREN          reduce using rule 35 (expresion -> operador_ternario .)
    SEMICOLON       reduce using rule 35 (expresion -> operador_ternario .)
    VARIABLE        reduce using rule 35 (expresion -> operador_ternario .)
    ECHO            reduce using rule 35 (expresion -> operador_ternario .)
    PRINT           reduce using rule 35 (expresion -> operador_ternario .)
    TRY             reduce using rule 35 (expresion -> operador_ternario .)
    FUNCTION        reduce using rule 35 (expresion -> operador_ternario .)
    RETURN          reduce using rule 35 (expresion -> operador_ternario .)
    ID              reduce using rule 35 (expresion -> operador_ternario .)
    CLASS           reduce using rule 35 (expresion -> operador_ternario .)
    INTERFACE       reduce using rule 35 (expresion -> operador_ternario .)
    INCLUDE         reduce using rule 35 (expresion -> operador_ternario .)
    NAMESPACE       reduce using rule 35 (expresion -> operador_ternario .)
    THROW           reduce using rule 35 (expresion -> operador_ternario .)
    CONST           reduce using rule 35 (expresion -> operador_ternario .)
    THIS            reduce using rule 35 (expresion -> operador_ternario .)
    INT             reduce using rule 35 (expresion -> operador_ternario .)
    FLOAT           reduce using rule 35 (expresion -> operador_ternario .)
    STRING          reduce using rule 35 (expresion -> operador_ternario .)
    BOOL            reduce using rule 35 (expresion -> operador_ternario .)
    NULL            reduce using rule 35 (expresion -> operador_ternario .)
    ARRAY           reduce using rule 35 (expresion -> operador_ternario .)
    LPAREN          reduce using rule 35 (expresion -> operador_ternario .)
    ABSTRACT        reduce using rule 35 (expresion -> operador_ternario .)
    PRIVATE         reduce using rule 35 (expresion -> operador_ternario .)
    PROTECTED       reduce using rule 35 (expresion -> operador_ternario .)
    PUBLIC          reduce using rule 35 (expresion -> operador_ternario .)
    STATIC          reduce using rule 35 (expresion -> operador_ternario .)
    FINAL           reduce using rule 35 (expresion -> operador_ternario .)
    IF              reduce using rule 35 (expresion -> operador_ternario .)
    WHILE           reduce using rule 35 (expresion -> operador_ternario .)
    DO              reduce using rule 35 (expresion -> operador_ternario .)
    SWITCH          reduce using rule 35 (expresion -> operador_ternario .)
    FOREACH         reduce using rule 35 (expresion -> operador_ternario .)
    FOR             reduce using rule 35 (expresion -> operador_ternario .)
    CLOSETAG        reduce using rule 35 (expresion -> operador_ternario .)
    RBRACE          reduce using rule 35 (expresion -> operador_ternario .)
    BREAK           reduce using rule 35 (expresion -> operador_ternario .)
    ENDSWITCH       reduce using rule 35 (expresion -> operador_ternario .)
    CASE            reduce using rule 35 (expresion -> operador_ternario .)
    DEFAULT         reduce using rule 35 (expresion -> operador_ternario .)


state 56

    (74) controlStructure -> if .

    VARIABLE        reduce using rule 74 (controlStructure -> if .)
    ECHO            reduce using rule 74 (controlStructure -> if .)
    PRINT           reduce using rule 74 (controlStructure -> if .)
    TRY             reduce using rule 74 (controlStructure -> if .)
    FUNCTION        reduce using rule 74 (controlStructure -> if .)
    RETURN          reduce using rule 74 (controlStructure -> if .)
    ID              reduce using rule 74 (controlStructure -> if .)
    CLASS           reduce using rule 74 (controlStructure -> if .)
    INTERFACE       reduce using rule 74 (controlStructure -> if .)
    INCLUDE         reduce using rule 74 (controlStructure -> if .)
    NAMESPACE       reduce using rule 74 (controlStructure -> if .)
    THROW           reduce using rule 74 (controlStructure -> if .)
    CONST           reduce using rule 74 (controlStructure -> if .)
    THIS            reduce using rule 74 (controlStructure -> if .)
    INT             reduce using rule 74 (controlStructure -> if .)
    FLOAT           reduce using rule 74 (controlStructure -> if .)
    STRING          reduce using rule 74 (controlStructure -> if .)
    BOOL            reduce using rule 74 (controlStructure -> if .)
    NULL            reduce using rule 74 (controlStructure -> if .)
    ARRAY           reduce using rule 74 (controlStructure -> if .)
    LPAREN          reduce using rule 74 (controlStructure -> if .)
    ABSTRACT        reduce using rule 74 (controlStructure -> if .)
    PRIVATE         reduce using rule 74 (controlStructure -> if .)
    PROTECTED       reduce using rule 74 (controlStructure -> if .)
    PUBLIC          reduce using rule 74 (controlStructure -> if .)
    STATIC          reduce using rule 74 (controlStructure -> if .)
    FINAL           reduce using rule 74 (controlStructure -> if .)
    IF              reduce using rule 74 (controlStructure -> if .)
    WHILE           reduce using rule 74 (controlStructure -> if .)
    DO              reduce using rule 74 (controlStructure -> if .)
    SWITCH          reduce using rule 74 (controlStructure -> if .)
    FOREACH         reduce using rule 74 (controlStructure -> if .)
    FOR             reduce using rule 74 (controlStructure -> if .)
    CLOSETAG        reduce using rule 74 (controlStructure -> if .)
    RBRACE          reduce using rule 74 (controlStructure -> if .)
    BREAK           reduce using rule 74 (controlStructure -> if .)
    ENDSWITCH       reduce using rule 74 (controlStructure -> if .)
    CASE            reduce using rule 74 (controlStructure -> if .)
    DEFAULT         reduce using rule 74 (controlStructure -> if .)


state 57

    (75) controlStructure -> for .

    VARIABLE        reduce using rule 75 (controlStructure -> for .)
    ECHO            reduce using rule 75 (controlStructure -> for .)
    PRINT           reduce using rule 75 (controlStructure -> for .)
    TRY             reduce using rule 75 (controlStructure -> for .)
    FUNCTION        reduce using rule 75 (controlStructure -> for .)
    RETURN          reduce using rule 75 (controlStructure -> for .)
    ID              reduce using rule 75 (controlStructure -> for .)
    CLASS           reduce using rule 75 (controlStructure -> for .)
    INTERFACE       reduce using rule 75 (controlStructure -> for .)
    INCLUDE         reduce using rule 75 (controlStructure -> for .)
    NAMESPACE       reduce using rule 75 (controlStructure -> for .)
    THROW           reduce using rule 75 (controlStructure -> for .)
    CONST           reduce using rule 75 (controlStructure -> for .)
    THIS            reduce using rule 75 (controlStructure -> for .)
    INT             reduce using rule 75 (controlStructure -> for .)
    FLOAT           reduce using rule 75 (controlStructure -> for .)
    STRING          reduce using rule 75 (controlStructure -> for .)
    BOOL            reduce using rule 75 (controlStructure -> for .)
    NULL            reduce using rule 75 (controlStructure -> for .)
    ARRAY           reduce using rule 75 (controlStructure -> for .)
    LPAREN          reduce using rule 75 (controlStructure -> for .)
    ABSTRACT        reduce using rule 75 (controlStructure -> for .)
    PRIVATE         reduce using rule 75 (controlStructure -> for .)
    PROTECTED       reduce using rule 75 (controlStructure -> for .)
    PUBLIC          reduce using rule 75 (controlStructure -> for .)
    STATIC          reduce using rule 75 (controlStructure -> for .)
    FINAL           reduce using rule 75 (controlStructure -> for .)
    IF              reduce using rule 75 (controlStructure -> for .)
    WHILE           reduce using rule 75 (controlStructure -> for .)
    DO              reduce using rule 75 (controlStructure -> for .)
    SWITCH          reduce using rule 75 (controlStructure -> for .)
    FOREACH         reduce using rule 75 (controlStructure -> for .)
    FOR             reduce using rule 75 (controlStructure -> for .)
    CLOSETAG        reduce using rule 75 (controlStructure -> for .)
    RBRACE          reduce using rule 75 (controlStructure -> for .)
    BREAK           reduce using rule 75 (controlStructure -> for .)
    ENDSWITCH       reduce using rule 75 (controlStructure -> for .)
    CASE            reduce using rule 75 (controlStructure -> for .)
    DEFAULT         reduce using rule 75 (controlStructure -> for .)


state 58

    (76) controlStructure -> while .

    VARIABLE        reduce using rule 76 (controlStructure -> while .)
    ECHO            reduce using rule 76 (controlStructure -> while .)
    PRINT           reduce using rule 76 (controlStructure -> while .)
    TRY             reduce using rule 76 (controlStructure -> while .)
    FUNCTION        reduce using rule 76 (controlStructure -> while .)
    RETURN          reduce using rule 76 (controlStructure -> while .)
    ID              reduce using rule 76 (controlStructure -> while .)
    CLASS           reduce using rule 76 (controlStructure -> while .)
    INTERFACE       reduce using rule 76 (controlStructure -> while .)
    INCLUDE         reduce using rule 76 (controlStructure -> while .)
    NAMESPACE       reduce using rule 76 (controlStructure -> while .)
    THROW           reduce using rule 76 (controlStructure -> while .)
    CONST           reduce using rule 76 (controlStructure -> while .)
    THIS            reduce using rule 76 (controlStructure -> while .)
    INT             reduce using rule 76 (controlStructure -> while .)
    FLOAT           reduce using rule 76 (controlStructure -> while .)
    STRING          reduce using rule 76 (controlStructure -> while .)
    BOOL            reduce using rule 76 (controlStructure -> while .)
    NULL            reduce using rule 76 (controlStructure -> while .)
    ARRAY           reduce using rule 76 (controlStructure -> while .)
    LPAREN          reduce using rule 76 (controlStructure -> while .)
    ABSTRACT        reduce using rule 76 (controlStructure -> while .)
    PRIVATE         reduce using rule 76 (controlStructure -> while .)
    PROTECTED       reduce using rule 76 (controlStructure -> while .)
    PUBLIC          reduce using rule 76 (controlStructure -> while .)
    STATIC          reduce using rule 76 (controlStructure -> while .)
    FINAL           reduce using rule 76 (controlStructure -> while .)
    IF              reduce using rule 76 (controlStructure -> while .)
    WHILE           reduce using rule 76 (controlStructure -> while .)
    DO              reduce using rule 76 (controlStructure -> while .)
    SWITCH          reduce using rule 76 (controlStructure -> while .)
    FOREACH         reduce using rule 76 (controlStructure -> while .)
    FOR             reduce using rule 76 (controlStructure -> while .)
    CLOSETAG        reduce using rule 76 (controlStructure -> while .)
    RBRACE          reduce using rule 76 (controlStructure -> while .)
    BREAK           reduce using rule 76 (controlStructure -> while .)
    ENDSWITCH       reduce using rule 76 (controlStructure -> while .)
    CASE            reduce using rule 76 (controlStructure -> while .)
    DEFAULT         reduce using rule 76 (controlStructure -> while .)


state 59

    (77) controlStructure -> dowhile .

    VARIABLE        reduce using rule 77 (controlStructure -> dowhile .)
    ECHO            reduce using rule 77 (controlStructure -> dowhile .)
    PRINT           reduce using rule 77 (controlStructure -> dowhile .)
    TRY             reduce using rule 77 (controlStructure -> dowhile .)
    FUNCTION        reduce using rule 77 (controlStructure -> dowhile .)
    RETURN          reduce using rule 77 (controlStructure -> dowhile .)
    ID              reduce using rule 77 (controlStructure -> dowhile .)
    CLASS           reduce using rule 77 (controlStructure -> dowhile .)
    INTERFACE       reduce using rule 77 (controlStructure -> dowhile .)
    INCLUDE         reduce using rule 77 (controlStructure -> dowhile .)
    NAMESPACE       reduce using rule 77 (controlStructure -> dowhile .)
    THROW           reduce using rule 77 (controlStructure -> dowhile .)
    CONST           reduce using rule 77 (controlStructure -> dowhile .)
    THIS            reduce using rule 77 (controlStructure -> dowhile .)
    INT             reduce using rule 77 (controlStructure -> dowhile .)
    FLOAT           reduce using rule 77 (controlStructure -> dowhile .)
    STRING          reduce using rule 77 (controlStructure -> dowhile .)
    BOOL            reduce using rule 77 (controlStructure -> dowhile .)
    NULL            reduce using rule 77 (controlStructure -> dowhile .)
    ARRAY           reduce using rule 77 (controlStructure -> dowhile .)
    LPAREN          reduce using rule 77 (controlStructure -> dowhile .)
    ABSTRACT        reduce using rule 77 (controlStructure -> dowhile .)
    PRIVATE         reduce using rule 77 (controlStructure -> dowhile .)
    PROTECTED       reduce using rule 77 (controlStructure -> dowhile .)
    PUBLIC          reduce using rule 77 (controlStructure -> dowhile .)
    STATIC          reduce using rule 77 (controlStructure -> dowhile .)
    FINAL           reduce using rule 77 (controlStructure -> dowhile .)
    IF              reduce using rule 77 (controlStructure -> dowhile .)
    WHILE           reduce using rule 77 (controlStructure -> dowhile .)
    DO              reduce using rule 77 (controlStructure -> dowhile .)
    SWITCH          reduce using rule 77 (controlStructure -> dowhile .)
    FOREACH         reduce using rule 77 (controlStructure -> dowhile .)
    FOR             reduce using rule 77 (controlStructure -> dowhile .)
    CLOSETAG        reduce using rule 77 (controlStructure -> dowhile .)
    RBRACE          reduce using rule 77 (controlStructure -> dowhile .)
    BREAK           reduce using rule 77 (controlStructure -> dowhile .)
    ENDSWITCH       reduce using rule 77 (controlStructure -> dowhile .)
    CASE            reduce using rule 77 (controlStructure -> dowhile .)
    DEFAULT         reduce using rule 77 (controlStructure -> dowhile .)


state 60

    (78) controlStructure -> switch .

    VARIABLE        reduce using rule 78 (controlStructure -> switch .)
    ECHO            reduce using rule 78 (controlStructure -> switch .)
    PRINT           reduce using rule 78 (controlStructure -> switch .)
    TRY             reduce using rule 78 (controlStructure -> switch .)
    FUNCTION        reduce using rule 78 (controlStructure -> switch .)
    RETURN          reduce using rule 78 (controlStructure -> switch .)
    ID              reduce using rule 78 (controlStructure -> switch .)
    CLASS           reduce using rule 78 (controlStructure -> switch .)
    INTERFACE       reduce using rule 78 (controlStructure -> switch .)
    INCLUDE         reduce using rule 78 (controlStructure -> switch .)
    NAMESPACE       reduce using rule 78 (controlStructure -> switch .)
    THROW           reduce using rule 78 (controlStructure -> switch .)
    CONST           reduce using rule 78 (controlStructure -> switch .)
    THIS            reduce using rule 78 (controlStructure -> switch .)
    INT             reduce using rule 78 (controlStructure -> switch .)
    FLOAT           reduce using rule 78 (controlStructure -> switch .)
    STRING          reduce using rule 78 (controlStructure -> switch .)
    BOOL            reduce using rule 78 (controlStructure -> switch .)
    NULL            reduce using rule 78 (controlStructure -> switch .)
    ARRAY           reduce using rule 78 (controlStructure -> switch .)
    LPAREN          reduce using rule 78 (controlStructure -> switch .)
    ABSTRACT        reduce using rule 78 (controlStructure -> switch .)
    PRIVATE         reduce using rule 78 (controlStructure -> switch .)
    PROTECTED       reduce using rule 78 (controlStructure -> switch .)
    PUBLIC          reduce using rule 78 (controlStructure -> switch .)
    STATIC          reduce using rule 78 (controlStructure -> switch .)
    FINAL           reduce using rule 78 (controlStructure -> switch .)
    IF              reduce using rule 78 (controlStructure -> switch .)
    WHILE           reduce using rule 78 (controlStructure -> switch .)
    DO              reduce using rule 78 (controlStructure -> switch .)
    SWITCH          reduce using rule 78 (controlStructure -> switch .)
    FOREACH         reduce using rule 78 (controlStructure -> switch .)
    FOR             reduce using rule 78 (controlStructure -> switch .)
    CLOSETAG        reduce using rule 78 (controlStructure -> switch .)
    RBRACE          reduce using rule 78 (controlStructure -> switch .)
    BREAK           reduce using rule 78 (controlStructure -> switch .)
    ENDSWITCH       reduce using rule 78 (controlStructure -> switch .)
    CASE            reduce using rule 78 (controlStructure -> switch .)
    DEFAULT         reduce using rule 78 (controlStructure -> switch .)


state 61

    (79) controlStructure -> foreach .

    VARIABLE        reduce using rule 79 (controlStructure -> foreach .)
    ECHO            reduce using rule 79 (controlStructure -> foreach .)
    PRINT           reduce using rule 79 (controlStructure -> foreach .)
    TRY             reduce using rule 79 (controlStructure -> foreach .)
    FUNCTION        reduce using rule 79 (controlStructure -> foreach .)
    RETURN          reduce using rule 79 (controlStructure -> foreach .)
    ID              reduce using rule 79 (controlStructure -> foreach .)
    CLASS           reduce using rule 79 (controlStructure -> foreach .)
    INTERFACE       reduce using rule 79 (controlStructure -> foreach .)
    INCLUDE         reduce using rule 79 (controlStructure -> foreach .)
    NAMESPACE       reduce using rule 79 (controlStructure -> foreach .)
    THROW           reduce using rule 79 (controlStructure -> foreach .)
    CONST           reduce using rule 79 (controlStructure -> foreach .)
    THIS            reduce using rule 79 (controlStructure -> foreach .)
    INT             reduce using rule 79 (controlStructure -> foreach .)
    FLOAT           reduce using rule 79 (controlStructure -> foreach .)
    STRING          reduce using rule 79 (controlStructure -> foreach .)
    BOOL            reduce using rule 79 (controlStructure -> foreach .)
    NULL            reduce using rule 79 (controlStructure -> foreach .)
    ARRAY           reduce using rule 79 (controlStructure -> foreach .)
    LPAREN          reduce using rule 79 (controlStructure -> foreach .)
    ABSTRACT        reduce using rule 79 (controlStructure -> foreach .)
    PRIVATE         reduce using rule 79 (controlStructure -> foreach .)
    PROTECTED       reduce using rule 79 (controlStructure -> foreach .)
    PUBLIC          reduce using rule 79 (controlStructure -> foreach .)
    STATIC          reduce using rule 79 (controlStructure -> foreach .)
    FINAL           reduce using rule 79 (controlStructure -> foreach .)
    IF              reduce using rule 79 (controlStructure -> foreach .)
    WHILE           reduce using rule 79 (controlStructure -> foreach .)
    DO              reduce using rule 79 (controlStructure -> foreach .)
    SWITCH          reduce using rule 79 (controlStructure -> foreach .)
    FOREACH         reduce using rule 79 (controlStructure -> foreach .)
    FOR             reduce using rule 79 (controlStructure -> foreach .)
    CLOSETAG        reduce using rule 79 (controlStructure -> foreach .)
    RBRACE          reduce using rule 79 (controlStructure -> foreach .)
    BREAK           reduce using rule 79 (controlStructure -> foreach .)
    ENDSWITCH       reduce using rule 79 (controlStructure -> foreach .)
    CASE            reduce using rule 79 (controlStructure -> foreach .)
    DEFAULT         reduce using rule 79 (controlStructure -> foreach .)


state 62

    (129) dataStructure -> array .

    VARIABLE        reduce using rule 129 (dataStructure -> array .)
    ECHO            reduce using rule 129 (dataStructure -> array .)
    PRINT           reduce using rule 129 (dataStructure -> array .)
    TRY             reduce using rule 129 (dataStructure -> array .)
    FUNCTION        reduce using rule 129 (dataStructure -> array .)
    RETURN          reduce using rule 129 (dataStructure -> array .)
    ID              reduce using rule 129 (dataStructure -> array .)
    CLASS           reduce using rule 129 (dataStructure -> array .)
    INTERFACE       reduce using rule 129 (dataStructure -> array .)
    INCLUDE         reduce using rule 129 (dataStructure -> array .)
    NAMESPACE       reduce using rule 129 (dataStructure -> array .)
    THROW           reduce using rule 129 (dataStructure -> array .)
    CONST           reduce using rule 129 (dataStructure -> array .)
    THIS            reduce using rule 129 (dataStructure -> array .)
    INT             reduce using rule 129 (dataStructure -> array .)
    FLOAT           reduce using rule 129 (dataStructure -> array .)
    STRING          reduce using rule 129 (dataStructure -> array .)
    BOOL            reduce using rule 129 (dataStructure -> array .)
    NULL            reduce using rule 129 (dataStructure -> array .)
    ARRAY           reduce using rule 129 (dataStructure -> array .)
    LPAREN          reduce using rule 129 (dataStructure -> array .)
    ABSTRACT        reduce using rule 129 (dataStructure -> array .)
    PRIVATE         reduce using rule 129 (dataStructure -> array .)
    PROTECTED       reduce using rule 129 (dataStructure -> array .)
    PUBLIC          reduce using rule 129 (dataStructure -> array .)
    STATIC          reduce using rule 129 (dataStructure -> array .)
    FINAL           reduce using rule 129 (dataStructure -> array .)
    IF              reduce using rule 129 (dataStructure -> array .)
    WHILE           reduce using rule 129 (dataStructure -> array .)
    DO              reduce using rule 129 (dataStructure -> array .)
    SWITCH          reduce using rule 129 (dataStructure -> array .)
    FOREACH         reduce using rule 129 (dataStructure -> array .)
    FOR             reduce using rule 129 (dataStructure -> array .)
    CLOSETAG        reduce using rule 129 (dataStructure -> array .)
    RBRACE          reduce using rule 129 (dataStructure -> array .)
    BREAK           reduce using rule 129 (dataStructure -> array .)
    ENDSWITCH       reduce using rule 129 (dataStructure -> array .)
    CASE            reduce using rule 129 (dataStructure -> array .)
    DEFAULT         reduce using rule 129 (dataStructure -> array .)


state 63

    (191) data -> ABSTRACT .

    CLASS           reduce using rule 191 (data -> ABSTRACT .)


state 64

    (192) data -> PRIVATE .

    CLASS           reduce using rule 192 (data -> PRIVATE .)


state 65

    (193) data -> PROTECTED .

    CLASS           reduce using rule 193 (data -> PROTECTED .)


state 66

    (194) data -> PUBLIC .

    CLASS           reduce using rule 194 (data -> PUBLIC .)


state 67

    (195) data -> STATIC .

    CLASS           reduce using rule 195 (data -> STATIC .)


state 68

    (196) data -> FINAL .

    CLASS           reduce using rule 196 (data -> FINAL .)


state 69

    (80) if -> IF . LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> IF . LPAREN conditions RPAREN body

    LPAREN          shift and go to state 141


state 70

    (108) for -> forStatement .

    VARIABLE        reduce using rule 108 (for -> forStatement .)
    ECHO            reduce using rule 108 (for -> forStatement .)
    PRINT           reduce using rule 108 (for -> forStatement .)
    TRY             reduce using rule 108 (for -> forStatement .)
    FUNCTION        reduce using rule 108 (for -> forStatement .)
    RETURN          reduce using rule 108 (for -> forStatement .)
    ID              reduce using rule 108 (for -> forStatement .)
    CLASS           reduce using rule 108 (for -> forStatement .)
    INTERFACE       reduce using rule 108 (for -> forStatement .)
    INCLUDE         reduce using rule 108 (for -> forStatement .)
    NAMESPACE       reduce using rule 108 (for -> forStatement .)
    THROW           reduce using rule 108 (for -> forStatement .)
    CONST           reduce using rule 108 (for -> forStatement .)
    THIS            reduce using rule 108 (for -> forStatement .)
    INT             reduce using rule 108 (for -> forStatement .)
    FLOAT           reduce using rule 108 (for -> forStatement .)
    STRING          reduce using rule 108 (for -> forStatement .)
    BOOL            reduce using rule 108 (for -> forStatement .)
    NULL            reduce using rule 108 (for -> forStatement .)
    ARRAY           reduce using rule 108 (for -> forStatement .)
    LPAREN          reduce using rule 108 (for -> forStatement .)
    ABSTRACT        reduce using rule 108 (for -> forStatement .)
    PRIVATE         reduce using rule 108 (for -> forStatement .)
    PROTECTED       reduce using rule 108 (for -> forStatement .)
    PUBLIC          reduce using rule 108 (for -> forStatement .)
    STATIC          reduce using rule 108 (for -> forStatement .)
    FINAL           reduce using rule 108 (for -> forStatement .)
    IF              reduce using rule 108 (for -> forStatement .)
    WHILE           reduce using rule 108 (for -> forStatement .)
    DO              reduce using rule 108 (for -> forStatement .)
    SWITCH          reduce using rule 108 (for -> forStatement .)
    FOREACH         reduce using rule 108 (for -> forStatement .)
    FOR             reduce using rule 108 (for -> forStatement .)
    CLOSETAG        reduce using rule 108 (for -> forStatement .)
    RBRACE          reduce using rule 108 (for -> forStatement .)
    BREAK           reduce using rule 108 (for -> forStatement .)
    ENDSWITCH       reduce using rule 108 (for -> forStatement .)
    CASE            reduce using rule 108 (for -> forStatement .)
    DEFAULT         reduce using rule 108 (for -> forStatement .)


state 71

    (112) while -> WHILE . LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> WHILE . LPAREN condition RPAREN LBRACE RBRACE

    LPAREN          shift and go to state 142


state 72

    (114) dowhile -> DO . LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    LBRACE          shift and go to state 143


state 73

    (115) switch -> SWITCH . LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> SWITCH . LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON

    LPAREN          shift and go to state 144


state 74

    (123) foreach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 145


state 75

    (133) array -> map .

    VARIABLE        reduce using rule 133 (array -> map .)
    ECHO            reduce using rule 133 (array -> map .)
    PRINT           reduce using rule 133 (array -> map .)
    TRY             reduce using rule 133 (array -> map .)
    FUNCTION        reduce using rule 133 (array -> map .)
    RETURN          reduce using rule 133 (array -> map .)
    ID              reduce using rule 133 (array -> map .)
    CLASS           reduce using rule 133 (array -> map .)
    INTERFACE       reduce using rule 133 (array -> map .)
    INCLUDE         reduce using rule 133 (array -> map .)
    NAMESPACE       reduce using rule 133 (array -> map .)
    THROW           reduce using rule 133 (array -> map .)
    CONST           reduce using rule 133 (array -> map .)
    THIS            reduce using rule 133 (array -> map .)
    INT             reduce using rule 133 (array -> map .)
    FLOAT           reduce using rule 133 (array -> map .)
    STRING          reduce using rule 133 (array -> map .)
    BOOL            reduce using rule 133 (array -> map .)
    NULL            reduce using rule 133 (array -> map .)
    ARRAY           reduce using rule 133 (array -> map .)
    LPAREN          reduce using rule 133 (array -> map .)
    ABSTRACT        reduce using rule 133 (array -> map .)
    PRIVATE         reduce using rule 133 (array -> map .)
    PROTECTED       reduce using rule 133 (array -> map .)
    PUBLIC          reduce using rule 133 (array -> map .)
    STATIC          reduce using rule 133 (array -> map .)
    FINAL           reduce using rule 133 (array -> map .)
    IF              reduce using rule 133 (array -> map .)
    WHILE           reduce using rule 133 (array -> map .)
    DO              reduce using rule 133 (array -> map .)
    SWITCH          reduce using rule 133 (array -> map .)
    FOREACH         reduce using rule 133 (array -> map .)
    FOR             reduce using rule 133 (array -> map .)
    CLOSETAG        reduce using rule 133 (array -> map .)
    RBRACE          reduce using rule 133 (array -> map .)
    BREAK           reduce using rule 133 (array -> map .)
    ENDSWITCH       reduce using rule 133 (array -> map .)
    CASE            reduce using rule 133 (array -> map .)
    DEFAULT         reduce using rule 133 (array -> map .)


state 76

    (109) forStatement -> FOR . LPAREN forcondition RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 146


state 77

    (1) inicio -> OPENTAG programa CLOSETAG .

    $end            reduce using rule 1 (inicio -> OPENTAG programa CLOSETAG .)


state 78

    (3) programa -> sentencia programa .

    CLOSETAG        reduce using rule 3 (programa -> sentencia programa .)


state 79

    (28) asignacion -> VARIABLE EQUALS . expresion SEMICOLON
    (36) asignacion_fgets -> VARIABLE EQUALS . FGETS LPAREN STDIN RPAREN SEMICOLON
    (201) anonymousFunction -> VARIABLE EQUALS . FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (130) array -> VARIABLE EQUALS . arrays SEMICOLON
    (131) array -> VARIABLE EQUALS . LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> VARIABLE EQUALS . ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (137) map -> VARIABLE EQUALS . LBRACKET maps RBRACKET SEMICOLON
    (138) map -> VARIABLE EQUALS . ARRAY LPAREN maps RPAREN SEMICOLON
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (134) arrays -> . LBRACKET repiteValores RBRACKET
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    FGETS           shift and go to state 148
    FN              shift and go to state 149
    LBRACKET        shift and go to state 151
    ARRAY           shift and go to state 152
    LPAREN          shift and go to state 29
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ID              shift and go to state 37

    expresion                      shift and go to state 147
    comparacion                    shift and go to state 131
    arrays                         shift and go to state 150
    valor                          shift and go to state 130
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    llamadaFuncion                 shift and go to state 107

state 80

    (168) objeto -> VARIABLE ARROW . ID LPAREN argumentos RPAREN SEMICOLON

    ID              shift and go to state 153


state 81

    (204) instance -> VARIABLE INSTANCEOF . ID

    ID              shift and go to state 154


state 82

    (208) concatenate -> VARIABLE CONCATENATEEQUAL . STRING

    STRING          shift and go to state 155


state 83

    (209) minuse -> VARIABLE MINUSEQUAL . INT

    INT             shift and go to state 156


state 84

    (210) pluse -> VARIABLE PLUSEQUAL . INT

    INT             shift and go to state 157


state 85

    (61) comparacion -> expresion opSymbol . expresion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 29
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    expresion                      shift and go to state 158
    valor                          shift and go to state 130
    comparacion                    shift and go to state 131
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    llamadaFuncion                 shift and go to state 107

state 86

    (30) expresion -> expresion opLogic . expresion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 29
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    expresion                      shift and go to state 159
    valor                          shift and go to state 130
    comparacion                    shift and go to state 131
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    llamadaFuncion                 shift and go to state 107

state 87

    (92) opSymbol -> EQ .

    LPAREN          reduce using rule 92 (opSymbol -> EQ .)
    INT             reduce using rule 92 (opSymbol -> EQ .)
    VARIABLE        reduce using rule 92 (opSymbol -> EQ .)
    FLOAT           reduce using rule 92 (opSymbol -> EQ .)
    STRING          reduce using rule 92 (opSymbol -> EQ .)
    BOOL            reduce using rule 92 (opSymbol -> EQ .)
    NULL            reduce using rule 92 (opSymbol -> EQ .)
    ARRAY           reduce using rule 92 (opSymbol -> EQ .)
    ID              reduce using rule 92 (opSymbol -> EQ .)


state 88

    (93) opSymbol -> NEQ .

    LPAREN          reduce using rule 93 (opSymbol -> NEQ .)
    INT             reduce using rule 93 (opSymbol -> NEQ .)
    VARIABLE        reduce using rule 93 (opSymbol -> NEQ .)
    FLOAT           reduce using rule 93 (opSymbol -> NEQ .)
    STRING          reduce using rule 93 (opSymbol -> NEQ .)
    BOOL            reduce using rule 93 (opSymbol -> NEQ .)
    NULL            reduce using rule 93 (opSymbol -> NEQ .)
    ARRAY           reduce using rule 93 (opSymbol -> NEQ .)
    ID              reduce using rule 93 (opSymbol -> NEQ .)


state 89

    (94) opSymbol -> STRICTEQ .

    LPAREN          reduce using rule 94 (opSymbol -> STRICTEQ .)
    INT             reduce using rule 94 (opSymbol -> STRICTEQ .)
    VARIABLE        reduce using rule 94 (opSymbol -> STRICTEQ .)
    FLOAT           reduce using rule 94 (opSymbol -> STRICTEQ .)
    STRING          reduce using rule 94 (opSymbol -> STRICTEQ .)
    BOOL            reduce using rule 94 (opSymbol -> STRICTEQ .)
    NULL            reduce using rule 94 (opSymbol -> STRICTEQ .)
    ARRAY           reduce using rule 94 (opSymbol -> STRICTEQ .)
    ID              reduce using rule 94 (opSymbol -> STRICTEQ .)


state 90

    (95) opSymbol -> STRICTNEQ .

    LPAREN          reduce using rule 95 (opSymbol -> STRICTNEQ .)
    INT             reduce using rule 95 (opSymbol -> STRICTNEQ .)
    VARIABLE        reduce using rule 95 (opSymbol -> STRICTNEQ .)
    FLOAT           reduce using rule 95 (opSymbol -> STRICTNEQ .)
    STRING          reduce using rule 95 (opSymbol -> STRICTNEQ .)
    BOOL            reduce using rule 95 (opSymbol -> STRICTNEQ .)
    NULL            reduce using rule 95 (opSymbol -> STRICTNEQ .)
    ARRAY           reduce using rule 95 (opSymbol -> STRICTNEQ .)
    ID              reduce using rule 95 (opSymbol -> STRICTNEQ .)


state 91

    (96) opSymbol -> LT .

    LPAREN          reduce using rule 96 (opSymbol -> LT .)
    INT             reduce using rule 96 (opSymbol -> LT .)
    VARIABLE        reduce using rule 96 (opSymbol -> LT .)
    FLOAT           reduce using rule 96 (opSymbol -> LT .)
    STRING          reduce using rule 96 (opSymbol -> LT .)
    BOOL            reduce using rule 96 (opSymbol -> LT .)
    NULL            reduce using rule 96 (opSymbol -> LT .)
    ARRAY           reduce using rule 96 (opSymbol -> LT .)
    ID              reduce using rule 96 (opSymbol -> LT .)


state 92

    (97) opSymbol -> GT .

    LPAREN          reduce using rule 97 (opSymbol -> GT .)
    INT             reduce using rule 97 (opSymbol -> GT .)
    VARIABLE        reduce using rule 97 (opSymbol -> GT .)
    FLOAT           reduce using rule 97 (opSymbol -> GT .)
    STRING          reduce using rule 97 (opSymbol -> GT .)
    BOOL            reduce using rule 97 (opSymbol -> GT .)
    NULL            reduce using rule 97 (opSymbol -> GT .)
    ARRAY           reduce using rule 97 (opSymbol -> GT .)
    ID              reduce using rule 97 (opSymbol -> GT .)


state 93

    (98) opSymbol -> LEQ .

    LPAREN          reduce using rule 98 (opSymbol -> LEQ .)
    INT             reduce using rule 98 (opSymbol -> LEQ .)
    VARIABLE        reduce using rule 98 (opSymbol -> LEQ .)
    FLOAT           reduce using rule 98 (opSymbol -> LEQ .)
    STRING          reduce using rule 98 (opSymbol -> LEQ .)
    BOOL            reduce using rule 98 (opSymbol -> LEQ .)
    NULL            reduce using rule 98 (opSymbol -> LEQ .)
    ARRAY           reduce using rule 98 (opSymbol -> LEQ .)
    ID              reduce using rule 98 (opSymbol -> LEQ .)


state 94

    (99) opSymbol -> GEQ .

    LPAREN          reduce using rule 99 (opSymbol -> GEQ .)
    INT             reduce using rule 99 (opSymbol -> GEQ .)
    VARIABLE        reduce using rule 99 (opSymbol -> GEQ .)
    FLOAT           reduce using rule 99 (opSymbol -> GEQ .)
    STRING          reduce using rule 99 (opSymbol -> GEQ .)
    BOOL            reduce using rule 99 (opSymbol -> GEQ .)
    NULL            reduce using rule 99 (opSymbol -> GEQ .)
    ARRAY           reduce using rule 99 (opSymbol -> GEQ .)
    ID              reduce using rule 99 (opSymbol -> GEQ .)


state 95

    (100) opLogic -> AND .

    LPAREN          reduce using rule 100 (opLogic -> AND .)
    INT             reduce using rule 100 (opLogic -> AND .)
    VARIABLE        reduce using rule 100 (opLogic -> AND .)
    FLOAT           reduce using rule 100 (opLogic -> AND .)
    STRING          reduce using rule 100 (opLogic -> AND .)
    BOOL            reduce using rule 100 (opLogic -> AND .)
    NULL            reduce using rule 100 (opLogic -> AND .)
    ARRAY           reduce using rule 100 (opLogic -> AND .)
    ID              reduce using rule 100 (opLogic -> AND .)
    NOT             reduce using rule 100 (opLogic -> AND .)


state 96

    (101) opLogic -> LOGICAL_AND .

    LPAREN          reduce using rule 101 (opLogic -> LOGICAL_AND .)
    INT             reduce using rule 101 (opLogic -> LOGICAL_AND .)
    VARIABLE        reduce using rule 101 (opLogic -> LOGICAL_AND .)
    FLOAT           reduce using rule 101 (opLogic -> LOGICAL_AND .)
    STRING          reduce using rule 101 (opLogic -> LOGICAL_AND .)
    BOOL            reduce using rule 101 (opLogic -> LOGICAL_AND .)
    NULL            reduce using rule 101 (opLogic -> LOGICAL_AND .)
    ARRAY           reduce using rule 101 (opLogic -> LOGICAL_AND .)
    ID              reduce using rule 101 (opLogic -> LOGICAL_AND .)
    NOT             reduce using rule 101 (opLogic -> LOGICAL_AND .)


state 97

    (102) opLogic -> OR .

    LPAREN          reduce using rule 102 (opLogic -> OR .)
    INT             reduce using rule 102 (opLogic -> OR .)
    VARIABLE        reduce using rule 102 (opLogic -> OR .)
    FLOAT           reduce using rule 102 (opLogic -> OR .)
    STRING          reduce using rule 102 (opLogic -> OR .)
    BOOL            reduce using rule 102 (opLogic -> OR .)
    NULL            reduce using rule 102 (opLogic -> OR .)
    ARRAY           reduce using rule 102 (opLogic -> OR .)
    ID              reduce using rule 102 (opLogic -> OR .)
    NOT             reduce using rule 102 (opLogic -> OR .)


state 98

    (103) opLogic -> LOGICAL_OR .

    LPAREN          reduce using rule 103 (opLogic -> LOGICAL_OR .)
    INT             reduce using rule 103 (opLogic -> LOGICAL_OR .)
    VARIABLE        reduce using rule 103 (opLogic -> LOGICAL_OR .)
    FLOAT           reduce using rule 103 (opLogic -> LOGICAL_OR .)
    STRING          reduce using rule 103 (opLogic -> LOGICAL_OR .)
    BOOL            reduce using rule 103 (opLogic -> LOGICAL_OR .)
    NULL            reduce using rule 103 (opLogic -> LOGICAL_OR .)
    ARRAY           reduce using rule 103 (opLogic -> LOGICAL_OR .)
    ID              reduce using rule 103 (opLogic -> LOGICAL_OR .)
    NOT             reduce using rule 103 (opLogic -> LOGICAL_OR .)


state 99

    (32) expresion -> LPAREN . comparacion RPAREN
    (34) expresion -> LPAREN . expresion RPAREN
    (42) operaArit -> LPAREN . operaArit RPAREN
    (87) conditions -> LPAREN . conditions RPAREN
    (37) operador_ternario -> LPAREN . conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN . conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> LPAREN . VARIABLE RPAREN QUESTION COLON valor
    (91) condition -> LPAREN . conditions RPAREN
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    VARIABLE        shift and go to state 105
    LPAREN          shift and go to state 99
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    NOT             shift and go to state 108
    ID              shift and go to state 37

    comparacion                    shift and go to state 100
    expresion                      shift and go to state 101
    operaArit                      shift and go to state 102
    conditions                     shift and go to state 160
    valor                          shift and go to state 104
    operador_ternario              shift and go to state 55
    condition                      shift and go to state 106
    llamadaFuncion                 shift and go to state 107

state 100

    (32) expresion -> LPAREN comparacion . RPAREN
    (31) expresion -> comparacion .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 161
    EQ              reduce using rule 31 (expresion -> comparacion .)
    NEQ             reduce using rule 31 (expresion -> comparacion .)
    STRICTEQ        reduce using rule 31 (expresion -> comparacion .)
    STRICTNEQ       reduce using rule 31 (expresion -> comparacion .)
    LT              reduce using rule 31 (expresion -> comparacion .)
    GT              reduce using rule 31 (expresion -> comparacion .)
    LEQ             reduce using rule 31 (expresion -> comparacion .)
    GEQ             reduce using rule 31 (expresion -> comparacion .)
    AND             reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_AND     reduce using rule 31 (expresion -> comparacion .)
    OR              reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_OR      reduce using rule 31 (expresion -> comparacion .)

  ! RPAREN          [ reduce using rule 31 (expresion -> comparacion .) ]


state 101

    (34) expresion -> LPAREN expresion . RPAREN
    (61) comparacion -> expresion . opSymbol expresion
    (30) expresion -> expresion . opLogic expresion
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR

    RPAREN          shift and go to state 162
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98

    opSymbol                       shift and go to state 85
    opLogic                        shift and go to state 86

state 102

    (42) operaArit -> LPAREN operaArit . RPAREN
    (33) expresion -> operaArit .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 163
    EQ              reduce using rule 33 (expresion -> operaArit .)
    NEQ             reduce using rule 33 (expresion -> operaArit .)
    STRICTEQ        reduce using rule 33 (expresion -> operaArit .)
    STRICTNEQ       reduce using rule 33 (expresion -> operaArit .)
    LT              reduce using rule 33 (expresion -> operaArit .)
    GT              reduce using rule 33 (expresion -> operaArit .)
    LEQ             reduce using rule 33 (expresion -> operaArit .)
    GEQ             reduce using rule 33 (expresion -> operaArit .)
    AND             reduce using rule 33 (expresion -> operaArit .)
    LOGICAL_AND     reduce using rule 33 (expresion -> operaArit .)
    OR              reduce using rule 33 (expresion -> operaArit .)
    LOGICAL_OR      reduce using rule 33 (expresion -> operaArit .)

  ! RPAREN          [ reduce using rule 33 (expresion -> operaArit .) ]


state 103

    (37) operador_ternario -> LPAREN conditions . RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN conditions . RPAREN QUESTION COLON valor

    RPAREN          shift and go to state 164


state 104

    (60) comparacion -> valor . opSymbol valor
    (29) expresion -> valor .
    (40) operaArit -> valor .
    (41) operaArit -> valor . operador operaArit
    (88) condition -> valor .
    (89) condition -> valor . opSymbol valor
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ
    (54) operador -> . PLUS
    (55) operador -> . MINUS
    (56) operador -> . TIMES
    (57) operador -> . DIVIDE
    (58) operador -> . MODULO
    (59) operador -> . POTENCIA

  ! reduce/reduce conflict for RPAREN resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for EQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for NEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRICTEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRICTNEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for GT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for GEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (expresion -> valor .)
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICTEQ resolved as shift
  ! shift/reduce conflict for STRICTNEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
    RPAREN          reduce using rule 29 (expresion -> valor .)
    AND             reduce using rule 29 (expresion -> valor .)
    LOGICAL_AND     reduce using rule 29 (expresion -> valor .)
    OR              reduce using rule 29 (expresion -> valor .)
    LOGICAL_OR      reduce using rule 29 (expresion -> valor .)
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! EQ              [ reduce using rule 29 (expresion -> valor .) ]
  ! NEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! STRICTEQ        [ reduce using rule 29 (expresion -> valor .) ]
  ! STRICTNEQ       [ reduce using rule 29 (expresion -> valor .) ]
  ! LT              [ reduce using rule 29 (expresion -> valor .) ]
  ! GT              [ reduce using rule 29 (expresion -> valor .) ]
  ! LEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! GEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! RPAREN          [ reduce using rule 40 (operaArit -> valor .) ]
  ! EQ              [ reduce using rule 40 (operaArit -> valor .) ]
  ! NEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRICTEQ        [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRICTNEQ       [ reduce using rule 40 (operaArit -> valor .) ]
  ! LT              [ reduce using rule 40 (operaArit -> valor .) ]
  ! GT              [ reduce using rule 40 (operaArit -> valor .) ]
  ! LEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! GEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! AND             [ reduce using rule 40 (operaArit -> valor .) ]
  ! LOGICAL_AND     [ reduce using rule 40 (operaArit -> valor .) ]
  ! OR              [ reduce using rule 40 (operaArit -> valor .) ]
  ! LOGICAL_OR      [ reduce using rule 40 (operaArit -> valor .) ]
  ! AND             [ reduce using rule 88 (condition -> valor .) ]
  ! LOGICAL_AND     [ reduce using rule 88 (condition -> valor .) ]
  ! OR              [ reduce using rule 88 (condition -> valor .) ]
  ! LOGICAL_OR      [ reduce using rule 88 (condition -> valor .) ]
  ! RPAREN          [ reduce using rule 88 (condition -> valor .) ]

    opSymbol                       shift and go to state 165
    operador                       shift and go to state 110

state 105

    (39) operador_ternario -> LPAREN VARIABLE . RPAREN QUESTION COLON valor
    (47) valor -> VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 166
    EQ              reduce using rule 47 (valor -> VARIABLE .)
    NEQ             reduce using rule 47 (valor -> VARIABLE .)
    STRICTEQ        reduce using rule 47 (valor -> VARIABLE .)
    STRICTNEQ       reduce using rule 47 (valor -> VARIABLE .)
    LT              reduce using rule 47 (valor -> VARIABLE .)
    GT              reduce using rule 47 (valor -> VARIABLE .)
    LEQ             reduce using rule 47 (valor -> VARIABLE .)
    GEQ             reduce using rule 47 (valor -> VARIABLE .)
    PLUS            reduce using rule 47 (valor -> VARIABLE .)
    MINUS           reduce using rule 47 (valor -> VARIABLE .)
    TIMES           reduce using rule 47 (valor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (valor -> VARIABLE .)
    MODULO          reduce using rule 47 (valor -> VARIABLE .)
    POTENCIA        reduce using rule 47 (valor -> VARIABLE .)
    AND             reduce using rule 47 (valor -> VARIABLE .)
    LOGICAL_AND     reduce using rule 47 (valor -> VARIABLE .)
    OR              reduce using rule 47 (valor -> VARIABLE .)
    LOGICAL_OR      reduce using rule 47 (valor -> VARIABLE .)
    COMMA           reduce using rule 47 (valor -> VARIABLE .)

  ! RPAREN          [ reduce using rule 47 (valor -> VARIABLE .) ]


state 106

    (85) conditions -> condition .
    (86) conditions -> condition . opLogic conditions
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR

    RPAREN          reduce using rule 85 (conditions -> condition .)
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98

    opLogic                        shift and go to state 167

state 107

    (53) valor -> llamadaFuncion .

    EQ              reduce using rule 53 (valor -> llamadaFuncion .)
    NEQ             reduce using rule 53 (valor -> llamadaFuncion .)
    STRICTEQ        reduce using rule 53 (valor -> llamadaFuncion .)
    STRICTNEQ       reduce using rule 53 (valor -> llamadaFuncion .)
    LT              reduce using rule 53 (valor -> llamadaFuncion .)
    GT              reduce using rule 53 (valor -> llamadaFuncion .)
    LEQ             reduce using rule 53 (valor -> llamadaFuncion .)
    GEQ             reduce using rule 53 (valor -> llamadaFuncion .)
    PLUS            reduce using rule 53 (valor -> llamadaFuncion .)
    MINUS           reduce using rule 53 (valor -> llamadaFuncion .)
    TIMES           reduce using rule 53 (valor -> llamadaFuncion .)
    DIVIDE          reduce using rule 53 (valor -> llamadaFuncion .)
    MODULO          reduce using rule 53 (valor -> llamadaFuncion .)
    POTENCIA        reduce using rule 53 (valor -> llamadaFuncion .)
    RPAREN          reduce using rule 53 (valor -> llamadaFuncion .)
    AND             reduce using rule 53 (valor -> llamadaFuncion .)
    LOGICAL_AND     reduce using rule 53 (valor -> llamadaFuncion .)
    OR              reduce using rule 53 (valor -> llamadaFuncion .)
    LOGICAL_OR      reduce using rule 53 (valor -> llamadaFuncion .)
    COMMA           reduce using rule 53 (valor -> llamadaFuncion .)
    SEMICOLON       reduce using rule 53 (valor -> llamadaFuncion .)
    VARIABLE        reduce using rule 53 (valor -> llamadaFuncion .)
    ECHO            reduce using rule 53 (valor -> llamadaFuncion .)
    PRINT           reduce using rule 53 (valor -> llamadaFuncion .)
    TRY             reduce using rule 53 (valor -> llamadaFuncion .)
    FUNCTION        reduce using rule 53 (valor -> llamadaFuncion .)
    RETURN          reduce using rule 53 (valor -> llamadaFuncion .)
    ID              reduce using rule 53 (valor -> llamadaFuncion .)
    CLASS           reduce using rule 53 (valor -> llamadaFuncion .)
    INTERFACE       reduce using rule 53 (valor -> llamadaFuncion .)
    INCLUDE         reduce using rule 53 (valor -> llamadaFuncion .)
    NAMESPACE       reduce using rule 53 (valor -> llamadaFuncion .)
    THROW           reduce using rule 53 (valor -> llamadaFuncion .)
    CONST           reduce using rule 53 (valor -> llamadaFuncion .)
    THIS            reduce using rule 53 (valor -> llamadaFuncion .)
    INT             reduce using rule 53 (valor -> llamadaFuncion .)
    FLOAT           reduce using rule 53 (valor -> llamadaFuncion .)
    STRING          reduce using rule 53 (valor -> llamadaFuncion .)
    BOOL            reduce using rule 53 (valor -> llamadaFuncion .)
    NULL            reduce using rule 53 (valor -> llamadaFuncion .)
    ARRAY           reduce using rule 53 (valor -> llamadaFuncion .)
    LPAREN          reduce using rule 53 (valor -> llamadaFuncion .)
    ABSTRACT        reduce using rule 53 (valor -> llamadaFuncion .)
    PRIVATE         reduce using rule 53 (valor -> llamadaFuncion .)
    PROTECTED       reduce using rule 53 (valor -> llamadaFuncion .)
    PUBLIC          reduce using rule 53 (valor -> llamadaFuncion .)
    STATIC          reduce using rule 53 (valor -> llamadaFuncion .)
    FINAL           reduce using rule 53 (valor -> llamadaFuncion .)
    IF              reduce using rule 53 (valor -> llamadaFuncion .)
    WHILE           reduce using rule 53 (valor -> llamadaFuncion .)
    DO              reduce using rule 53 (valor -> llamadaFuncion .)
    SWITCH          reduce using rule 53 (valor -> llamadaFuncion .)
    FOREACH         reduce using rule 53 (valor -> llamadaFuncion .)
    FOR             reduce using rule 53 (valor -> llamadaFuncion .)
    CLOSETAG        reduce using rule 53 (valor -> llamadaFuncion .)
    RBRACE          reduce using rule 53 (valor -> llamadaFuncion .)
    BREAK           reduce using rule 53 (valor -> llamadaFuncion .)
    ENDSWITCH       reduce using rule 53 (valor -> llamadaFuncion .)
    CASE            reduce using rule 53 (valor -> llamadaFuncion .)
    DEFAULT         reduce using rule 53 (valor -> llamadaFuncion .)
    ARROWMAP        reduce using rule 53 (valor -> llamadaFuncion .)
    RBRACKET        reduce using rule 53 (valor -> llamadaFuncion .)
    COLON           reduce using rule 53 (valor -> llamadaFuncion .)


state 108

    (90) condition -> NOT . condition
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    NOT             shift and go to state 108
    LPAREN          shift and go to state 170
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    condition                      shift and go to state 168
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 109

    (60) comparacion -> valor opSymbol . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 171
    llamadaFuncion                 shift and go to state 107

state 110

    (41) operaArit -> valor operador . operaArit
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 172
    operaArit                      shift and go to state 173
    llamadaFuncion                 shift and go to state 107

state 111

    (54) operador -> PLUS .

    LPAREN          reduce using rule 54 (operador -> PLUS .)
    INT             reduce using rule 54 (operador -> PLUS .)
    VARIABLE        reduce using rule 54 (operador -> PLUS .)
    FLOAT           reduce using rule 54 (operador -> PLUS .)
    STRING          reduce using rule 54 (operador -> PLUS .)
    BOOL            reduce using rule 54 (operador -> PLUS .)
    NULL            reduce using rule 54 (operador -> PLUS .)
    ARRAY           reduce using rule 54 (operador -> PLUS .)
    ID              reduce using rule 54 (operador -> PLUS .)


state 112

    (55) operador -> MINUS .

    LPAREN          reduce using rule 55 (operador -> MINUS .)
    INT             reduce using rule 55 (operador -> MINUS .)
    VARIABLE        reduce using rule 55 (operador -> MINUS .)
    FLOAT           reduce using rule 55 (operador -> MINUS .)
    STRING          reduce using rule 55 (operador -> MINUS .)
    BOOL            reduce using rule 55 (operador -> MINUS .)
    NULL            reduce using rule 55 (operador -> MINUS .)
    ARRAY           reduce using rule 55 (operador -> MINUS .)
    ID              reduce using rule 55 (operador -> MINUS .)


state 113

    (56) operador -> TIMES .

    LPAREN          reduce using rule 56 (operador -> TIMES .)
    INT             reduce using rule 56 (operador -> TIMES .)
    VARIABLE        reduce using rule 56 (operador -> TIMES .)
    FLOAT           reduce using rule 56 (operador -> TIMES .)
    STRING          reduce using rule 56 (operador -> TIMES .)
    BOOL            reduce using rule 56 (operador -> TIMES .)
    NULL            reduce using rule 56 (operador -> TIMES .)
    ARRAY           reduce using rule 56 (operador -> TIMES .)
    ID              reduce using rule 56 (operador -> TIMES .)


state 114

    (57) operador -> DIVIDE .

    LPAREN          reduce using rule 57 (operador -> DIVIDE .)
    INT             reduce using rule 57 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 57 (operador -> DIVIDE .)
    FLOAT           reduce using rule 57 (operador -> DIVIDE .)
    STRING          reduce using rule 57 (operador -> DIVIDE .)
    BOOL            reduce using rule 57 (operador -> DIVIDE .)
    NULL            reduce using rule 57 (operador -> DIVIDE .)
    ARRAY           reduce using rule 57 (operador -> DIVIDE .)
    ID              reduce using rule 57 (operador -> DIVIDE .)


state 115

    (58) operador -> MODULO .

    LPAREN          reduce using rule 58 (operador -> MODULO .)
    INT             reduce using rule 58 (operador -> MODULO .)
    VARIABLE        reduce using rule 58 (operador -> MODULO .)
    FLOAT           reduce using rule 58 (operador -> MODULO .)
    STRING          reduce using rule 58 (operador -> MODULO .)
    BOOL            reduce using rule 58 (operador -> MODULO .)
    NULL            reduce using rule 58 (operador -> MODULO .)
    ARRAY           reduce using rule 58 (operador -> MODULO .)
    ID              reduce using rule 58 (operador -> MODULO .)


state 116

    (59) operador -> POTENCIA .

    LPAREN          reduce using rule 59 (operador -> POTENCIA .)
    INT             reduce using rule 59 (operador -> POTENCIA .)
    VARIABLE        reduce using rule 59 (operador -> POTENCIA .)
    FLOAT           reduce using rule 59 (operador -> POTENCIA .)
    STRING          reduce using rule 59 (operador -> POTENCIA .)
    BOOL            reduce using rule 59 (operador -> POTENCIA .)
    NULL            reduce using rule 59 (operador -> POTENCIA .)
    ARRAY           reduce using rule 59 (operador -> POTENCIA .)
    ID              reduce using rule 59 (operador -> POTENCIA .)


state 117

    (62) impresion -> ECHO imprimir . SEMICOLON

    SEMICOLON       shift and go to state 175


state 118

    (64) imprimir -> LPAREN . repiteValores RPAREN
    (65) imprimir -> LPAREN . RPAREN
    (37) operador_ternario -> LPAREN . conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN . conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> LPAREN . VARIABLE RPAREN QUESTION COLON valor
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 178
    VARIABLE        shift and go to state 105
    LPAREN          shift and go to state 176
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    NOT             shift and go to state 108
    ID              shift and go to state 37

    repiteValores                  shift and go to state 177
    conditions                     shift and go to state 103
    valor                          shift and go to state 179
    condition                      shift and go to state 106
    llamadaFuncion                 shift and go to state 107

state 119

    (66) imprimir -> repiteValores .

    SEMICOLON       reduce using rule 66 (imprimir -> repiteValores .)


state 120

    (67) imprimir -> operador_ternario .

    SEMICOLON       reduce using rule 67 (imprimir -> operador_ternario .)


state 121

    (68) imprimir -> empty .

    SEMICOLON       reduce using rule 68 (imprimir -> empty .)


state 122

    (69) repiteValores -> valor .
    (70) repiteValores -> valor . COMMA repiteValores

    SEMICOLON       reduce using rule 69 (repiteValores -> valor .)
    RPAREN          reduce using rule 69 (repiteValores -> valor .)
    RBRACKET        reduce using rule 69 (repiteValores -> valor .)
    COMMA           shift and go to state 180


state 123

    (47) valor -> VARIABLE .

    COMMA           reduce using rule 47 (valor -> VARIABLE .)
    SEMICOLON       reduce using rule 47 (valor -> VARIABLE .)
    EQ              reduce using rule 47 (valor -> VARIABLE .)
    NEQ             reduce using rule 47 (valor -> VARIABLE .)
    STRICTEQ        reduce using rule 47 (valor -> VARIABLE .)
    STRICTNEQ       reduce using rule 47 (valor -> VARIABLE .)
    LT              reduce using rule 47 (valor -> VARIABLE .)
    GT              reduce using rule 47 (valor -> VARIABLE .)
    LEQ             reduce using rule 47 (valor -> VARIABLE .)
    GEQ             reduce using rule 47 (valor -> VARIABLE .)
    PLUS            reduce using rule 47 (valor -> VARIABLE .)
    MINUS           reduce using rule 47 (valor -> VARIABLE .)
    TIMES           reduce using rule 47 (valor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (valor -> VARIABLE .)
    MODULO          reduce using rule 47 (valor -> VARIABLE .)
    POTENCIA        reduce using rule 47 (valor -> VARIABLE .)
    AND             reduce using rule 47 (valor -> VARIABLE .)
    LOGICAL_AND     reduce using rule 47 (valor -> VARIABLE .)
    OR              reduce using rule 47 (valor -> VARIABLE .)
    LOGICAL_OR      reduce using rule 47 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 47 (valor -> VARIABLE .)
    ECHO            reduce using rule 47 (valor -> VARIABLE .)
    PRINT           reduce using rule 47 (valor -> VARIABLE .)
    TRY             reduce using rule 47 (valor -> VARIABLE .)
    FUNCTION        reduce using rule 47 (valor -> VARIABLE .)
    RETURN          reduce using rule 47 (valor -> VARIABLE .)
    ID              reduce using rule 47 (valor -> VARIABLE .)
    CLASS           reduce using rule 47 (valor -> VARIABLE .)
    INTERFACE       reduce using rule 47 (valor -> VARIABLE .)
    INCLUDE         reduce using rule 47 (valor -> VARIABLE .)
    NAMESPACE       reduce using rule 47 (valor -> VARIABLE .)
    THROW           reduce using rule 47 (valor -> VARIABLE .)
    CONST           reduce using rule 47 (valor -> VARIABLE .)
    THIS            reduce using rule 47 (valor -> VARIABLE .)
    INT             reduce using rule 47 (valor -> VARIABLE .)
    FLOAT           reduce using rule 47 (valor -> VARIABLE .)
    STRING          reduce using rule 47 (valor -> VARIABLE .)
    BOOL            reduce using rule 47 (valor -> VARIABLE .)
    NULL            reduce using rule 47 (valor -> VARIABLE .)
    ARRAY           reduce using rule 47 (valor -> VARIABLE .)
    LPAREN          reduce using rule 47 (valor -> VARIABLE .)
    ABSTRACT        reduce using rule 47 (valor -> VARIABLE .)
    PRIVATE         reduce using rule 47 (valor -> VARIABLE .)
    PROTECTED       reduce using rule 47 (valor -> VARIABLE .)
    PUBLIC          reduce using rule 47 (valor -> VARIABLE .)
    STATIC          reduce using rule 47 (valor -> VARIABLE .)
    FINAL           reduce using rule 47 (valor -> VARIABLE .)
    IF              reduce using rule 47 (valor -> VARIABLE .)
    WHILE           reduce using rule 47 (valor -> VARIABLE .)
    DO              reduce using rule 47 (valor -> VARIABLE .)
    SWITCH          reduce using rule 47 (valor -> VARIABLE .)
    FOREACH         reduce using rule 47 (valor -> VARIABLE .)
    FOR             reduce using rule 47 (valor -> VARIABLE .)
    CLOSETAG        reduce using rule 47 (valor -> VARIABLE .)
    RPAREN          reduce using rule 47 (valor -> VARIABLE .)
    RBRACE          reduce using rule 47 (valor -> VARIABLE .)
    BREAK           reduce using rule 47 (valor -> VARIABLE .)
    ENDSWITCH       reduce using rule 47 (valor -> VARIABLE .)
    CASE            reduce using rule 47 (valor -> VARIABLE .)
    DEFAULT         reduce using rule 47 (valor -> VARIABLE .)
    ARROWMAP        reduce using rule 47 (valor -> VARIABLE .)
    RBRACKET        reduce using rule 47 (valor -> VARIABLE .)
    COLON           reduce using rule 47 (valor -> VARIABLE .)


state 124

    (63) impresion -> PRINT imprimir . SEMICOLON

    SEMICOLON       shift and go to state 181


state 125

    (163) try -> TRY LBRACE . body RBRACE catchs
    (164) try -> TRY LBRACE . body RBRACE catchs FINALLY LBRACE body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 182
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 126

    (169) funcionDeclaration -> FUNCTION ID . LPAREN argumentos RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 186


state 127

    (170) llamadaFuncion -> ID LPAREN . argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> ID LPAREN . argumentos RPAREN
    (172) llamadaFuncion -> ID LPAREN . RPAREN SEMICOLON
    (173) llamadaFuncion -> ID LPAREN . RPAREN
    (147) argumentos -> . argumento
    (148) argumentos -> . argumento COMMA argumentos
    (149) argumentos -> . empty
    (150) argumento -> . type VARIABLE
    (151) argumento -> . VARIABLE EQUALS valor
    (152) argumento -> . type VARIABLE EQUALS valor
    (153) argumento -> . operaArit
    (154) argumento -> . valor
    (155) argumento -> . llamadaFuncion
    (156) argumento -> . VARIABLE
    (71) empty -> .
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 188
    VARIABLE        shift and go to state 192
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

  ! RPAREN          [ reduce using rule 71 (empty -> .) ]

    argumentos                     shift and go to state 187
    argumento                      shift and go to state 189
    empty                          shift and go to state 190
    type                           shift and go to state 191
    valor                          shift and go to state 193
    operaArit                      shift and go to state 194
    llamadaFuncion                 shift and go to state 195

state 128

    (26) returnStatement -> RETURN expresion . SEMICOLON
    (30) expresion -> expresion . opLogic expresion
    (61) comparacion -> expresion . opSymbol expresion
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

    SEMICOLON       shift and go to state 202
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

    opLogic                        shift and go to state 86
    opSymbol                       shift and go to state 85

state 129

    (27) returnStatement -> RETURN SEMICOLON .

    VARIABLE        reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    ECHO            reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    TRY             reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    FUNCTION        reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    ID              reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    CLASS           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    INTERFACE       reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    INCLUDE         reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    NAMESPACE       reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    THROW           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    CONST           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    THIS            reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    INT             reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    STRING          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    NULL            reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    ARRAY           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    ABSTRACT        reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    PRIVATE         reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    PROTECTED       reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    PUBLIC          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    STATIC          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    FINAL           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    IF              reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    DO              reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    SWITCH          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    FOREACH         reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    FOR             reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    CLOSETAG        reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    ENDSWITCH       reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    CASE            reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)
    DEFAULT         reduce using rule 27 (returnStatement -> RETURN SEMICOLON .)


state 130

    (29) expresion -> valor .
    (60) comparacion -> valor . opSymbol valor
    (40) operaArit -> valor .
    (41) operaArit -> valor . operador operaArit
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ
    (54) operador -> . PLUS
    (55) operador -> . MINUS
    (56) operador -> . TIMES
    (57) operador -> . DIVIDE
    (58) operador -> . MODULO
    (59) operador -> . POTENCIA

  ! reduce/reduce conflict for SEMICOLON resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for EQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for NEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRICTEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRICTNEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for GT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for GEQ resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for ECHO resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for TRY resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for ID resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for CLASS resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for INTERFACE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for INCLUDE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for NAMESPACE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for THROW resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for CONST resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for THIS resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for INT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for FLOAT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STRING resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for BOOL resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for NULL resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for ARRAY resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for LPAREN resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for ABSTRACT resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for PRIVATE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for STATIC resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for FINAL resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for IF resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for WHILE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for DO resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for SWITCH resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for FOREACH resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for FOR resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for CLOSETAG resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for RBRACE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for BREAK resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for ENDSWITCH resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for CASE resolved using rule 29 (expresion -> valor .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 29 (expresion -> valor .)
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICTEQ resolved as shift
  ! shift/reduce conflict for STRICTNEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
    SEMICOLON       reduce using rule 29 (expresion -> valor .)
    AND             reduce using rule 29 (expresion -> valor .)
    LOGICAL_AND     reduce using rule 29 (expresion -> valor .)
    OR              reduce using rule 29 (expresion -> valor .)
    LOGICAL_OR      reduce using rule 29 (expresion -> valor .)
    VARIABLE        reduce using rule 29 (expresion -> valor .)
    ECHO            reduce using rule 29 (expresion -> valor .)
    PRINT           reduce using rule 29 (expresion -> valor .)
    TRY             reduce using rule 29 (expresion -> valor .)
    FUNCTION        reduce using rule 29 (expresion -> valor .)
    RETURN          reduce using rule 29 (expresion -> valor .)
    ID              reduce using rule 29 (expresion -> valor .)
    CLASS           reduce using rule 29 (expresion -> valor .)
    INTERFACE       reduce using rule 29 (expresion -> valor .)
    INCLUDE         reduce using rule 29 (expresion -> valor .)
    NAMESPACE       reduce using rule 29 (expresion -> valor .)
    THROW           reduce using rule 29 (expresion -> valor .)
    CONST           reduce using rule 29 (expresion -> valor .)
    THIS            reduce using rule 29 (expresion -> valor .)
    INT             reduce using rule 29 (expresion -> valor .)
    FLOAT           reduce using rule 29 (expresion -> valor .)
    STRING          reduce using rule 29 (expresion -> valor .)
    BOOL            reduce using rule 29 (expresion -> valor .)
    NULL            reduce using rule 29 (expresion -> valor .)
    ARRAY           reduce using rule 29 (expresion -> valor .)
    LPAREN          reduce using rule 29 (expresion -> valor .)
    ABSTRACT        reduce using rule 29 (expresion -> valor .)
    PRIVATE         reduce using rule 29 (expresion -> valor .)
    PROTECTED       reduce using rule 29 (expresion -> valor .)
    PUBLIC          reduce using rule 29 (expresion -> valor .)
    STATIC          reduce using rule 29 (expresion -> valor .)
    FINAL           reduce using rule 29 (expresion -> valor .)
    IF              reduce using rule 29 (expresion -> valor .)
    WHILE           reduce using rule 29 (expresion -> valor .)
    DO              reduce using rule 29 (expresion -> valor .)
    SWITCH          reduce using rule 29 (expresion -> valor .)
    FOREACH         reduce using rule 29 (expresion -> valor .)
    FOR             reduce using rule 29 (expresion -> valor .)
    CLOSETAG        reduce using rule 29 (expresion -> valor .)
    RPAREN          reduce using rule 29 (expresion -> valor .)
    RBRACE          reduce using rule 29 (expresion -> valor .)
    BREAK           reduce using rule 29 (expresion -> valor .)
    ENDSWITCH       reduce using rule 29 (expresion -> valor .)
    CASE            reduce using rule 29 (expresion -> valor .)
    DEFAULT         reduce using rule 29 (expresion -> valor .)
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! EQ              [ reduce using rule 29 (expresion -> valor .) ]
  ! NEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! STRICTEQ        [ reduce using rule 29 (expresion -> valor .) ]
  ! STRICTNEQ       [ reduce using rule 29 (expresion -> valor .) ]
  ! LT              [ reduce using rule 29 (expresion -> valor .) ]
  ! GT              [ reduce using rule 29 (expresion -> valor .) ]
  ! LEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! GEQ             [ reduce using rule 29 (expresion -> valor .) ]
  ! SEMICOLON       [ reduce using rule 40 (operaArit -> valor .) ]
  ! AND             [ reduce using rule 40 (operaArit -> valor .) ]
  ! LOGICAL_AND     [ reduce using rule 40 (operaArit -> valor .) ]
  ! OR              [ reduce using rule 40 (operaArit -> valor .) ]
  ! LOGICAL_OR      [ reduce using rule 40 (operaArit -> valor .) ]
  ! EQ              [ reduce using rule 40 (operaArit -> valor .) ]
  ! NEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRICTEQ        [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRICTNEQ       [ reduce using rule 40 (operaArit -> valor .) ]
  ! LT              [ reduce using rule 40 (operaArit -> valor .) ]
  ! GT              [ reduce using rule 40 (operaArit -> valor .) ]
  ! LEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! GEQ             [ reduce using rule 40 (operaArit -> valor .) ]
  ! VARIABLE        [ reduce using rule 40 (operaArit -> valor .) ]
  ! ECHO            [ reduce using rule 40 (operaArit -> valor .) ]
  ! PRINT           [ reduce using rule 40 (operaArit -> valor .) ]
  ! TRY             [ reduce using rule 40 (operaArit -> valor .) ]
  ! FUNCTION        [ reduce using rule 40 (operaArit -> valor .) ]
  ! RETURN          [ reduce using rule 40 (operaArit -> valor .) ]
  ! ID              [ reduce using rule 40 (operaArit -> valor .) ]
  ! CLASS           [ reduce using rule 40 (operaArit -> valor .) ]
  ! INTERFACE       [ reduce using rule 40 (operaArit -> valor .) ]
  ! INCLUDE         [ reduce using rule 40 (operaArit -> valor .) ]
  ! NAMESPACE       [ reduce using rule 40 (operaArit -> valor .) ]
  ! THROW           [ reduce using rule 40 (operaArit -> valor .) ]
  ! CONST           [ reduce using rule 40 (operaArit -> valor .) ]
  ! THIS            [ reduce using rule 40 (operaArit -> valor .) ]
  ! INT             [ reduce using rule 40 (operaArit -> valor .) ]
  ! FLOAT           [ reduce using rule 40 (operaArit -> valor .) ]
  ! STRING          [ reduce using rule 40 (operaArit -> valor .) ]
  ! BOOL            [ reduce using rule 40 (operaArit -> valor .) ]
  ! NULL            [ reduce using rule 40 (operaArit -> valor .) ]
  ! ARRAY           [ reduce using rule 40 (operaArit -> valor .) ]
  ! LPAREN          [ reduce using rule 40 (operaArit -> valor .) ]
  ! ABSTRACT        [ reduce using rule 40 (operaArit -> valor .) ]
  ! PRIVATE         [ reduce using rule 40 (operaArit -> valor .) ]
  ! PROTECTED       [ reduce using rule 40 (operaArit -> valor .) ]
  ! PUBLIC          [ reduce using rule 40 (operaArit -> valor .) ]
  ! STATIC          [ reduce using rule 40 (operaArit -> valor .) ]
  ! FINAL           [ reduce using rule 40 (operaArit -> valor .) ]
  ! IF              [ reduce using rule 40 (operaArit -> valor .) ]
  ! WHILE           [ reduce using rule 40 (operaArit -> valor .) ]
  ! DO              [ reduce using rule 40 (operaArit -> valor .) ]
  ! SWITCH          [ reduce using rule 40 (operaArit -> valor .) ]
  ! FOREACH         [ reduce using rule 40 (operaArit -> valor .) ]
  ! FOR             [ reduce using rule 40 (operaArit -> valor .) ]
  ! CLOSETAG        [ reduce using rule 40 (operaArit -> valor .) ]
  ! RPAREN          [ reduce using rule 40 (operaArit -> valor .) ]
  ! RBRACE          [ reduce using rule 40 (operaArit -> valor .) ]
  ! BREAK           [ reduce using rule 40 (operaArit -> valor .) ]
  ! ENDSWITCH       [ reduce using rule 40 (operaArit -> valor .) ]
  ! CASE            [ reduce using rule 40 (operaArit -> valor .) ]
  ! DEFAULT         [ reduce using rule 40 (operaArit -> valor .) ]

    opSymbol                       shift and go to state 109
    operador                       shift and go to state 110

state 131

    (31) expresion -> comparacion .

    SEMICOLON       reduce using rule 31 (expresion -> comparacion .)
    AND             reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_AND     reduce using rule 31 (expresion -> comparacion .)
    OR              reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_OR      reduce using rule 31 (expresion -> comparacion .)
    EQ              reduce using rule 31 (expresion -> comparacion .)
    NEQ             reduce using rule 31 (expresion -> comparacion .)
    STRICTEQ        reduce using rule 31 (expresion -> comparacion .)
    STRICTNEQ       reduce using rule 31 (expresion -> comparacion .)
    LT              reduce using rule 31 (expresion -> comparacion .)
    GT              reduce using rule 31 (expresion -> comparacion .)
    LEQ             reduce using rule 31 (expresion -> comparacion .)
    GEQ             reduce using rule 31 (expresion -> comparacion .)
    VARIABLE        reduce using rule 31 (expresion -> comparacion .)
    ECHO            reduce using rule 31 (expresion -> comparacion .)
    PRINT           reduce using rule 31 (expresion -> comparacion .)
    TRY             reduce using rule 31 (expresion -> comparacion .)
    FUNCTION        reduce using rule 31 (expresion -> comparacion .)
    RETURN          reduce using rule 31 (expresion -> comparacion .)
    ID              reduce using rule 31 (expresion -> comparacion .)
    CLASS           reduce using rule 31 (expresion -> comparacion .)
    INTERFACE       reduce using rule 31 (expresion -> comparacion .)
    INCLUDE         reduce using rule 31 (expresion -> comparacion .)
    NAMESPACE       reduce using rule 31 (expresion -> comparacion .)
    THROW           reduce using rule 31 (expresion -> comparacion .)
    CONST           reduce using rule 31 (expresion -> comparacion .)
    THIS            reduce using rule 31 (expresion -> comparacion .)
    INT             reduce using rule 31 (expresion -> comparacion .)
    FLOAT           reduce using rule 31 (expresion -> comparacion .)
    STRING          reduce using rule 31 (expresion -> comparacion .)
    BOOL            reduce using rule 31 (expresion -> comparacion .)
    NULL            reduce using rule 31 (expresion -> comparacion .)
    ARRAY           reduce using rule 31 (expresion -> comparacion .)
    LPAREN          reduce using rule 31 (expresion -> comparacion .)
    ABSTRACT        reduce using rule 31 (expresion -> comparacion .)
    PRIVATE         reduce using rule 31 (expresion -> comparacion .)
    PROTECTED       reduce using rule 31 (expresion -> comparacion .)
    PUBLIC          reduce using rule 31 (expresion -> comparacion .)
    STATIC          reduce using rule 31 (expresion -> comparacion .)
    FINAL           reduce using rule 31 (expresion -> comparacion .)
    IF              reduce using rule 31 (expresion -> comparacion .)
    WHILE           reduce using rule 31 (expresion -> comparacion .)
    DO              reduce using rule 31 (expresion -> comparacion .)
    SWITCH          reduce using rule 31 (expresion -> comparacion .)
    FOREACH         reduce using rule 31 (expresion -> comparacion .)
    FOR             reduce using rule 31 (expresion -> comparacion .)
    CLOSETAG        reduce using rule 31 (expresion -> comparacion .)
    RPAREN          reduce using rule 31 (expresion -> comparacion .)
    RBRACE          reduce using rule 31 (expresion -> comparacion .)
    BREAK           reduce using rule 31 (expresion -> comparacion .)
    ENDSWITCH       reduce using rule 31 (expresion -> comparacion .)
    CASE            reduce using rule 31 (expresion -> comparacion .)
    DEFAULT         reduce using rule 31 (expresion -> comparacion .)


state 132

    (174) classDeclarate -> CLASS ID . LBRACE classBody RBRACE
    (175) classDeclarate -> CLASS ID . EXTENDS ID LBRACE classBody RBRACE
    (185) classInterface -> CLASS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> CLASS ID . EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    LBRACE          shift and go to state 203
    EXTENDS         shift and go to state 204
    IMPLEMENTS      shift and go to state 205


state 133

    (176) classDeclarate -> data CLASS . ID LBRACE classBody RBRACE
    (187) classInterface -> data CLASS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> data CLASS . ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 206


state 134

    (197) interface -> INTERFACE ID . LBRACE classBody RBRACE

    LBRACE          shift and go to state 207


state 135

    (198) includes -> INCLUDE STRING . SEMICOLON
    (199) includes -> INCLUDE STRING . DOT STRING SEMICOLON

    SEMICOLON       shift and go to state 208
    DOT             shift and go to state 209


state 136

    (200) namespace -> NAMESPACE ID . SEMICOLON

    SEMICOLON       shift and go to state 210


state 137

    (202) throw -> THROW NEW . EXCEPTION LPAREN repiteValores RPAREN SEMICOLON

    EXCEPTION       shift and go to state 211


state 138

    (203) throw -> THROW valor . SEMICOLON

    SEMICOLON       shift and go to state 212


state 139

    (205) constdeclaration -> CONST ID . EQUALS valor SEMICOLON

    EQUALS          shift and go to state 213


state 140

    (206) thisdeclaration -> THIS ARROW . ID SEMICOLON
    (207) thisdeclaration -> THIS ARROW . ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 214


state 141

    (80) if -> IF LPAREN . conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> IF LPAREN . conditions RPAREN body
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 176
    NOT             shift and go to state 108
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    conditions                     shift and go to state 215
    condition                      shift and go to state 106
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 142

    (112) while -> WHILE LPAREN . condition RPAREN LBRACE body RBRACE
    (113) while -> WHILE LPAREN . condition RPAREN LBRACE RBRACE
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    NOT             shift and go to state 108
    LPAREN          shift and go to state 170
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    condition                      shift and go to state 216
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 143

    (114) dowhile -> DO LBRACE . body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 217
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 144

    (115) switch -> SWITCH LPAREN . valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> SWITCH LPAREN . valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 218
    llamadaFuncion                 shift and go to state 107

state 145

    (123) foreach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 219


state 146

    (109) forStatement -> FOR LPAREN . forcondition RPAREN LBRACE body RBRACE
    (110) forcondition -> . VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> . VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    VARIABLE        shift and go to state 221

    forcondition                   shift and go to state 220

state 147

    (28) asignacion -> VARIABLE EQUALS expresion . SEMICOLON
    (30) expresion -> expresion . opLogic expresion
    (61) comparacion -> expresion . opSymbol expresion
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

    SEMICOLON       shift and go to state 222
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

    opLogic                        shift and go to state 86
    opSymbol                       shift and go to state 85

state 148

    (36) asignacion_fgets -> VARIABLE EQUALS FGETS . LPAREN STDIN RPAREN SEMICOLON

    LPAREN          shift and go to state 223


state 149

    (201) anonymousFunction -> VARIABLE EQUALS FN . LPAREN RPAREN ARROWMAP comparacion SEMICOLON

    LPAREN          shift and go to state 224


state 150

    (130) array -> VARIABLE EQUALS arrays . SEMICOLON

    SEMICOLON       shift and go to state 225


state 151

    (131) array -> VARIABLE EQUALS LBRACKET . arrayAnidado RBRACKET SEMICOLON
    (137) map -> VARIABLE EQUALS LBRACKET . maps RBRACKET SEMICOLON
    (134) arrays -> LBRACKET . repiteValores RBRACKET
    (135) arrayAnidado -> . arrays
    (136) arrayAnidado -> . arrays COMMA arrayAnidado
    (139) maps -> . mapArrow
    (140) maps -> . mapArrow COMMA maps
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (134) arrays -> . LBRACKET repiteValores RBRACKET
    (141) mapArrow -> . valor ARROWMAP valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LBRACKET        shift and go to state 226
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    arrayAnidado                   shift and go to state 227
    maps                           shift and go to state 228
    repiteValores                  shift and go to state 229
    arrays                         shift and go to state 230
    mapArrow                       shift and go to state 231
    valor                          shift and go to state 232
    llamadaFuncion                 shift and go to state 107

state 152

    (132) array -> VARIABLE EQUALS ARRAY . LPAREN repiteValores RPAREN SEMICOLON
    (138) map -> VARIABLE EQUALS ARRAY . LPAREN maps RPAREN SEMICOLON
    (52) valor -> ARRAY .

    LPAREN          shift and go to state 233
    EQ              reduce using rule 52 (valor -> ARRAY .)
    NEQ             reduce using rule 52 (valor -> ARRAY .)
    STRICTEQ        reduce using rule 52 (valor -> ARRAY .)
    STRICTNEQ       reduce using rule 52 (valor -> ARRAY .)
    LT              reduce using rule 52 (valor -> ARRAY .)
    GT              reduce using rule 52 (valor -> ARRAY .)
    LEQ             reduce using rule 52 (valor -> ARRAY .)
    GEQ             reduce using rule 52 (valor -> ARRAY .)
    PLUS            reduce using rule 52 (valor -> ARRAY .)
    MINUS           reduce using rule 52 (valor -> ARRAY .)
    TIMES           reduce using rule 52 (valor -> ARRAY .)
    DIVIDE          reduce using rule 52 (valor -> ARRAY .)
    MODULO          reduce using rule 52 (valor -> ARRAY .)
    POTENCIA        reduce using rule 52 (valor -> ARRAY .)
    SEMICOLON       reduce using rule 52 (valor -> ARRAY .)
    AND             reduce using rule 52 (valor -> ARRAY .)
    LOGICAL_AND     reduce using rule 52 (valor -> ARRAY .)
    OR              reduce using rule 52 (valor -> ARRAY .)
    LOGICAL_OR      reduce using rule 52 (valor -> ARRAY .)


state 153

    (168) objeto -> VARIABLE ARROW ID . LPAREN argumentos RPAREN SEMICOLON

    LPAREN          shift and go to state 234


state 154

    (204) instance -> VARIABLE INSTANCEOF ID .

    VARIABLE        reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    ECHO            reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    PRINT           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    TRY             reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    FUNCTION        reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    RETURN          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    ID              reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    CLASS           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    INTERFACE       reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    INCLUDE         reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    NAMESPACE       reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    THROW           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    CONST           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    THIS            reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    INT             reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    FLOAT           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    STRING          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    BOOL            reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    NULL            reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    ARRAY           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    LPAREN          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    ABSTRACT        reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    PRIVATE         reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    PROTECTED       reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    PUBLIC          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    STATIC          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    FINAL           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    IF              reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    WHILE           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    DO              reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    SWITCH          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    FOREACH         reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    FOR             reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    CLOSETAG        reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    RBRACE          reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    BREAK           reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    ENDSWITCH       reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    CASE            reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)
    DEFAULT         reduce using rule 204 (instance -> VARIABLE INSTANCEOF ID .)


state 155

    (208) concatenate -> VARIABLE CONCATENATEEQUAL STRING .

    VARIABLE        reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    ECHO            reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    PRINT           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    TRY             reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    FUNCTION        reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    RETURN          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    ID              reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    CLASS           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    INTERFACE       reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    INCLUDE         reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    NAMESPACE       reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    THROW           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    CONST           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    THIS            reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    INT             reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    FLOAT           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    STRING          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    BOOL            reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    NULL            reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    ARRAY           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    LPAREN          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    ABSTRACT        reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    PRIVATE         reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    PROTECTED       reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    PUBLIC          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    STATIC          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    FINAL           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    IF              reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    WHILE           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    DO              reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    SWITCH          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    FOREACH         reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    FOR             reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    CLOSETAG        reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    RBRACE          reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    BREAK           reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    ENDSWITCH       reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    CASE            reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)
    DEFAULT         reduce using rule 208 (concatenate -> VARIABLE CONCATENATEEQUAL STRING .)


state 156

    (209) minuse -> VARIABLE MINUSEQUAL INT .

    VARIABLE        reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    ECHO            reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    PRINT           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    TRY             reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    FUNCTION        reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    RETURN          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    ID              reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    CLASS           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    INTERFACE       reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    INCLUDE         reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    NAMESPACE       reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    THROW           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    CONST           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    THIS            reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    INT             reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    FLOAT           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    STRING          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    BOOL            reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    NULL            reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    ARRAY           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    LPAREN          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    ABSTRACT        reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    PRIVATE         reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    PROTECTED       reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    PUBLIC          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    STATIC          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    FINAL           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    IF              reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    WHILE           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    DO              reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    SWITCH          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    FOREACH         reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    FOR             reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    CLOSETAG        reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    RBRACE          reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    BREAK           reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    ENDSWITCH       reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    CASE            reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)
    DEFAULT         reduce using rule 209 (minuse -> VARIABLE MINUSEQUAL INT .)


state 157

    (210) pluse -> VARIABLE PLUSEQUAL INT .

    VARIABLE        reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    ECHO            reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    PRINT           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    TRY             reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    FUNCTION        reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    RETURN          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    ID              reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    CLASS           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    INTERFACE       reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    INCLUDE         reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    NAMESPACE       reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    THROW           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    CONST           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    THIS            reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    INT             reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    FLOAT           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    STRING          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    BOOL            reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    NULL            reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    ARRAY           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    LPAREN          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    ABSTRACT        reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    PRIVATE         reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    PROTECTED       reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    PUBLIC          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    STATIC          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    FINAL           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    IF              reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    WHILE           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    DO              reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    SWITCH          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    FOREACH         reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    FOR             reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    CLOSETAG        reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    RBRACE          reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    BREAK           reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    ENDSWITCH       reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    CASE            reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)
    DEFAULT         reduce using rule 210 (pluse -> VARIABLE PLUSEQUAL INT .)


state 158

    (61) comparacion -> expresion opSymbol expresion .
    (30) expresion -> expresion . opLogic expresion
    (61) comparacion -> expresion . opSymbol expresion
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LOGICAL_AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LOGICAL_OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICTEQ resolved as shift
  ! shift/reduce conflict for STRICTNEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
    VARIABLE        reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    ECHO            reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    PRINT           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    TRY             reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    FUNCTION        reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    RETURN          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    ID              reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    CLASS           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    INTERFACE       reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    INCLUDE         reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    NAMESPACE       reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    THROW           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    CONST           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    THIS            reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    INT             reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    FLOAT           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    STRING          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    BOOL            reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    NULL            reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    ARRAY           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    LPAREN          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    ABSTRACT        reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    PRIVATE         reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    PROTECTED       reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    PUBLIC          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    STATIC          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    FINAL           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    IF              reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    WHILE           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    DO              reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    SWITCH          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    FOREACH         reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    FOR             reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    CLOSETAG        reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    RPAREN          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    SEMICOLON       reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    RBRACE          reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    BREAK           reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    ENDSWITCH       reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    CASE            reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    DEFAULT         reduce using rule 61 (comparacion -> expresion opSymbol expresion .)
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

  ! EQ              [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! NEQ             [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! STRICTEQ        [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! STRICTNEQ       [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! LT              [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! GT              [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! LEQ             [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! GEQ             [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! AND             [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! LOGICAL_AND     [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! OR              [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]
  ! LOGICAL_OR      [ reduce using rule 61 (comparacion -> expresion opSymbol expresion .) ]

    opSymbol                       shift and go to state 85
    opLogic                        shift and go to state 86

state 159

    (30) expresion -> expresion opLogic expresion .
    (30) expresion -> expresion . opLogic expresion
    (61) comparacion -> expresion . opSymbol expresion
    (100) opLogic -> . AND
    (101) opLogic -> . LOGICAL_AND
    (102) opLogic -> . OR
    (103) opLogic -> . LOGICAL_OR
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LOGICAL_AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LOGICAL_OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for STRICTEQ resolved as shift
  ! shift/reduce conflict for STRICTNEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
    RPAREN          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    SEMICOLON       reduce using rule 30 (expresion -> expresion opLogic expresion .)
    VARIABLE        reduce using rule 30 (expresion -> expresion opLogic expresion .)
    ECHO            reduce using rule 30 (expresion -> expresion opLogic expresion .)
    PRINT           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    TRY             reduce using rule 30 (expresion -> expresion opLogic expresion .)
    FUNCTION        reduce using rule 30 (expresion -> expresion opLogic expresion .)
    RETURN          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    ID              reduce using rule 30 (expresion -> expresion opLogic expresion .)
    CLASS           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    INTERFACE       reduce using rule 30 (expresion -> expresion opLogic expresion .)
    INCLUDE         reduce using rule 30 (expresion -> expresion opLogic expresion .)
    NAMESPACE       reduce using rule 30 (expresion -> expresion opLogic expresion .)
    THROW           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    CONST           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    THIS            reduce using rule 30 (expresion -> expresion opLogic expresion .)
    INT             reduce using rule 30 (expresion -> expresion opLogic expresion .)
    FLOAT           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    STRING          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    BOOL            reduce using rule 30 (expresion -> expresion opLogic expresion .)
    NULL            reduce using rule 30 (expresion -> expresion opLogic expresion .)
    ARRAY           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    LPAREN          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    ABSTRACT        reduce using rule 30 (expresion -> expresion opLogic expresion .)
    PRIVATE         reduce using rule 30 (expresion -> expresion opLogic expresion .)
    PROTECTED       reduce using rule 30 (expresion -> expresion opLogic expresion .)
    PUBLIC          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    STATIC          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    FINAL           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    IF              reduce using rule 30 (expresion -> expresion opLogic expresion .)
    WHILE           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    DO              reduce using rule 30 (expresion -> expresion opLogic expresion .)
    SWITCH          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    FOREACH         reduce using rule 30 (expresion -> expresion opLogic expresion .)
    FOR             reduce using rule 30 (expresion -> expresion opLogic expresion .)
    CLOSETAG        reduce using rule 30 (expresion -> expresion opLogic expresion .)
    RBRACE          reduce using rule 30 (expresion -> expresion opLogic expresion .)
    BREAK           reduce using rule 30 (expresion -> expresion opLogic expresion .)
    ENDSWITCH       reduce using rule 30 (expresion -> expresion opLogic expresion .)
    CASE            reduce using rule 30 (expresion -> expresion opLogic expresion .)
    DEFAULT         reduce using rule 30 (expresion -> expresion opLogic expresion .)
    AND             shift and go to state 95
    LOGICAL_AND     shift and go to state 96
    OR              shift and go to state 97
    LOGICAL_OR      shift and go to state 98
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

  ! EQ              [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! NEQ             [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! STRICTEQ        [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! STRICTNEQ       [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! LT              [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! GT              [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! LEQ             [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! GEQ             [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! AND             [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! LOGICAL_AND     [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! OR              [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]
  ! LOGICAL_OR      [ reduce using rule 30 (expresion -> expresion opLogic expresion .) ]

    opLogic                        shift and go to state 86
    opSymbol                       shift and go to state 85

state 160

    (87) conditions -> LPAREN conditions . RPAREN
    (37) operador_ternario -> LPAREN conditions . RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN conditions . RPAREN QUESTION COLON valor
    (91) condition -> LPAREN conditions . RPAREN

    RPAREN          shift and go to state 235


state 161

    (32) expresion -> LPAREN comparacion RPAREN .

    EQ              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    NEQ             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    STRICTEQ        reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    STRICTNEQ       reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    LT              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    GT              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    LEQ             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    GEQ             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    AND             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    LOGICAL_AND     reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    OR              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    LOGICAL_OR      reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    RPAREN          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    SEMICOLON       reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    VARIABLE        reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    ECHO            reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    PRINT           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    TRY             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    FUNCTION        reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    RETURN          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    ID              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    CLASS           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    INTERFACE       reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    INCLUDE         reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    NAMESPACE       reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    THROW           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    CONST           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    THIS            reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    INT             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    FLOAT           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    STRING          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    BOOL            reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    NULL            reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    ARRAY           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    LPAREN          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    ABSTRACT        reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    PRIVATE         reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    PROTECTED       reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    PUBLIC          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    STATIC          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    FINAL           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    IF              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    WHILE           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    DO              reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    SWITCH          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    FOREACH         reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    FOR             reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    CLOSETAG        reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    RBRACE          reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    BREAK           reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    ENDSWITCH       reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    CASE            reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)
    DEFAULT         reduce using rule 32 (expresion -> LPAREN comparacion RPAREN .)


state 162

    (34) expresion -> LPAREN expresion RPAREN .

    EQ              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    NEQ             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    STRICTEQ        reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    STRICTNEQ       reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    LT              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    GT              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    LEQ             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    GEQ             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    AND             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    LOGICAL_AND     reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    OR              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    LOGICAL_OR      reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    ECHO            reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    TRY             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    FUNCTION        reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    ID              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    CLASS           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    INTERFACE       reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    INCLUDE         reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    NAMESPACE       reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    THROW           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    CONST           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    THIS            reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    INT             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    BOOL            reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    NULL            reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    ARRAY           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    ABSTRACT        reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    PRIVATE         reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    PROTECTED       reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    PUBLIC          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    STATIC          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    FINAL           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    IF              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    DO              reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    SWITCH          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    FOREACH         reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    CLOSETAG        reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    BREAK           reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    ENDSWITCH       reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    CASE            reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)
    DEFAULT         reduce using rule 34 (expresion -> LPAREN expresion RPAREN .)


state 163

    (42) operaArit -> LPAREN operaArit RPAREN .

    EQ              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    NEQ             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    STRICTEQ        reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    STRICTNEQ       reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    LT              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    GT              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    LEQ             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    GEQ             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    AND             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    LOGICAL_AND     reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    OR              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    LOGICAL_OR      reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    RPAREN          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    SEMICOLON       reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    VARIABLE        reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    ECHO            reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    PRINT           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    TRY             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    FUNCTION        reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    RETURN          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    ID              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    CLASS           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    INTERFACE       reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    INCLUDE         reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    NAMESPACE       reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    THROW           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    CONST           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    THIS            reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    INT             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    FLOAT           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    STRING          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    BOOL            reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    NULL            reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    ARRAY           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    LPAREN          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    ABSTRACT        reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    PRIVATE         reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    PROTECTED       reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    PUBLIC          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    STATIC          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    FINAL           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    IF              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    WHILE           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    DO              reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    SWITCH          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    FOREACH         reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    FOR             reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    CLOSETAG        reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    RBRACE          reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    BREAK           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    ENDSWITCH       reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    CASE            reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    DEFAULT         reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)
    COMMA           reduce using rule 42 (operaArit -> LPAREN operaArit RPAREN .)


state 164

    (37) operador_ternario -> LPAREN conditions RPAREN . QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN conditions RPAREN . QUESTION COLON valor

    QUESTION        shift and go to state 236


state 165

    (60) comparacion -> valor opSymbol . valor
    (89) condition -> valor opSymbol . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 237
    llamadaFuncion                 shift and go to state 107

state 166

    (39) operador_ternario -> LPAREN VARIABLE RPAREN . QUESTION COLON valor

    QUESTION        shift and go to state 238


state 167

    (86) conditions -> condition opLogic . conditions
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 176
    NOT             shift and go to state 108
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    condition                      shift and go to state 106
    conditions                     shift and go to state 239
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 168

    (90) condition -> NOT condition .

    AND             reduce using rule 90 (condition -> NOT condition .)
    LOGICAL_AND     reduce using rule 90 (condition -> NOT condition .)
    OR              reduce using rule 90 (condition -> NOT condition .)
    LOGICAL_OR      reduce using rule 90 (condition -> NOT condition .)
    RPAREN          reduce using rule 90 (condition -> NOT condition .)


state 169

    (88) condition -> valor .
    (89) condition -> valor . opSymbol valor
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

    AND             reduce using rule 88 (condition -> valor .)
    LOGICAL_AND     reduce using rule 88 (condition -> valor .)
    OR              reduce using rule 88 (condition -> valor .)
    LOGICAL_OR      reduce using rule 88 (condition -> valor .)
    RPAREN          reduce using rule 88 (condition -> valor .)
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

    opSymbol                       shift and go to state 240

state 170

    (91) condition -> LPAREN . conditions RPAREN
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 176
    NOT             shift and go to state 108
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    conditions                     shift and go to state 241
    condition                      shift and go to state 106
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 171

    (60) comparacion -> valor opSymbol valor .

    VARIABLE        reduce using rule 60 (comparacion -> valor opSymbol valor .)
    ECHO            reduce using rule 60 (comparacion -> valor opSymbol valor .)
    PRINT           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    TRY             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    FUNCTION        reduce using rule 60 (comparacion -> valor opSymbol valor .)
    RETURN          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    ID              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    CLASS           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    INTERFACE       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    INCLUDE         reduce using rule 60 (comparacion -> valor opSymbol valor .)
    NAMESPACE       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    THROW           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    CONST           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    THIS            reduce using rule 60 (comparacion -> valor opSymbol valor .)
    INT             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    FLOAT           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    STRING          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    BOOL            reduce using rule 60 (comparacion -> valor opSymbol valor .)
    NULL            reduce using rule 60 (comparacion -> valor opSymbol valor .)
    ARRAY           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LPAREN          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    ABSTRACT        reduce using rule 60 (comparacion -> valor opSymbol valor .)
    PRIVATE         reduce using rule 60 (comparacion -> valor opSymbol valor .)
    PROTECTED       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    PUBLIC          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    STATIC          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    FINAL           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    IF              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    WHILE           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    DO              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    SWITCH          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    FOREACH         reduce using rule 60 (comparacion -> valor opSymbol valor .)
    FOR             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    CLOSETAG        reduce using rule 60 (comparacion -> valor opSymbol valor .)
    EQ              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    NEQ             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    STRICTEQ        reduce using rule 60 (comparacion -> valor opSymbol valor .)
    STRICTNEQ       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LT              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    GT              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LEQ             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    GEQ             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    AND             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LOGICAL_AND     reduce using rule 60 (comparacion -> valor opSymbol valor .)
    OR              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LOGICAL_OR      reduce using rule 60 (comparacion -> valor opSymbol valor .)
    SEMICOLON       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    RPAREN          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    RBRACE          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    BREAK           reduce using rule 60 (comparacion -> valor opSymbol valor .)
    ENDSWITCH       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    CASE            reduce using rule 60 (comparacion -> valor opSymbol valor .)
    DEFAULT         reduce using rule 60 (comparacion -> valor opSymbol valor .)


state 172

    (40) operaArit -> valor .
    (41) operaArit -> valor . operador operaArit
    (54) operador -> . PLUS
    (55) operador -> . MINUS
    (56) operador -> . TIMES
    (57) operador -> . DIVIDE
    (58) operador -> . MODULO
    (59) operador -> . POTENCIA

    EQ              reduce using rule 40 (operaArit -> valor .)
    NEQ             reduce using rule 40 (operaArit -> valor .)
    STRICTEQ        reduce using rule 40 (operaArit -> valor .)
    STRICTNEQ       reduce using rule 40 (operaArit -> valor .)
    LT              reduce using rule 40 (operaArit -> valor .)
    GT              reduce using rule 40 (operaArit -> valor .)
    LEQ             reduce using rule 40 (operaArit -> valor .)
    GEQ             reduce using rule 40 (operaArit -> valor .)
    AND             reduce using rule 40 (operaArit -> valor .)
    LOGICAL_AND     reduce using rule 40 (operaArit -> valor .)
    OR              reduce using rule 40 (operaArit -> valor .)
    LOGICAL_OR      reduce using rule 40 (operaArit -> valor .)
    RPAREN          reduce using rule 40 (operaArit -> valor .)
    SEMICOLON       reduce using rule 40 (operaArit -> valor .)
    VARIABLE        reduce using rule 40 (operaArit -> valor .)
    ECHO            reduce using rule 40 (operaArit -> valor .)
    PRINT           reduce using rule 40 (operaArit -> valor .)
    TRY             reduce using rule 40 (operaArit -> valor .)
    FUNCTION        reduce using rule 40 (operaArit -> valor .)
    RETURN          reduce using rule 40 (operaArit -> valor .)
    ID              reduce using rule 40 (operaArit -> valor .)
    CLASS           reduce using rule 40 (operaArit -> valor .)
    INTERFACE       reduce using rule 40 (operaArit -> valor .)
    INCLUDE         reduce using rule 40 (operaArit -> valor .)
    NAMESPACE       reduce using rule 40 (operaArit -> valor .)
    THROW           reduce using rule 40 (operaArit -> valor .)
    CONST           reduce using rule 40 (operaArit -> valor .)
    THIS            reduce using rule 40 (operaArit -> valor .)
    INT             reduce using rule 40 (operaArit -> valor .)
    FLOAT           reduce using rule 40 (operaArit -> valor .)
    STRING          reduce using rule 40 (operaArit -> valor .)
    BOOL            reduce using rule 40 (operaArit -> valor .)
    NULL            reduce using rule 40 (operaArit -> valor .)
    ARRAY           reduce using rule 40 (operaArit -> valor .)
    LPAREN          reduce using rule 40 (operaArit -> valor .)
    ABSTRACT        reduce using rule 40 (operaArit -> valor .)
    PRIVATE         reduce using rule 40 (operaArit -> valor .)
    PROTECTED       reduce using rule 40 (operaArit -> valor .)
    PUBLIC          reduce using rule 40 (operaArit -> valor .)
    STATIC          reduce using rule 40 (operaArit -> valor .)
    FINAL           reduce using rule 40 (operaArit -> valor .)
    IF              reduce using rule 40 (operaArit -> valor .)
    WHILE           reduce using rule 40 (operaArit -> valor .)
    DO              reduce using rule 40 (operaArit -> valor .)
    SWITCH          reduce using rule 40 (operaArit -> valor .)
    FOREACH         reduce using rule 40 (operaArit -> valor .)
    FOR             reduce using rule 40 (operaArit -> valor .)
    CLOSETAG        reduce using rule 40 (operaArit -> valor .)
    RBRACE          reduce using rule 40 (operaArit -> valor .)
    BREAK           reduce using rule 40 (operaArit -> valor .)
    ENDSWITCH       reduce using rule 40 (operaArit -> valor .)
    CASE            reduce using rule 40 (operaArit -> valor .)
    DEFAULT         reduce using rule 40 (operaArit -> valor .)
    COMMA           reduce using rule 40 (operaArit -> valor .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

    operador                       shift and go to state 110

state 173

    (41) operaArit -> valor operador operaArit .

    EQ              reduce using rule 41 (operaArit -> valor operador operaArit .)
    NEQ             reduce using rule 41 (operaArit -> valor operador operaArit .)
    STRICTEQ        reduce using rule 41 (operaArit -> valor operador operaArit .)
    STRICTNEQ       reduce using rule 41 (operaArit -> valor operador operaArit .)
    LT              reduce using rule 41 (operaArit -> valor operador operaArit .)
    GT              reduce using rule 41 (operaArit -> valor operador operaArit .)
    LEQ             reduce using rule 41 (operaArit -> valor operador operaArit .)
    GEQ             reduce using rule 41 (operaArit -> valor operador operaArit .)
    AND             reduce using rule 41 (operaArit -> valor operador operaArit .)
    LOGICAL_AND     reduce using rule 41 (operaArit -> valor operador operaArit .)
    OR              reduce using rule 41 (operaArit -> valor operador operaArit .)
    LOGICAL_OR      reduce using rule 41 (operaArit -> valor operador operaArit .)
    RPAREN          reduce using rule 41 (operaArit -> valor operador operaArit .)
    SEMICOLON       reduce using rule 41 (operaArit -> valor operador operaArit .)
    VARIABLE        reduce using rule 41 (operaArit -> valor operador operaArit .)
    ECHO            reduce using rule 41 (operaArit -> valor operador operaArit .)
    PRINT           reduce using rule 41 (operaArit -> valor operador operaArit .)
    TRY             reduce using rule 41 (operaArit -> valor operador operaArit .)
    FUNCTION        reduce using rule 41 (operaArit -> valor operador operaArit .)
    RETURN          reduce using rule 41 (operaArit -> valor operador operaArit .)
    ID              reduce using rule 41 (operaArit -> valor operador operaArit .)
    CLASS           reduce using rule 41 (operaArit -> valor operador operaArit .)
    INTERFACE       reduce using rule 41 (operaArit -> valor operador operaArit .)
    INCLUDE         reduce using rule 41 (operaArit -> valor operador operaArit .)
    NAMESPACE       reduce using rule 41 (operaArit -> valor operador operaArit .)
    THROW           reduce using rule 41 (operaArit -> valor operador operaArit .)
    CONST           reduce using rule 41 (operaArit -> valor operador operaArit .)
    THIS            reduce using rule 41 (operaArit -> valor operador operaArit .)
    INT             reduce using rule 41 (operaArit -> valor operador operaArit .)
    FLOAT           reduce using rule 41 (operaArit -> valor operador operaArit .)
    STRING          reduce using rule 41 (operaArit -> valor operador operaArit .)
    BOOL            reduce using rule 41 (operaArit -> valor operador operaArit .)
    NULL            reduce using rule 41 (operaArit -> valor operador operaArit .)
    ARRAY           reduce using rule 41 (operaArit -> valor operador operaArit .)
    LPAREN          reduce using rule 41 (operaArit -> valor operador operaArit .)
    ABSTRACT        reduce using rule 41 (operaArit -> valor operador operaArit .)
    PRIVATE         reduce using rule 41 (operaArit -> valor operador operaArit .)
    PROTECTED       reduce using rule 41 (operaArit -> valor operador operaArit .)
    PUBLIC          reduce using rule 41 (operaArit -> valor operador operaArit .)
    STATIC          reduce using rule 41 (operaArit -> valor operador operaArit .)
    FINAL           reduce using rule 41 (operaArit -> valor operador operaArit .)
    IF              reduce using rule 41 (operaArit -> valor operador operaArit .)
    WHILE           reduce using rule 41 (operaArit -> valor operador operaArit .)
    DO              reduce using rule 41 (operaArit -> valor operador operaArit .)
    SWITCH          reduce using rule 41 (operaArit -> valor operador operaArit .)
    FOREACH         reduce using rule 41 (operaArit -> valor operador operaArit .)
    FOR             reduce using rule 41 (operaArit -> valor operador operaArit .)
    CLOSETAG        reduce using rule 41 (operaArit -> valor operador operaArit .)
    RBRACE          reduce using rule 41 (operaArit -> valor operador operaArit .)
    BREAK           reduce using rule 41 (operaArit -> valor operador operaArit .)
    ENDSWITCH       reduce using rule 41 (operaArit -> valor operador operaArit .)
    CASE            reduce using rule 41 (operaArit -> valor operador operaArit .)
    DEFAULT         reduce using rule 41 (operaArit -> valor operador operaArit .)
    COMMA           reduce using rule 41 (operaArit -> valor operador operaArit .)


state 174

    (42) operaArit -> LPAREN . operaArit RPAREN
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    operaArit                      shift and go to state 242
    valor                          shift and go to state 172
    llamadaFuncion                 shift and go to state 107

state 175

    (62) impresion -> ECHO imprimir SEMICOLON .

    VARIABLE        reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    ECHO            reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    PRINT           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    TRY             reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    FUNCTION        reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    RETURN          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    ID              reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    CLASS           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    INTERFACE       reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    INCLUDE         reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    NAMESPACE       reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    THROW           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    CONST           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    THIS            reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    INT             reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    FLOAT           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    STRING          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    BOOL            reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    NULL            reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    ARRAY           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    LPAREN          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    ABSTRACT        reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    PRIVATE         reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    PROTECTED       reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    PUBLIC          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    STATIC          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    FINAL           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    IF              reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    WHILE           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    DO              reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    SWITCH          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    FOREACH         reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    FOR             reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    CLOSETAG        reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    RBRACE          reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    BREAK           reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    ENDSWITCH       reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    CASE            reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)
    DEFAULT         reduce using rule 62 (impresion -> ECHO imprimir SEMICOLON .)


state 176

    (87) conditions -> LPAREN . conditions RPAREN
    (91) condition -> LPAREN . conditions RPAREN
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 176
    NOT             shift and go to state 108
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    conditions                     shift and go to state 243
    condition                      shift and go to state 106
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 177

    (64) imprimir -> LPAREN repiteValores . RPAREN

    RPAREN          shift and go to state 244


state 178

    (65) imprimir -> LPAREN RPAREN .

    SEMICOLON       reduce using rule 65 (imprimir -> LPAREN RPAREN .)


state 179

    (69) repiteValores -> valor .
    (70) repiteValores -> valor . COMMA repiteValores
    (88) condition -> valor .
    (89) condition -> valor . opSymbol valor
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

  ! reduce/reduce conflict for RPAREN resolved using rule 69 (repiteValores -> valor .)
    RPAREN          reduce using rule 69 (repiteValores -> valor .)
    COMMA           shift and go to state 180
    AND             reduce using rule 88 (condition -> valor .)
    LOGICAL_AND     reduce using rule 88 (condition -> valor .)
    OR              reduce using rule 88 (condition -> valor .)
    LOGICAL_OR      reduce using rule 88 (condition -> valor .)
    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

  ! RPAREN          [ reduce using rule 88 (condition -> valor .) ]

    opSymbol                       shift and go to state 240

state 180

    (70) repiteValores -> valor COMMA . repiteValores
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 122
    repiteValores                  shift and go to state 245
    llamadaFuncion                 shift and go to state 107

state 181

    (63) impresion -> PRINT imprimir SEMICOLON .

    VARIABLE        reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    ECHO            reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    PRINT           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    TRY             reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    FUNCTION        reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    RETURN          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    ID              reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    CLASS           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    INTERFACE       reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    INCLUDE         reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    NAMESPACE       reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    THROW           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    CONST           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    THIS            reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    INT             reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    FLOAT           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    STRING          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    BOOL            reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    NULL            reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    ARRAY           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    LPAREN          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    ABSTRACT        reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    PRIVATE         reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    PROTECTED       reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    PUBLIC          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    STATIC          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    FINAL           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    IF              reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    WHILE           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    DO              reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    SWITCH          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    FOREACH         reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    FOR             reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    CLOSETAG        reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    RBRACE          reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    BREAK           reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    ENDSWITCH       reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    CASE            reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)
    DEFAULT         reduce using rule 63 (impresion -> PRINT imprimir SEMICOLON .)


state 182

    (163) try -> TRY LBRACE body . RBRACE catchs
    (164) try -> TRY LBRACE body . RBRACE catchs FINALLY LBRACE body RBRACE

    RBRACE          shift and go to state 246


state 183

    (104) body -> sentenciaList .

    RBRACE          reduce using rule 104 (body -> sentenciaList .)
    VARIABLE        reduce using rule 104 (body -> sentenciaList .)
    ECHO            reduce using rule 104 (body -> sentenciaList .)
    PRINT           reduce using rule 104 (body -> sentenciaList .)
    TRY             reduce using rule 104 (body -> sentenciaList .)
    FUNCTION        reduce using rule 104 (body -> sentenciaList .)
    RETURN          reduce using rule 104 (body -> sentenciaList .)
    ID              reduce using rule 104 (body -> sentenciaList .)
    CLASS           reduce using rule 104 (body -> sentenciaList .)
    INTERFACE       reduce using rule 104 (body -> sentenciaList .)
    INCLUDE         reduce using rule 104 (body -> sentenciaList .)
    NAMESPACE       reduce using rule 104 (body -> sentenciaList .)
    THROW           reduce using rule 104 (body -> sentenciaList .)
    CONST           reduce using rule 104 (body -> sentenciaList .)
    THIS            reduce using rule 104 (body -> sentenciaList .)
    INT             reduce using rule 104 (body -> sentenciaList .)
    FLOAT           reduce using rule 104 (body -> sentenciaList .)
    STRING          reduce using rule 104 (body -> sentenciaList .)
    BOOL            reduce using rule 104 (body -> sentenciaList .)
    NULL            reduce using rule 104 (body -> sentenciaList .)
    ARRAY           reduce using rule 104 (body -> sentenciaList .)
    LPAREN          reduce using rule 104 (body -> sentenciaList .)
    ABSTRACT        reduce using rule 104 (body -> sentenciaList .)
    PRIVATE         reduce using rule 104 (body -> sentenciaList .)
    PROTECTED       reduce using rule 104 (body -> sentenciaList .)
    PUBLIC          reduce using rule 104 (body -> sentenciaList .)
    STATIC          reduce using rule 104 (body -> sentenciaList .)
    FINAL           reduce using rule 104 (body -> sentenciaList .)
    IF              reduce using rule 104 (body -> sentenciaList .)
    WHILE           reduce using rule 104 (body -> sentenciaList .)
    DO              reduce using rule 104 (body -> sentenciaList .)
    SWITCH          reduce using rule 104 (body -> sentenciaList .)
    FOREACH         reduce using rule 104 (body -> sentenciaList .)
    FOR             reduce using rule 104 (body -> sentenciaList .)
    CLOSETAG        reduce using rule 104 (body -> sentenciaList .)
    BREAK           reduce using rule 104 (body -> sentenciaList .)
    ENDSWITCH       reduce using rule 104 (body -> sentenciaList .)
    CASE            reduce using rule 104 (body -> sentenciaList .)
    DEFAULT         reduce using rule 104 (body -> sentenciaList .)


state 184

    (105) body -> empty .

    RBRACE          reduce using rule 105 (body -> empty .)
    VARIABLE        reduce using rule 105 (body -> empty .)
    ECHO            reduce using rule 105 (body -> empty .)
    PRINT           reduce using rule 105 (body -> empty .)
    TRY             reduce using rule 105 (body -> empty .)
    FUNCTION        reduce using rule 105 (body -> empty .)
    RETURN          reduce using rule 105 (body -> empty .)
    ID              reduce using rule 105 (body -> empty .)
    CLASS           reduce using rule 105 (body -> empty .)
    INTERFACE       reduce using rule 105 (body -> empty .)
    INCLUDE         reduce using rule 105 (body -> empty .)
    NAMESPACE       reduce using rule 105 (body -> empty .)
    THROW           reduce using rule 105 (body -> empty .)
    CONST           reduce using rule 105 (body -> empty .)
    THIS            reduce using rule 105 (body -> empty .)
    INT             reduce using rule 105 (body -> empty .)
    FLOAT           reduce using rule 105 (body -> empty .)
    STRING          reduce using rule 105 (body -> empty .)
    BOOL            reduce using rule 105 (body -> empty .)
    NULL            reduce using rule 105 (body -> empty .)
    ARRAY           reduce using rule 105 (body -> empty .)
    LPAREN          reduce using rule 105 (body -> empty .)
    ABSTRACT        reduce using rule 105 (body -> empty .)
    PRIVATE         reduce using rule 105 (body -> empty .)
    PROTECTED       reduce using rule 105 (body -> empty .)
    PUBLIC          reduce using rule 105 (body -> empty .)
    STATIC          reduce using rule 105 (body -> empty .)
    FINAL           reduce using rule 105 (body -> empty .)
    IF              reduce using rule 105 (body -> empty .)
    WHILE           reduce using rule 105 (body -> empty .)
    DO              reduce using rule 105 (body -> empty .)
    SWITCH          reduce using rule 105 (body -> empty .)
    FOREACH         reduce using rule 105 (body -> empty .)
    FOR             reduce using rule 105 (body -> empty .)
    CLOSETAG        reduce using rule 105 (body -> empty .)
    BREAK           reduce using rule 105 (body -> empty .)
    ENDSWITCH       reduce using rule 105 (body -> empty .)
    CASE            reduce using rule 105 (body -> empty .)
    DEFAULT         reduce using rule 105 (body -> empty .)


state 185

    (106) sentenciaList -> sentencia .
    (107) sentenciaList -> sentencia . sentenciaList
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for NAMESPACE resolved as shift
  ! shift/reduce conflict for THROW resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ABSTRACT resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          reduce using rule 106 (sentenciaList -> sentencia .)
    CLOSETAG        reduce using rule 106 (sentenciaList -> sentencia .)
    BREAK           reduce using rule 106 (sentenciaList -> sentencia .)
    ENDSWITCH       reduce using rule 106 (sentenciaList -> sentencia .)
    CASE            reduce using rule 106 (sentenciaList -> sentencia .)
    DEFAULT         reduce using rule 106 (sentenciaList -> sentencia .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

  ! VARIABLE        [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! ECHO            [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! PRINT           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! TRY             [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! FUNCTION        [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! RETURN          [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! ID              [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! CLASS           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! INTERFACE       [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! INCLUDE         [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! NAMESPACE       [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! THROW           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! CONST           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! THIS            [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! INT             [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! FLOAT           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! STRING          [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! BOOL            [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! NULL            [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! ARRAY           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! LPAREN          [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! ABSTRACT        [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! PRIVATE         [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! PROTECTED       [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! PUBLIC          [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! STATIC          [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! FINAL           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! IF              [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! WHILE           [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! DO              [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! SWITCH          [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! FOREACH         [ reduce using rule 106 (sentenciaList -> sentencia .) ]
  ! FOR             [ reduce using rule 106 (sentenciaList -> sentencia .) ]

    sentencia                      shift and go to state 185
    sentenciaList                  shift and go to state 247
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 186

    (169) funcionDeclaration -> FUNCTION ID LPAREN . argumentos RPAREN LBRACE body RBRACE
    (147) argumentos -> . argumento
    (148) argumentos -> . argumento COMMA argumentos
    (149) argumentos -> . empty
    (150) argumento -> . type VARIABLE
    (151) argumento -> . VARIABLE EQUALS valor
    (152) argumento -> . type VARIABLE EQUALS valor
    (153) argumento -> . operaArit
    (154) argumento -> . valor
    (155) argumento -> . llamadaFuncion
    (156) argumento -> . VARIABLE
    (71) empty -> .
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    VARIABLE        shift and go to state 192
    RPAREN          reduce using rule 71 (empty -> .)
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    argumentos                     shift and go to state 248
    argumento                      shift and go to state 189
    empty                          shift and go to state 190
    type                           shift and go to state 191
    valor                          shift and go to state 193
    operaArit                      shift and go to state 194
    llamadaFuncion                 shift and go to state 195

state 187

    (170) llamadaFuncion -> ID LPAREN argumentos . RPAREN SEMICOLON
    (171) llamadaFuncion -> ID LPAREN argumentos . RPAREN

    RPAREN          shift and go to state 249


state 188

    (172) llamadaFuncion -> ID LPAREN RPAREN . SEMICOLON
    (173) llamadaFuncion -> ID LPAREN RPAREN .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 250
    VARIABLE        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    ECHO            reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    PRINT           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    TRY             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    FUNCTION        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    ID              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    CLASS           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    INTERFACE       reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    INCLUDE         reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    NAMESPACE       reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    THROW           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    CONST           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    THIS            reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    INT             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    FLOAT           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    STRING          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    BOOL            reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    NULL            reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    ARRAY           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    ABSTRACT        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    PRIVATE         reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    PROTECTED       reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    PUBLIC          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    STATIC          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    FINAL           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    IF              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    DO              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    SWITCH          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    FOREACH         reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    FOR             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    CLOSETAG        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    EQ              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    STRICTEQ        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    STRICTNEQ       reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    LT              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    GT              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    LEQ             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    GEQ             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    MODULO          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    POTENCIA        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    AND             reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    LOGICAL_AND     reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    OR              reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    LOGICAL_OR      reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    BREAK           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    ENDSWITCH       reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    CASE            reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    DEFAULT         reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    ARROWMAP        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)
    COLON           reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 173 (llamadaFuncion -> ID LPAREN RPAREN .) ]


state 189

    (147) argumentos -> argumento .
    (148) argumentos -> argumento . COMMA argumentos

    RPAREN          reduce using rule 147 (argumentos -> argumento .)
    COMMA           shift and go to state 251


state 190

    (149) argumentos -> empty .

    RPAREN          reduce using rule 149 (argumentos -> empty .)


state 191

    (150) argumento -> type . VARIABLE
    (152) argumento -> type . VARIABLE EQUALS valor

    VARIABLE        shift and go to state 252


state 192

    (151) argumento -> VARIABLE . EQUALS valor
    (156) argumento -> VARIABLE .
    (47) valor -> VARIABLE .

  ! reduce/reduce conflict for COMMA resolved using rule 47 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (valor -> VARIABLE .)
    EQUALS          shift and go to state 253
    PLUS            reduce using rule 47 (valor -> VARIABLE .)
    MINUS           reduce using rule 47 (valor -> VARIABLE .)
    TIMES           reduce using rule 47 (valor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (valor -> VARIABLE .)
    MODULO          reduce using rule 47 (valor -> VARIABLE .)
    POTENCIA        reduce using rule 47 (valor -> VARIABLE .)
    COMMA           reduce using rule 47 (valor -> VARIABLE .)
    RPAREN          reduce using rule 47 (valor -> VARIABLE .)

  ! COMMA           [ reduce using rule 156 (argumento -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 156 (argumento -> VARIABLE .) ]


state 193

    (154) argumento -> valor .
    (40) operaArit -> valor .
    (41) operaArit -> valor . operador operaArit
    (54) operador -> . PLUS
    (55) operador -> . MINUS
    (56) operador -> . TIMES
    (57) operador -> . DIVIDE
    (58) operador -> . MODULO
    (59) operador -> . POTENCIA

  ! reduce/reduce conflict for COMMA resolved using rule 40 (operaArit -> valor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (operaArit -> valor .)
    COMMA           reduce using rule 40 (operaArit -> valor .)
    RPAREN          reduce using rule 40 (operaArit -> valor .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! COMMA           [ reduce using rule 154 (argumento -> valor .) ]
  ! RPAREN          [ reduce using rule 154 (argumento -> valor .) ]

    operador                       shift and go to state 110

state 194

    (153) argumento -> operaArit .

    COMMA           reduce using rule 153 (argumento -> operaArit .)
    RPAREN          reduce using rule 153 (argumento -> operaArit .)


state 195

    (155) argumento -> llamadaFuncion .
    (53) valor -> llamadaFuncion .

  ! reduce/reduce conflict for COMMA resolved using rule 53 (valor -> llamadaFuncion .)
  ! reduce/reduce conflict for RPAREN resolved using rule 53 (valor -> llamadaFuncion .)
    PLUS            reduce using rule 53 (valor -> llamadaFuncion .)
    MINUS           reduce using rule 53 (valor -> llamadaFuncion .)
    TIMES           reduce using rule 53 (valor -> llamadaFuncion .)
    DIVIDE          reduce using rule 53 (valor -> llamadaFuncion .)
    MODULO          reduce using rule 53 (valor -> llamadaFuncion .)
    POTENCIA        reduce using rule 53 (valor -> llamadaFuncion .)
    COMMA           reduce using rule 53 (valor -> llamadaFuncion .)
    RPAREN          reduce using rule 53 (valor -> llamadaFuncion .)

  ! COMMA           [ reduce using rule 155 (argumento -> llamadaFuncion .) ]
  ! RPAREN          [ reduce using rule 155 (argumento -> llamadaFuncion .) ]


state 196

    (157) type -> INT_TYPE .

    VARIABLE        reduce using rule 157 (type -> INT_TYPE .)
    FUNCTION        reduce using rule 157 (type -> INT_TYPE .)


state 197

    (158) type -> FLOAT_TYPE .

    VARIABLE        reduce using rule 158 (type -> FLOAT_TYPE .)
    FUNCTION        reduce using rule 158 (type -> FLOAT_TYPE .)


state 198

    (159) type -> STRING_TYPE .

    VARIABLE        reduce using rule 159 (type -> STRING_TYPE .)
    FUNCTION        reduce using rule 159 (type -> STRING_TYPE .)


state 199

    (160) type -> BOOL_TYPE .

    VARIABLE        reduce using rule 160 (type -> BOOL_TYPE .)
    FUNCTION        reduce using rule 160 (type -> BOOL_TYPE .)


state 200

    (161) type -> ARRAY_TYPE .

    VARIABLE        reduce using rule 161 (type -> ARRAY_TYPE .)
    FUNCTION        reduce using rule 161 (type -> ARRAY_TYPE .)


state 201

    (162) type -> VOID .

    VARIABLE        reduce using rule 162 (type -> VOID .)
    FUNCTION        reduce using rule 162 (type -> VOID .)


state 202

    (26) returnStatement -> RETURN expresion SEMICOLON .

    VARIABLE        reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    ECHO            reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    PRINT           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    TRY             reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    FUNCTION        reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    RETURN          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    ID              reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    CLASS           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    INTERFACE       reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    INCLUDE         reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    NAMESPACE       reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    THROW           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    CONST           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    THIS            reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    INT             reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    FLOAT           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    STRING          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    BOOL            reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    NULL            reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    ARRAY           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    LPAREN          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    ABSTRACT        reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    PRIVATE         reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    PROTECTED       reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    PUBLIC          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    STATIC          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    FINAL           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    IF              reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    WHILE           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    DO              reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    SWITCH          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    FOREACH         reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    FOR             reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    CLOSETAG        reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    RBRACE          reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    BREAK           reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    ENDSWITCH       reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    CASE            reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)
    DEFAULT         reduce using rule 26 (returnStatement -> RETURN expresion SEMICOLON .)


state 203

    (174) classDeclarate -> CLASS ID LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 254
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 204

    (175) classDeclarate -> CLASS ID EXTENDS . ID LBRACE classBody RBRACE
    (186) classInterface -> CLASS ID EXTENDS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 259


state 205

    (185) classInterface -> CLASS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (189) impInterface -> . ID
    (190) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 260

    impInterface                   shift and go to state 261

state 206

    (176) classDeclarate -> data CLASS ID . LBRACE classBody RBRACE
    (187) classInterface -> data CLASS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> data CLASS ID . EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    LBRACE          shift and go to state 262
    IMPLEMENTS      shift and go to state 263
    EXTENDS         shift and go to state 264


state 207

    (197) interface -> INTERFACE ID LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 265
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 208

    (198) includes -> INCLUDE STRING SEMICOLON .

    VARIABLE        reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    ECHO            reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    PRINT           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    TRY             reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    FUNCTION        reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    RETURN          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    ID              reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    CLASS           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    INTERFACE       reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    INCLUDE         reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    NAMESPACE       reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    THROW           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    CONST           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    THIS            reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    INT             reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    FLOAT           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    STRING          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    BOOL            reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    NULL            reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    ARRAY           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    LPAREN          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    ABSTRACT        reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    PRIVATE         reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    PROTECTED       reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    PUBLIC          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    STATIC          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    FINAL           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    IF              reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    WHILE           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    DO              reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    SWITCH          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    FOREACH         reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    FOR             reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    CLOSETAG        reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    RBRACE          reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    BREAK           reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    ENDSWITCH       reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    CASE            reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)
    DEFAULT         reduce using rule 198 (includes -> INCLUDE STRING SEMICOLON .)


state 209

    (199) includes -> INCLUDE STRING DOT . STRING SEMICOLON

    STRING          shift and go to state 266


state 210

    (200) namespace -> NAMESPACE ID SEMICOLON .

    VARIABLE        reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    ECHO            reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    PRINT           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    TRY             reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    FUNCTION        reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    RETURN          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    ID              reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    CLASS           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    INTERFACE       reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    INCLUDE         reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    NAMESPACE       reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    THROW           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    CONST           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    THIS            reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    INT             reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    FLOAT           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    STRING          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    BOOL            reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    NULL            reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    ARRAY           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    LPAREN          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    ABSTRACT        reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    PRIVATE         reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    PROTECTED       reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    PUBLIC          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    STATIC          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    FINAL           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    IF              reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    WHILE           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    DO              reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    SWITCH          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    FOREACH         reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    FOR             reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    CLOSETAG        reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    RBRACE          reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    BREAK           reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    ENDSWITCH       reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    CASE            reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)
    DEFAULT         reduce using rule 200 (namespace -> NAMESPACE ID SEMICOLON .)


state 211

    (202) throw -> THROW NEW EXCEPTION . LPAREN repiteValores RPAREN SEMICOLON

    LPAREN          shift and go to state 267


state 212

    (203) throw -> THROW valor SEMICOLON .

    VARIABLE        reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    ECHO            reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    PRINT           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    TRY             reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    FUNCTION        reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    RETURN          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    ID              reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    CLASS           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    INTERFACE       reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    INCLUDE         reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    NAMESPACE       reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    THROW           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    CONST           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    THIS            reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    INT             reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    FLOAT           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    STRING          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    BOOL            reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    NULL            reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    ARRAY           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    LPAREN          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    ABSTRACT        reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    PRIVATE         reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    PROTECTED       reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    PUBLIC          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    STATIC          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    FINAL           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    IF              reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    WHILE           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    DO              reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    SWITCH          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    FOREACH         reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    FOR             reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    CLOSETAG        reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    RBRACE          reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    BREAK           reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    ENDSWITCH       reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    CASE            reduce using rule 203 (throw -> THROW valor SEMICOLON .)
    DEFAULT         reduce using rule 203 (throw -> THROW valor SEMICOLON .)


state 213

    (205) constdeclaration -> CONST ID EQUALS . valor SEMICOLON
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 268
    llamadaFuncion                 shift and go to state 107

state 214

    (206) thisdeclaration -> THIS ARROW ID . SEMICOLON
    (207) thisdeclaration -> THIS ARROW ID . LPAREN RPAREN SEMICOLON

    SEMICOLON       shift and go to state 269
    LPAREN          shift and go to state 270


state 215

    (80) if -> IF LPAREN conditions . RPAREN LBRACE body RBRACE else_blocks
    (81) if -> IF LPAREN conditions . RPAREN body

    RPAREN          shift and go to state 271


state 216

    (112) while -> WHILE LPAREN condition . RPAREN LBRACE body RBRACE
    (113) while -> WHILE LPAREN condition . RPAREN LBRACE RBRACE

    RPAREN          shift and go to state 272


state 217

    (114) dowhile -> DO LBRACE body . RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    RBRACE          shift and go to state 273


state 218

    (115) switch -> SWITCH LPAREN valor . RPAREN LBRACE caseLists RBRACE
    (116) switch -> SWITCH LPAREN valor . RPAREN COLON caseLists ENDSWITCH SEMICOLON

    RPAREN          shift and go to state 274


state 219

    (123) foreach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN LBRACE body RBRACE

    AS              shift and go to state 275


state 220

    (109) forStatement -> FOR LPAREN forcondition . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 276


state 221

    (110) forcondition -> VARIABLE . EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE . EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    EQUALS          shift and go to state 277


state 222

    (28) asignacion -> VARIABLE EQUALS expresion SEMICOLON .

    VARIABLE        reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ECHO            reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    TRY             reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FUNCTION        reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    RETURN          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ID              reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CLASS           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    INTERFACE       reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    INCLUDE         reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    NAMESPACE       reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    THROW           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CONST           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    THIS            reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    INT             reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FLOAT           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    STRING          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    BOOL            reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    NULL            reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ARRAY           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    LPAREN          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ABSTRACT        reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PRIVATE         reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PROTECTED       reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    PUBLIC          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    STATIC          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FINAL           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    IF              reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    WHILE           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    DO              reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    SWITCH          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FOREACH         reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    FOR             reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CLOSETAG        reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    RBRACE          reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    BREAK           reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    ENDSWITCH       reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    CASE            reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)
    DEFAULT         reduce using rule 28 (asignacion -> VARIABLE EQUALS expresion SEMICOLON .)


state 223

    (36) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN . STDIN RPAREN SEMICOLON

    STDIN           shift and go to state 278


state 224

    (201) anonymousFunction -> VARIABLE EQUALS FN LPAREN . RPAREN ARROWMAP comparacion SEMICOLON

    RPAREN          shift and go to state 279


state 225

    (130) array -> VARIABLE EQUALS arrays SEMICOLON .

    VARIABLE        reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ECHO            reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PRINT           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    TRY             reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FUNCTION        reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    RETURN          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ID              reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CLASS           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    INTERFACE       reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    INCLUDE         reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    NAMESPACE       reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    THROW           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CONST           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    THIS            reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    INT             reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FLOAT           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    STRING          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    BOOL            reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    NULL            reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ARRAY           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    LPAREN          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ABSTRACT        reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PRIVATE         reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PROTECTED       reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    PUBLIC          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    STATIC          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FINAL           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    IF              reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    WHILE           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    DO              reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    SWITCH          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FOREACH         reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    FOR             reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CLOSETAG        reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    RBRACE          reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    BREAK           reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    ENDSWITCH       reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    CASE            reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)
    DEFAULT         reduce using rule 130 (array -> VARIABLE EQUALS arrays SEMICOLON .)


state 226

    (134) arrays -> LBRACKET . repiteValores RBRACKET
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    repiteValores                  shift and go to state 229
    valor                          shift and go to state 122
    llamadaFuncion                 shift and go to state 107

state 227

    (131) array -> VARIABLE EQUALS LBRACKET arrayAnidado . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 280


state 228

    (137) map -> VARIABLE EQUALS LBRACKET maps . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 281


state 229

    (134) arrays -> LBRACKET repiteValores . RBRACKET

    RBRACKET        shift and go to state 282


state 230

    (135) arrayAnidado -> arrays .
    (136) arrayAnidado -> arrays . COMMA arrayAnidado

    RBRACKET        reduce using rule 135 (arrayAnidado -> arrays .)
    COMMA           shift and go to state 283


state 231

    (139) maps -> mapArrow .
    (140) maps -> mapArrow . COMMA maps

    RBRACKET        reduce using rule 139 (maps -> mapArrow .)
    RPAREN          reduce using rule 139 (maps -> mapArrow .)
    COMMA           shift and go to state 284


state 232

    (69) repiteValores -> valor .
    (70) repiteValores -> valor . COMMA repiteValores
    (141) mapArrow -> valor . ARROWMAP valor

    RBRACKET        reduce using rule 69 (repiteValores -> valor .)
    RPAREN          reduce using rule 69 (repiteValores -> valor .)
    COMMA           shift and go to state 180
    ARROWMAP        shift and go to state 285


state 233

    (132) array -> VARIABLE EQUALS ARRAY LPAREN . repiteValores RPAREN SEMICOLON
    (138) map -> VARIABLE EQUALS ARRAY LPAREN . maps RPAREN SEMICOLON
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (139) maps -> . mapArrow
    (140) maps -> . mapArrow COMMA maps
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (141) mapArrow -> . valor ARROWMAP valor
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    repiteValores                  shift and go to state 286
    maps                           shift and go to state 287
    valor                          shift and go to state 232
    mapArrow                       shift and go to state 231
    llamadaFuncion                 shift and go to state 107

state 234

    (168) objeto -> VARIABLE ARROW ID LPAREN . argumentos RPAREN SEMICOLON
    (147) argumentos -> . argumento
    (148) argumentos -> . argumento COMMA argumentos
    (149) argumentos -> . empty
    (150) argumento -> . type VARIABLE
    (151) argumento -> . VARIABLE EQUALS valor
    (152) argumento -> . type VARIABLE EQUALS valor
    (153) argumento -> . operaArit
    (154) argumento -> . valor
    (155) argumento -> . llamadaFuncion
    (156) argumento -> . VARIABLE
    (71) empty -> .
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    VARIABLE        shift and go to state 192
    RPAREN          reduce using rule 71 (empty -> .)
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    argumentos                     shift and go to state 288
    argumento                      shift and go to state 189
    empty                          shift and go to state 190
    type                           shift and go to state 191
    valor                          shift and go to state 193
    operaArit                      shift and go to state 194
    llamadaFuncion                 shift and go to state 195

state 235

    (87) conditions -> LPAREN conditions RPAREN .
    (37) operador_ternario -> LPAREN conditions RPAREN . QUESTION valor COLON valor
    (38) operador_ternario -> LPAREN conditions RPAREN . QUESTION COLON valor
    (91) condition -> LPAREN conditions RPAREN .

  ! reduce/reduce conflict for RPAREN resolved using rule 87 (conditions -> LPAREN conditions RPAREN .)
    RPAREN          reduce using rule 87 (conditions -> LPAREN conditions RPAREN .)
    QUESTION        shift and go to state 236
    AND             reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_AND     reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    OR              reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_OR      reduce using rule 91 (condition -> LPAREN conditions RPAREN .)

  ! RPAREN          [ reduce using rule 91 (condition -> LPAREN conditions RPAREN .) ]


state 236

    (37) operador_ternario -> LPAREN conditions RPAREN QUESTION . valor COLON valor
    (38) operador_ternario -> LPAREN conditions RPAREN QUESTION . COLON valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    COLON           shift and go to state 290
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 289
    llamadaFuncion                 shift and go to state 107

state 237

    (60) comparacion -> valor opSymbol valor .
    (89) condition -> valor opSymbol valor .

  ! reduce/reduce conflict for AND resolved using rule 60 (comparacion -> valor opSymbol valor .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 60 (comparacion -> valor opSymbol valor .)
  ! reduce/reduce conflict for OR resolved using rule 60 (comparacion -> valor opSymbol valor .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 60 (comparacion -> valor opSymbol valor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 60 (comparacion -> valor opSymbol valor .)
    RPAREN          reduce using rule 60 (comparacion -> valor opSymbol valor .)
    EQ              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    NEQ             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    STRICTEQ        reduce using rule 60 (comparacion -> valor opSymbol valor .)
    STRICTNEQ       reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LT              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    GT              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LEQ             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    GEQ             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    AND             reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LOGICAL_AND     reduce using rule 60 (comparacion -> valor opSymbol valor .)
    OR              reduce using rule 60 (comparacion -> valor opSymbol valor .)
    LOGICAL_OR      reduce using rule 60 (comparacion -> valor opSymbol valor .)

  ! AND             [ reduce using rule 89 (condition -> valor opSymbol valor .) ]
  ! LOGICAL_AND     [ reduce using rule 89 (condition -> valor opSymbol valor .) ]
  ! OR              [ reduce using rule 89 (condition -> valor opSymbol valor .) ]
  ! LOGICAL_OR      [ reduce using rule 89 (condition -> valor opSymbol valor .) ]
  ! RPAREN          [ reduce using rule 89 (condition -> valor opSymbol valor .) ]


state 238

    (39) operador_ternario -> LPAREN VARIABLE RPAREN QUESTION . COLON valor

    COLON           shift and go to state 291


state 239

    (86) conditions -> condition opLogic conditions .

    RPAREN          reduce using rule 86 (conditions -> condition opLogic conditions .)


state 240

    (89) condition -> valor opSymbol . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 292
    llamadaFuncion                 shift and go to state 107

state 241

    (91) condition -> LPAREN conditions . RPAREN

    RPAREN          shift and go to state 293


state 242

    (42) operaArit -> LPAREN operaArit . RPAREN

    RPAREN          shift and go to state 163


state 243

    (87) conditions -> LPAREN conditions . RPAREN
    (91) condition -> LPAREN conditions . RPAREN

    RPAREN          shift and go to state 294


state 244

    (64) imprimir -> LPAREN repiteValores RPAREN .

    SEMICOLON       reduce using rule 64 (imprimir -> LPAREN repiteValores RPAREN .)


state 245

    (70) repiteValores -> valor COMMA repiteValores .

    SEMICOLON       reduce using rule 70 (repiteValores -> valor COMMA repiteValores .)
    RPAREN          reduce using rule 70 (repiteValores -> valor COMMA repiteValores .)
    RBRACKET        reduce using rule 70 (repiteValores -> valor COMMA repiteValores .)


state 246

    (163) try -> TRY LBRACE body RBRACE . catchs
    (164) try -> TRY LBRACE body RBRACE . catchs FINALLY LBRACE body RBRACE
    (166) catchs -> . catch
    (167) catchs -> . catch catchs
    (165) catch -> . CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    CATCH           shift and go to state 297

    catchs                         shift and go to state 295
    catch                          shift and go to state 296

state 247

    (107) sentenciaList -> sentencia sentenciaList .

    RBRACE          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    VARIABLE        reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    ECHO            reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    PRINT           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    TRY             reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    FUNCTION        reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    RETURN          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    ID              reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    CLASS           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    INTERFACE       reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    INCLUDE         reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    NAMESPACE       reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    THROW           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    CONST           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    THIS            reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    INT             reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    FLOAT           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    STRING          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    BOOL            reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    NULL            reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    ARRAY           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    LPAREN          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    ABSTRACT        reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    PRIVATE         reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    PROTECTED       reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    PUBLIC          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    STATIC          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    FINAL           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    IF              reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    WHILE           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    DO              reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    SWITCH          reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    FOREACH         reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    FOR             reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    CLOSETAG        reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    BREAK           reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    ENDSWITCH       reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    CASE            reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)
    DEFAULT         reduce using rule 107 (sentenciaList -> sentencia sentenciaList .)


state 248

    (169) funcionDeclaration -> FUNCTION ID LPAREN argumentos . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 298


state 249

    (170) llamadaFuncion -> ID LPAREN argumentos RPAREN . SEMICOLON
    (171) llamadaFuncion -> ID LPAREN argumentos RPAREN .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 299
    VARIABLE        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ECHO            reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PRINT           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    TRY             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FUNCTION        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RETURN          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ID              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CLASS           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    INTERFACE       reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    INCLUDE         reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    NAMESPACE       reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    THROW           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CONST           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    THIS            reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    INT             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FLOAT           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STRING          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    BOOL            reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    NULL            reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ARRAY           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LPAREN          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ABSTRACT        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PRIVATE         reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PROTECTED       reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PUBLIC          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STATIC          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FINAL           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    IF              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    WHILE           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    DO              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    SWITCH          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FOREACH         reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    FOR             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CLOSETAG        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    EQ              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    NEQ             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STRICTEQ        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    STRICTNEQ       reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LT              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    GT              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LEQ             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    GEQ             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    PLUS            reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    MINUS           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    TIMES           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    DIVIDE          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    MODULO          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    POTENCIA        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    AND             reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LOGICAL_AND     reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    OR              reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    LOGICAL_OR      reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RPAREN          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    COMMA           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RBRACE          reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    BREAK           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ENDSWITCH       reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    CASE            reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    DEFAULT         reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    ARROWMAP        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    RBRACKET        reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)
    COLON           reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .)

  ! SEMICOLON       [ reduce using rule 171 (llamadaFuncion -> ID LPAREN argumentos RPAREN .) ]


state 250

    (172) llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    THROW           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    CONST           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    NULL            reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    FINAL           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    FOREACH         reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    EQ              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    NEQ             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    STRICTEQ        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    STRICTNEQ       reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    LT              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    GT              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    LEQ             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    GEQ             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    TIMES           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    MODULO          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    POTENCIA        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    AND             reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    LOGICAL_AND     reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    OR              reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    LOGICAL_OR      reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    COMMA           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    ARROWMAP        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)
    COLON           reduce using rule 172 (llamadaFuncion -> ID LPAREN RPAREN SEMICOLON .)


state 251

    (148) argumentos -> argumento COMMA . argumentos
    (147) argumentos -> . argumento
    (148) argumentos -> . argumento COMMA argumentos
    (149) argumentos -> . empty
    (150) argumento -> . type VARIABLE
    (151) argumento -> . VARIABLE EQUALS valor
    (152) argumento -> . type VARIABLE EQUALS valor
    (153) argumento -> . operaArit
    (154) argumento -> . valor
    (155) argumento -> . llamadaFuncion
    (156) argumento -> . VARIABLE
    (71) empty -> .
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    VARIABLE        shift and go to state 192
    RPAREN          reduce using rule 71 (empty -> .)
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    argumento                      shift and go to state 189
    argumentos                     shift and go to state 300
    empty                          shift and go to state 190
    type                           shift and go to state 191
    valor                          shift and go to state 193
    operaArit                      shift and go to state 194
    llamadaFuncion                 shift and go to state 195

state 252

    (150) argumento -> type VARIABLE .
    (152) argumento -> type VARIABLE . EQUALS valor

    COMMA           reduce using rule 150 (argumento -> type VARIABLE .)
    RPAREN          reduce using rule 150 (argumento -> type VARIABLE .)
    EQUALS          shift and go to state 301


state 253

    (151) argumento -> VARIABLE EQUALS . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 302
    llamadaFuncion                 shift and go to state 107

state 254

    (174) classDeclarate -> CLASS ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 303


state 255

    (178) classBody -> classMember .
    (179) classBody -> classMember . classBody
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    RBRACE          reduce using rule 178 (classBody -> classMember .)
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classMember                    shift and go to state 255
    classBody                      shift and go to state 304
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 256

    (180) classMember -> type . VARIABLE SEMICOLON
    (181) classMember -> type . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 305
    FUNCTION        shift and go to state 306


state 257

    (182) classMember -> objectInstantiation .

    INT_TYPE        reduce using rule 182 (classMember -> objectInstantiation .)
    FLOAT_TYPE      reduce using rule 182 (classMember -> objectInstantiation .)
    STRING_TYPE     reduce using rule 182 (classMember -> objectInstantiation .)
    BOOL_TYPE       reduce using rule 182 (classMember -> objectInstantiation .)
    ARRAY_TYPE      reduce using rule 182 (classMember -> objectInstantiation .)
    VOID            reduce using rule 182 (classMember -> objectInstantiation .)
    NEW             reduce using rule 182 (classMember -> objectInstantiation .)
    RBRACE          reduce using rule 182 (classMember -> objectInstantiation .)


state 258

    (183) objectInstantiation -> NEW . ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> NEW . ID LPAREN RPAREN

    ID              shift and go to state 307


state 259

    (175) classDeclarate -> CLASS ID EXTENDS ID . LBRACE classBody RBRACE
    (186) classInterface -> CLASS ID EXTENDS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE

    LBRACE          shift and go to state 308
    IMPLEMENTS      shift and go to state 309


state 260

    (189) impInterface -> ID .
    (190) impInterface -> ID . COMMA impInterface

    LBRACE          reduce using rule 189 (impInterface -> ID .)
    COMMA           shift and go to state 310


state 261

    (185) classInterface -> CLASS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 311


state 262

    (176) classDeclarate -> data CLASS ID LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 312
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 263

    (187) classInterface -> data CLASS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (189) impInterface -> . ID
    (190) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 260

    impInterface                   shift and go to state 313

state 264

    (188) classInterface -> data CLASS ID EXTENDS . ID IMPLEMENTS impInterface LBRACE classBody RBRACE

    ID              shift and go to state 314


state 265

    (197) interface -> INTERFACE ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 315


state 266

    (199) includes -> INCLUDE STRING DOT STRING . SEMICOLON

    SEMICOLON       shift and go to state 316


state 267

    (202) throw -> THROW NEW EXCEPTION LPAREN . repiteValores RPAREN SEMICOLON
    (69) repiteValores -> . valor
    (70) repiteValores -> . valor COMMA repiteValores
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    repiteValores                  shift and go to state 317
    valor                          shift and go to state 122
    llamadaFuncion                 shift and go to state 107

state 268

    (205) constdeclaration -> CONST ID EQUALS valor . SEMICOLON

    SEMICOLON       shift and go to state 318


state 269

    (206) thisdeclaration -> THIS ARROW ID SEMICOLON .

    VARIABLE        reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ECHO            reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PRINT           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    TRY             reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FUNCTION        reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    RETURN          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ID              reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CLASS           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    INTERFACE       reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    INCLUDE         reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    NAMESPACE       reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    THROW           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CONST           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    THIS            reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    INT             reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FLOAT           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    STRING          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    BOOL            reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    NULL            reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ARRAY           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    LPAREN          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ABSTRACT        reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PRIVATE         reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PROTECTED       reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    PUBLIC          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    STATIC          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FINAL           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    IF              reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    WHILE           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    DO              reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    SWITCH          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FOREACH         reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    FOR             reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CLOSETAG        reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    RBRACE          reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    BREAK           reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    ENDSWITCH       reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    CASE            reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)
    DEFAULT         reduce using rule 206 (thisdeclaration -> THIS ARROW ID SEMICOLON .)


state 270

    (207) thisdeclaration -> THIS ARROW ID LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 319


state 271

    (80) if -> IF LPAREN conditions RPAREN . LBRACE body RBRACE else_blocks
    (81) if -> IF LPAREN conditions RPAREN . body
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for INTERFACE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for NAMESPACE resolved as shift
  ! shift/reduce conflict for THROW resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ABSTRACT resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for FINAL resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    LBRACE          shift and go to state 320
    RBRACE          reduce using rule 71 (empty -> .)
    CLOSETAG        reduce using rule 71 (empty -> .)
    BREAK           reduce using rule 71 (empty -> .)
    ENDSWITCH       reduce using rule 71 (empty -> .)
    CASE            reduce using rule 71 (empty -> .)
    DEFAULT         reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

  ! VARIABLE        [ reduce using rule 71 (empty -> .) ]
  ! ECHO            [ reduce using rule 71 (empty -> .) ]
  ! PRINT           [ reduce using rule 71 (empty -> .) ]
  ! TRY             [ reduce using rule 71 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 71 (empty -> .) ]
  ! RETURN          [ reduce using rule 71 (empty -> .) ]
  ! ID              [ reduce using rule 71 (empty -> .) ]
  ! CLASS           [ reduce using rule 71 (empty -> .) ]
  ! INTERFACE       [ reduce using rule 71 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 71 (empty -> .) ]
  ! NAMESPACE       [ reduce using rule 71 (empty -> .) ]
  ! THROW           [ reduce using rule 71 (empty -> .) ]
  ! CONST           [ reduce using rule 71 (empty -> .) ]
  ! THIS            [ reduce using rule 71 (empty -> .) ]
  ! INT             [ reduce using rule 71 (empty -> .) ]
  ! FLOAT           [ reduce using rule 71 (empty -> .) ]
  ! STRING          [ reduce using rule 71 (empty -> .) ]
  ! BOOL            [ reduce using rule 71 (empty -> .) ]
  ! NULL            [ reduce using rule 71 (empty -> .) ]
  ! ARRAY           [ reduce using rule 71 (empty -> .) ]
  ! LPAREN          [ reduce using rule 71 (empty -> .) ]
  ! ABSTRACT        [ reduce using rule 71 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 71 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 71 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 71 (empty -> .) ]
  ! STATIC          [ reduce using rule 71 (empty -> .) ]
  ! FINAL           [ reduce using rule 71 (empty -> .) ]
  ! IF              [ reduce using rule 71 (empty -> .) ]
  ! WHILE           [ reduce using rule 71 (empty -> .) ]
  ! DO              [ reduce using rule 71 (empty -> .) ]
  ! SWITCH          [ reduce using rule 71 (empty -> .) ]
  ! FOREACH         [ reduce using rule 71 (empty -> .) ]
  ! FOR             [ reduce using rule 71 (empty -> .) ]

    body                           shift and go to state 321
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 272

    (112) while -> WHILE LPAREN condition RPAREN . LBRACE body RBRACE
    (113) while -> WHILE LPAREN condition RPAREN . LBRACE RBRACE

    LBRACE          shift and go to state 322


state 273

    (114) dowhile -> DO LBRACE body RBRACE . WHILE LPAREN condition RPAREN SEMICOLON

    WHILE           shift and go to state 323


state 274

    (115) switch -> SWITCH LPAREN valor RPAREN . LBRACE caseLists RBRACE
    (116) switch -> SWITCH LPAREN valor RPAREN . COLON caseLists ENDSWITCH SEMICOLON

    LBRACE          shift and go to state 324
    COLON           shift and go to state 325


state 275

    (123) foreach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 326


state 276

    (109) forStatement -> FOR LPAREN forcondition RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 327


state 277

    (110) forcondition -> VARIABLE EQUALS . INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS . INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    INT             shift and go to state 328


state 278

    (36) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN . RPAREN SEMICOLON

    RPAREN          shift and go to state 329


state 279

    (201) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN . ARROWMAP comparacion SEMICOLON

    ARROWMAP        shift and go to state 330


state 280

    (131) array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 331


state 281

    (137) map -> VARIABLE EQUALS LBRACKET maps RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 332


state 282

    (134) arrays -> LBRACKET repiteValores RBRACKET .

    SEMICOLON       reduce using rule 134 (arrays -> LBRACKET repiteValores RBRACKET .)
    COMMA           reduce using rule 134 (arrays -> LBRACKET repiteValores RBRACKET .)
    RBRACKET        reduce using rule 134 (arrays -> LBRACKET repiteValores RBRACKET .)


state 283

    (136) arrayAnidado -> arrays COMMA . arrayAnidado
    (135) arrayAnidado -> . arrays
    (136) arrayAnidado -> . arrays COMMA arrayAnidado
    (134) arrays -> . LBRACKET repiteValores RBRACKET

    LBRACKET        shift and go to state 226

    arrays                         shift and go to state 230
    arrayAnidado                   shift and go to state 333

state 284

    (140) maps -> mapArrow COMMA . maps
    (139) maps -> . mapArrow
    (140) maps -> . mapArrow COMMA maps
    (141) mapArrow -> . valor ARROWMAP valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    mapArrow                       shift and go to state 231
    maps                           shift and go to state 334
    valor                          shift and go to state 335
    llamadaFuncion                 shift and go to state 107

state 285

    (141) mapArrow -> valor ARROWMAP . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 336
    llamadaFuncion                 shift and go to state 107

state 286

    (132) array -> VARIABLE EQUALS ARRAY LPAREN repiteValores . RPAREN SEMICOLON

    RPAREN          shift and go to state 337


state 287

    (138) map -> VARIABLE EQUALS ARRAY LPAREN maps . RPAREN SEMICOLON

    RPAREN          shift and go to state 338


state 288

    (168) objeto -> VARIABLE ARROW ID LPAREN argumentos . RPAREN SEMICOLON

    RPAREN          shift and go to state 339


state 289

    (37) operador_ternario -> LPAREN conditions RPAREN QUESTION valor . COLON valor

    COLON           shift and go to state 340


state 290

    (38) operador_ternario -> LPAREN conditions RPAREN QUESTION COLON . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 341
    llamadaFuncion                 shift and go to state 107

state 291

    (39) operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 342
    llamadaFuncion                 shift and go to state 107

state 292

    (89) condition -> valor opSymbol valor .

    AND             reduce using rule 89 (condition -> valor opSymbol valor .)
    LOGICAL_AND     reduce using rule 89 (condition -> valor opSymbol valor .)
    OR              reduce using rule 89 (condition -> valor opSymbol valor .)
    LOGICAL_OR      reduce using rule 89 (condition -> valor opSymbol valor .)
    RPAREN          reduce using rule 89 (condition -> valor opSymbol valor .)


state 293

    (91) condition -> LPAREN conditions RPAREN .

    AND             reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_AND     reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    OR              reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_OR      reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    RPAREN          reduce using rule 91 (condition -> LPAREN conditions RPAREN .)


state 294

    (87) conditions -> LPAREN conditions RPAREN .
    (91) condition -> LPAREN conditions RPAREN .

  ! reduce/reduce conflict for RPAREN resolved using rule 87 (conditions -> LPAREN conditions RPAREN .)
    RPAREN          reduce using rule 87 (conditions -> LPAREN conditions RPAREN .)
    AND             reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_AND     reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    OR              reduce using rule 91 (condition -> LPAREN conditions RPAREN .)
    LOGICAL_OR      reduce using rule 91 (condition -> LPAREN conditions RPAREN .)

  ! RPAREN          [ reduce using rule 91 (condition -> LPAREN conditions RPAREN .) ]


state 295

    (163) try -> TRY LBRACE body RBRACE catchs .
    (164) try -> TRY LBRACE body RBRACE catchs . FINALLY LBRACE body RBRACE

    VARIABLE        reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    ECHO            reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    PRINT           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    TRY             reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    FUNCTION        reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    RETURN          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    ID              reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    CLASS           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    INTERFACE       reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    INCLUDE         reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    NAMESPACE       reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    THROW           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    CONST           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    THIS            reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    INT             reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    FLOAT           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    STRING          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    BOOL            reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    NULL            reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    ARRAY           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    LPAREN          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    ABSTRACT        reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    PRIVATE         reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    PROTECTED       reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    PUBLIC          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    STATIC          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    FINAL           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    IF              reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    WHILE           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    DO              reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    SWITCH          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    FOREACH         reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    FOR             reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    CLOSETAG        reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    RBRACE          reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    BREAK           reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    ENDSWITCH       reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    CASE            reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    DEFAULT         reduce using rule 163 (try -> TRY LBRACE body RBRACE catchs .)
    FINALLY         shift and go to state 343


state 296

    (166) catchs -> catch .
    (167) catchs -> catch . catchs
    (166) catchs -> . catch
    (167) catchs -> . catch catchs
    (165) catch -> . CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    FINALLY         reduce using rule 166 (catchs -> catch .)
    VARIABLE        reduce using rule 166 (catchs -> catch .)
    ECHO            reduce using rule 166 (catchs -> catch .)
    PRINT           reduce using rule 166 (catchs -> catch .)
    TRY             reduce using rule 166 (catchs -> catch .)
    FUNCTION        reduce using rule 166 (catchs -> catch .)
    RETURN          reduce using rule 166 (catchs -> catch .)
    ID              reduce using rule 166 (catchs -> catch .)
    CLASS           reduce using rule 166 (catchs -> catch .)
    INTERFACE       reduce using rule 166 (catchs -> catch .)
    INCLUDE         reduce using rule 166 (catchs -> catch .)
    NAMESPACE       reduce using rule 166 (catchs -> catch .)
    THROW           reduce using rule 166 (catchs -> catch .)
    CONST           reduce using rule 166 (catchs -> catch .)
    THIS            reduce using rule 166 (catchs -> catch .)
    INT             reduce using rule 166 (catchs -> catch .)
    FLOAT           reduce using rule 166 (catchs -> catch .)
    STRING          reduce using rule 166 (catchs -> catch .)
    BOOL            reduce using rule 166 (catchs -> catch .)
    NULL            reduce using rule 166 (catchs -> catch .)
    ARRAY           reduce using rule 166 (catchs -> catch .)
    LPAREN          reduce using rule 166 (catchs -> catch .)
    ABSTRACT        reduce using rule 166 (catchs -> catch .)
    PRIVATE         reduce using rule 166 (catchs -> catch .)
    PROTECTED       reduce using rule 166 (catchs -> catch .)
    PUBLIC          reduce using rule 166 (catchs -> catch .)
    STATIC          reduce using rule 166 (catchs -> catch .)
    FINAL           reduce using rule 166 (catchs -> catch .)
    IF              reduce using rule 166 (catchs -> catch .)
    WHILE           reduce using rule 166 (catchs -> catch .)
    DO              reduce using rule 166 (catchs -> catch .)
    SWITCH          reduce using rule 166 (catchs -> catch .)
    FOREACH         reduce using rule 166 (catchs -> catch .)
    FOR             reduce using rule 166 (catchs -> catch .)
    CLOSETAG        reduce using rule 166 (catchs -> catch .)
    RBRACE          reduce using rule 166 (catchs -> catch .)
    BREAK           reduce using rule 166 (catchs -> catch .)
    ENDSWITCH       reduce using rule 166 (catchs -> catch .)
    CASE            reduce using rule 166 (catchs -> catch .)
    DEFAULT         reduce using rule 166 (catchs -> catch .)
    CATCH           shift and go to state 297

    catch                          shift and go to state 296
    catchs                         shift and go to state 344

state 297

    (165) catch -> CATCH . LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 345


state 298

    (169) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 346


state 299

    (170) llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .

    VARIABLE        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    ECHO            reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    PRINT           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    TRY             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    RETURN          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    ID              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    CLASS           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    THROW           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    CONST           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    THIS            reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    INT             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    FLOAT           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    STRING          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    BOOL            reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    NULL            reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    ARRAY           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    LPAREN          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    STATIC          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    FINAL           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    IF              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    WHILE           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    DO              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    SWITCH          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    FOREACH         reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    FOR             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    EQ              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    NEQ             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    STRICTEQ        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    STRICTNEQ       reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    LT              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    GT              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    LEQ             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    GEQ             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    PLUS            reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    MINUS           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    TIMES           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    MODULO          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    POTENCIA        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    AND             reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    LOGICAL_AND     reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    OR              reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    LOGICAL_OR      reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    RPAREN          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    COMMA           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    RBRACE          reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    BREAK           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    CASE            reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    ARROWMAP        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)
    COLON           reduce using rule 170 (llamadaFuncion -> ID LPAREN argumentos RPAREN SEMICOLON .)


state 300

    (148) argumentos -> argumento COMMA argumentos .

    RPAREN          reduce using rule 148 (argumentos -> argumento COMMA argumentos .)


state 301

    (152) argumento -> type VARIABLE EQUALS . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 347
    llamadaFuncion                 shift and go to state 107

state 302

    (151) argumento -> VARIABLE EQUALS valor .

    COMMA           reduce using rule 151 (argumento -> VARIABLE EQUALS valor .)
    RPAREN          reduce using rule 151 (argumento -> VARIABLE EQUALS valor .)


state 303

    (174) classDeclarate -> CLASS ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ID              reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    INT             reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    IF              reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    DO              reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 174 (classDeclarate -> CLASS ID LBRACE classBody RBRACE .)


state 304

    (179) classBody -> classMember classBody .

    RBRACE          reduce using rule 179 (classBody -> classMember classBody .)


state 305

    (180) classMember -> type VARIABLE . SEMICOLON

    SEMICOLON       shift and go to state 348


state 306

    (181) classMember -> type FUNCTION . ID LPAREN argumentos RPAREN LBRACE body RBRACE

    ID              shift and go to state 349


state 307

    (183) objectInstantiation -> NEW ID . LPAREN argumentos RPAREN
    (184) objectInstantiation -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 350


state 308

    (175) classDeclarate -> CLASS ID EXTENDS ID LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 351
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 309

    (186) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (189) impInterface -> . ID
    (190) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 260

    impInterface                   shift and go to state 352

state 310

    (190) impInterface -> ID COMMA . impInterface
    (189) impInterface -> . ID
    (190) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 260

    impInterface                   shift and go to state 353

state 311

    (185) classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 354
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 312

    (176) classDeclarate -> data CLASS ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 355


state 313

    (187) classInterface -> data CLASS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 356


state 314

    (188) classInterface -> data CLASS ID EXTENDS ID . IMPLEMENTS impInterface LBRACE classBody RBRACE

    IMPLEMENTS      shift and go to state 357


state 315

    (197) interface -> INTERFACE ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    ID              reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    INT             reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    IF              reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    DO              reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 197 (interface -> INTERFACE ID LBRACE classBody RBRACE .)


state 316

    (199) includes -> INCLUDE STRING DOT STRING SEMICOLON .

    VARIABLE        reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ECHO            reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PRINT           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    TRY             reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FUNCTION        reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    RETURN          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ID              reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CLASS           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    INTERFACE       reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    INCLUDE         reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    NAMESPACE       reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    THROW           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CONST           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    THIS            reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    INT             reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FLOAT           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    STRING          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    BOOL            reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    NULL            reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ARRAY           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    LPAREN          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ABSTRACT        reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PRIVATE         reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PROTECTED       reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    PUBLIC          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    STATIC          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FINAL           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    IF              reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    WHILE           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    DO              reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    SWITCH          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FOREACH         reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    FOR             reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CLOSETAG        reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    RBRACE          reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    BREAK           reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    ENDSWITCH       reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    CASE            reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)
    DEFAULT         reduce using rule 199 (includes -> INCLUDE STRING DOT STRING SEMICOLON .)


state 317

    (202) throw -> THROW NEW EXCEPTION LPAREN repiteValores . RPAREN SEMICOLON

    RPAREN          shift and go to state 358


state 318

    (205) constdeclaration -> CONST ID EQUALS valor SEMICOLON .

    VARIABLE        reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ECHO            reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PRINT           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    TRY             reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FUNCTION        reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    RETURN          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ID              reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CLASS           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    INTERFACE       reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    INCLUDE         reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    NAMESPACE       reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    THROW           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CONST           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    THIS            reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    INT             reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FLOAT           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    STRING          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    BOOL            reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    NULL            reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ARRAY           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    LPAREN          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ABSTRACT        reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PRIVATE         reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PROTECTED       reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    PUBLIC          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    STATIC          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FINAL           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    IF              reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    WHILE           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    DO              reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    SWITCH          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FOREACH         reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    FOR             reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CLOSETAG        reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    RBRACE          reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    BREAK           reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    ENDSWITCH       reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    CASE            reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)
    DEFAULT         reduce using rule 205 (constdeclaration -> CONST ID EQUALS valor SEMICOLON .)


state 319

    (207) thisdeclaration -> THIS ARROW ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 359


state 320

    (80) if -> IF LPAREN conditions RPAREN LBRACE . body RBRACE else_blocks
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 360
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 321

    (81) if -> IF LPAREN conditions RPAREN body .

    VARIABLE        reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    ECHO            reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    PRINT           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    TRY             reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    FUNCTION        reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    RETURN          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    ID              reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    CLASS           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    INTERFACE       reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    INCLUDE         reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    NAMESPACE       reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    THROW           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    CONST           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    THIS            reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    INT             reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    FLOAT           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    STRING          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    BOOL            reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    NULL            reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    ARRAY           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    LPAREN          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    ABSTRACT        reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    PRIVATE         reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    PROTECTED       reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    PUBLIC          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    STATIC          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    FINAL           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    IF              reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    WHILE           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    DO              reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    SWITCH          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    FOREACH         reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    FOR             reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    CLOSETAG        reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    RBRACE          reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    BREAK           reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    ENDSWITCH       reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    CASE            reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)
    DEFAULT         reduce using rule 81 (if -> IF LPAREN conditions RPAREN body .)


state 322

    (112) while -> WHILE LPAREN condition RPAREN LBRACE . body RBRACE
    (113) while -> WHILE LPAREN condition RPAREN LBRACE . RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 362
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

  ! RBRACE          [ reduce using rule 71 (empty -> .) ]

    body                           shift and go to state 361
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 323

    (114) dowhile -> DO LBRACE body RBRACE WHILE . LPAREN condition RPAREN SEMICOLON

    LPAREN          shift and go to state 363


state 324

    (115) switch -> SWITCH LPAREN valor RPAREN LBRACE . caseLists RBRACE
    (117) caseLists -> . cases
    (118) caseLists -> . cases default
    (119) caseLists -> . default
    (120) caseLists -> . empty
    (121) cases -> . case
    (122) cases -> . case cases
    (142) default -> . DEFAULT COLON body BREAK SEMICOLON
    (143) default -> . DEFAULT SEMICOLON body BREAK SEMICOLON
    (144) default -> . DEFAULT COLON body
    (145) default -> . DEFAULT SEMICOLON body
    (146) default -> . DEFAULT
    (71) empty -> .
    (124) case -> . CASE valor COLON body BREAK SEMICOLON
    (125) case -> . CASE valor SEMICOLON body BREAK SEMICOLON
    (126) case -> . CASE valor COLON body
    (127) case -> . CASE valor SEMICOLON
    (128) case -> . CASE valor

    DEFAULT         shift and go to state 369
    RBRACE          reduce using rule 71 (empty -> .)
    CASE            shift and go to state 370

    caseLists                      shift and go to state 364
    cases                          shift and go to state 365
    default                        shift and go to state 366
    empty                          shift and go to state 367
    case                           shift and go to state 368

state 325

    (116) switch -> SWITCH LPAREN valor RPAREN COLON . caseLists ENDSWITCH SEMICOLON
    (117) caseLists -> . cases
    (118) caseLists -> . cases default
    (119) caseLists -> . default
    (120) caseLists -> . empty
    (121) cases -> . case
    (122) cases -> . case cases
    (142) default -> . DEFAULT COLON body BREAK SEMICOLON
    (143) default -> . DEFAULT SEMICOLON body BREAK SEMICOLON
    (144) default -> . DEFAULT COLON body
    (145) default -> . DEFAULT SEMICOLON body
    (146) default -> . DEFAULT
    (71) empty -> .
    (124) case -> . CASE valor COLON body BREAK SEMICOLON
    (125) case -> . CASE valor SEMICOLON body BREAK SEMICOLON
    (126) case -> . CASE valor COLON body
    (127) case -> . CASE valor SEMICOLON
    (128) case -> . CASE valor

    DEFAULT         shift and go to state 369
    ENDSWITCH       reduce using rule 71 (empty -> .)
    CASE            shift and go to state 370

    caseLists                      shift and go to state 371
    cases                          shift and go to state 365
    default                        shift and go to state 366
    empty                          shift and go to state 367
    case                           shift and go to state 368

state 326

    (123) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 372


state 327

    (109) forStatement -> FOR LPAREN forcondition RPAREN LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 373
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 328

    (110) forcondition -> VARIABLE EQUALS INT . SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT . SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    SEMICOLON       shift and go to state 374


state 329

    (36) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 375


state 330

    (201) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP . comparacion SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ID              shift and go to state 37

    comparacion                    shift and go to state 376
    valor                          shift and go to state 30
    expresion                      shift and go to state 28
    llamadaFuncion                 shift and go to state 107
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55

state 331

    (131) array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .

    VARIABLE        reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ECHO            reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PRINT           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    TRY             reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    RETURN          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ID              reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CLASS           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    INTERFACE       reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    INCLUDE         reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    NAMESPACE       reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    THROW           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CONST           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    THIS            reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    INT             reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    STRING          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    BOOL            reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    NULL            reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ARRAY           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ABSTRACT        reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PRIVATE         reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PROTECTED       reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    PUBLIC          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    STATIC          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FINAL           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    IF              reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    WHILE           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    DO              reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FOREACH         reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    FOR             reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CLOSETAG        reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    BREAK           reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    ENDSWITCH       reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    CASE            reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 131 (array -> VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON .)


state 332

    (137) map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .

    VARIABLE        reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ECHO            reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PRINT           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    TRY             reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FUNCTION        reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    RETURN          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ID              reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CLASS           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    INTERFACE       reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    INCLUDE         reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    NAMESPACE       reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    THROW           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CONST           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    THIS            reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    INT             reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FLOAT           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    STRING          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    BOOL            reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    NULL            reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ARRAY           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ABSTRACT        reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PRIVATE         reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PROTECTED       reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    PUBLIC          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    STATIC          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FINAL           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    IF              reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    WHILE           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    DO              reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    SWITCH          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FOREACH         reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    FOR             reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CLOSETAG        reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    BREAK           reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    ENDSWITCH       reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    CASE            reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)
    DEFAULT         reduce using rule 137 (map -> VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON .)


state 333

    (136) arrayAnidado -> arrays COMMA arrayAnidado .

    RBRACKET        reduce using rule 136 (arrayAnidado -> arrays COMMA arrayAnidado .)


state 334

    (140) maps -> mapArrow COMMA maps .

    RBRACKET        reduce using rule 140 (maps -> mapArrow COMMA maps .)
    RPAREN          reduce using rule 140 (maps -> mapArrow COMMA maps .)


state 335

    (141) mapArrow -> valor . ARROWMAP valor

    ARROWMAP        shift and go to state 285


state 336

    (141) mapArrow -> valor ARROWMAP valor .

    COMMA           reduce using rule 141 (mapArrow -> valor ARROWMAP valor .)
    RBRACKET        reduce using rule 141 (mapArrow -> valor ARROWMAP valor .)
    RPAREN          reduce using rule 141 (mapArrow -> valor ARROWMAP valor .)


state 337

    (132) array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 377


state 338

    (138) map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 378


state 339

    (168) objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 379


state 340

    (37) operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 380
    llamadaFuncion                 shift and go to state 107

state 341

    (38) operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .

    EQ              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    NEQ             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    STRICTEQ        reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    STRICTNEQ       reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    LT              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    GT              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    LEQ             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    GEQ             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    AND             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    LOGICAL_AND     reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    OR              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    LOGICAL_OR      reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    RPAREN          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    SEMICOLON       reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    VARIABLE        reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    ECHO            reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    PRINT           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    TRY             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    FUNCTION        reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    RETURN          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    ID              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    CLASS           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    INTERFACE       reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    INCLUDE         reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    NAMESPACE       reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    THROW           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    CONST           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    THIS            reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    INT             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    FLOAT           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    STRING          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    BOOL            reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    NULL            reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    ARRAY           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    LPAREN          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    ABSTRACT        reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    PRIVATE         reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    PROTECTED       reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    PUBLIC          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    STATIC          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    FINAL           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    IF              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    WHILE           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    DO              reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    SWITCH          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    FOREACH         reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    FOR             reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    CLOSETAG        reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    RBRACE          reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    BREAK           reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    ENDSWITCH       reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    CASE            reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)
    DEFAULT         reduce using rule 38 (operador_ternario -> LPAREN conditions RPAREN QUESTION COLON valor .)


state 342

    (39) operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .

    EQ              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    NEQ             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    STRICTEQ        reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    STRICTNEQ       reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    LT              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    GT              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    LEQ             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    GEQ             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    AND             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    LOGICAL_AND     reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    OR              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    LOGICAL_OR      reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    RPAREN          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    SEMICOLON       reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    VARIABLE        reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    ECHO            reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    PRINT           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    TRY             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    FUNCTION        reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    RETURN          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    ID              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    CLASS           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    INTERFACE       reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    INCLUDE         reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    NAMESPACE       reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    THROW           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    CONST           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    THIS            reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    INT             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    FLOAT           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    STRING          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    BOOL            reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    NULL            reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    ARRAY           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    LPAREN          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    ABSTRACT        reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    PRIVATE         reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    PROTECTED       reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    PUBLIC          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    STATIC          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    FINAL           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    IF              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    WHILE           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    DO              reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    SWITCH          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    FOREACH         reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    FOR             reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    CLOSETAG        reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    RBRACE          reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    BREAK           reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    ENDSWITCH       reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    CASE            reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)
    DEFAULT         reduce using rule 39 (operador_ternario -> LPAREN VARIABLE RPAREN QUESTION COLON valor .)


state 343

    (164) try -> TRY LBRACE body RBRACE catchs FINALLY . LBRACE body RBRACE

    LBRACE          shift and go to state 381


state 344

    (167) catchs -> catch catchs .

    FINALLY         reduce using rule 167 (catchs -> catch catchs .)
    VARIABLE        reduce using rule 167 (catchs -> catch catchs .)
    ECHO            reduce using rule 167 (catchs -> catch catchs .)
    PRINT           reduce using rule 167 (catchs -> catch catchs .)
    TRY             reduce using rule 167 (catchs -> catch catchs .)
    FUNCTION        reduce using rule 167 (catchs -> catch catchs .)
    RETURN          reduce using rule 167 (catchs -> catch catchs .)
    ID              reduce using rule 167 (catchs -> catch catchs .)
    CLASS           reduce using rule 167 (catchs -> catch catchs .)
    INTERFACE       reduce using rule 167 (catchs -> catch catchs .)
    INCLUDE         reduce using rule 167 (catchs -> catch catchs .)
    NAMESPACE       reduce using rule 167 (catchs -> catch catchs .)
    THROW           reduce using rule 167 (catchs -> catch catchs .)
    CONST           reduce using rule 167 (catchs -> catch catchs .)
    THIS            reduce using rule 167 (catchs -> catch catchs .)
    INT             reduce using rule 167 (catchs -> catch catchs .)
    FLOAT           reduce using rule 167 (catchs -> catch catchs .)
    STRING          reduce using rule 167 (catchs -> catch catchs .)
    BOOL            reduce using rule 167 (catchs -> catch catchs .)
    NULL            reduce using rule 167 (catchs -> catch catchs .)
    ARRAY           reduce using rule 167 (catchs -> catch catchs .)
    LPAREN          reduce using rule 167 (catchs -> catch catchs .)
    ABSTRACT        reduce using rule 167 (catchs -> catch catchs .)
    PRIVATE         reduce using rule 167 (catchs -> catch catchs .)
    PROTECTED       reduce using rule 167 (catchs -> catch catchs .)
    PUBLIC          reduce using rule 167 (catchs -> catch catchs .)
    STATIC          reduce using rule 167 (catchs -> catch catchs .)
    FINAL           reduce using rule 167 (catchs -> catch catchs .)
    IF              reduce using rule 167 (catchs -> catch catchs .)
    WHILE           reduce using rule 167 (catchs -> catch catchs .)
    DO              reduce using rule 167 (catchs -> catch catchs .)
    SWITCH          reduce using rule 167 (catchs -> catch catchs .)
    FOREACH         reduce using rule 167 (catchs -> catch catchs .)
    FOR             reduce using rule 167 (catchs -> catch catchs .)
    CLOSETAG        reduce using rule 167 (catchs -> catch catchs .)
    RBRACE          reduce using rule 167 (catchs -> catch catchs .)
    BREAK           reduce using rule 167 (catchs -> catch catchs .)
    ENDSWITCH       reduce using rule 167 (catchs -> catch catchs .)
    CASE            reduce using rule 167 (catchs -> catch catchs .)
    DEFAULT         reduce using rule 167 (catchs -> catch catchs .)


state 345

    (165) catch -> CATCH LPAREN . EXCEPTION VARIABLE RPAREN LBRACE body RBRACE

    EXCEPTION       shift and go to state 382


state 346

    (169) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 383
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 347

    (152) argumento -> type VARIABLE EQUALS valor .

    COMMA           reduce using rule 152 (argumento -> type VARIABLE EQUALS valor .)
    RPAREN          reduce using rule 152 (argumento -> type VARIABLE EQUALS valor .)


state 348

    (180) classMember -> type VARIABLE SEMICOLON .

    INT_TYPE        reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    FLOAT_TYPE      reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    STRING_TYPE     reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    BOOL_TYPE       reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    ARRAY_TYPE      reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    VOID            reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    NEW             reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)
    RBRACE          reduce using rule 180 (classMember -> type VARIABLE SEMICOLON .)


state 349

    (181) classMember -> type FUNCTION ID . LPAREN argumentos RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 384


state 350

    (183) objectInstantiation -> NEW ID LPAREN . argumentos RPAREN
    (184) objectInstantiation -> NEW ID LPAREN . RPAREN
    (147) argumentos -> . argumento
    (148) argumentos -> . argumento COMMA argumentos
    (149) argumentos -> . empty
    (150) argumento -> . type VARIABLE
    (151) argumento -> . VARIABLE EQUALS valor
    (152) argumento -> . type VARIABLE EQUALS valor
    (153) argumento -> . operaArit
    (154) argumento -> . valor
    (155) argumento -> . llamadaFuncion
    (156) argumento -> . VARIABLE
    (71) empty -> .
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 386
    VARIABLE        shift and go to state 192
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

  ! RPAREN          [ reduce using rule 71 (empty -> .) ]

    argumentos                     shift and go to state 385
    argumento                      shift and go to state 189
    empty                          shift and go to state 190
    type                           shift and go to state 191
    valor                          shift and go to state 193
    operaArit                      shift and go to state 194
    llamadaFuncion                 shift and go to state 195

state 351

    (175) classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody . RBRACE

    RBRACE          shift and go to state 387


state 352

    (186) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 388


state 353

    (190) impInterface -> ID COMMA impInterface .

    LBRACE          reduce using rule 190 (impInterface -> ID COMMA impInterface .)


state 354

    (185) classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 389


state 355

    (176) classDeclarate -> data CLASS ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ID              reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    INT             reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    IF              reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    DO              reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 176 (classDeclarate -> data CLASS ID LBRACE classBody RBRACE .)


state 356

    (187) classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 390
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 357

    (188) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS . impInterface LBRACE classBody RBRACE
    (189) impInterface -> . ID
    (190) impInterface -> . ID COMMA impInterface

    ID              shift and go to state 260

    impInterface                   shift and go to state 391

state 358

    (202) throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 392


state 359

    (207) thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ECHO            reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    TRY             reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CLASS           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    THROW           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CONST           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    THIS            reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    INT             reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    STRING          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    BOOL            reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    NULL            reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    STATIC          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FINAL           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FOREACH         reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    BREAK           reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    CASE            reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 207 (thisdeclaration -> THIS ARROW ID LPAREN RPAREN SEMICOLON .)


state 360

    (80) if -> IF LPAREN conditions RPAREN LBRACE body . RBRACE else_blocks

    RBRACE          shift and go to state 393


state 361

    (112) while -> WHILE LPAREN condition RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 394


state 362

    (113) while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .

    VARIABLE        reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ECHO            reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PRINT           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    TRY             reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FUNCTION        reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    RETURN          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ID              reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CLASS           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    INTERFACE       reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    INCLUDE         reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    NAMESPACE       reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    THROW           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CONST           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    THIS            reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    INT             reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FLOAT           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    STRING          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    BOOL            reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    NULL            reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ARRAY           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    LPAREN          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ABSTRACT        reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PRIVATE         reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PROTECTED       reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    PUBLIC          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    STATIC          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FINAL           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    IF              reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    WHILE           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    DO              reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    SWITCH          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FOREACH         reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    FOR             reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CLOSETAG        reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    RBRACE          reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    BREAK           reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    ENDSWITCH       reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    CASE            reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)
    DEFAULT         reduce using rule 113 (while -> WHILE LPAREN condition RPAREN LBRACE RBRACE .)


state 363

    (114) dowhile -> DO LBRACE body RBRACE WHILE LPAREN . condition RPAREN SEMICOLON
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    NOT             shift and go to state 108
    LPAREN          shift and go to state 170
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    condition                      shift and go to state 395
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 364

    (115) switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists . RBRACE

    RBRACE          shift and go to state 396


state 365

    (117) caseLists -> cases .
    (118) caseLists -> cases . default
    (142) default -> . DEFAULT COLON body BREAK SEMICOLON
    (143) default -> . DEFAULT SEMICOLON body BREAK SEMICOLON
    (144) default -> . DEFAULT COLON body
    (145) default -> . DEFAULT SEMICOLON body
    (146) default -> . DEFAULT

    RBRACE          reduce using rule 117 (caseLists -> cases .)
    ENDSWITCH       reduce using rule 117 (caseLists -> cases .)
    DEFAULT         shift and go to state 369

    default                        shift and go to state 397

state 366

    (119) caseLists -> default .

    RBRACE          reduce using rule 119 (caseLists -> default .)
    ENDSWITCH       reduce using rule 119 (caseLists -> default .)


state 367

    (120) caseLists -> empty .

    RBRACE          reduce using rule 120 (caseLists -> empty .)
    ENDSWITCH       reduce using rule 120 (caseLists -> empty .)


state 368

    (121) cases -> case .
    (122) cases -> case . cases
    (121) cases -> . case
    (122) cases -> . case cases
    (124) case -> . CASE valor COLON body BREAK SEMICOLON
    (125) case -> . CASE valor SEMICOLON body BREAK SEMICOLON
    (126) case -> . CASE valor COLON body
    (127) case -> . CASE valor SEMICOLON
    (128) case -> . CASE valor

    DEFAULT         reduce using rule 121 (cases -> case .)
    RBRACE          reduce using rule 121 (cases -> case .)
    ENDSWITCH       reduce using rule 121 (cases -> case .)
    CASE            shift and go to state 370

    case                           shift and go to state 368
    cases                          shift and go to state 398

state 369

    (142) default -> DEFAULT . COLON body BREAK SEMICOLON
    (143) default -> DEFAULT . SEMICOLON body BREAK SEMICOLON
    (144) default -> DEFAULT . COLON body
    (145) default -> DEFAULT . SEMICOLON body
    (146) default -> DEFAULT .

    COLON           shift and go to state 399
    SEMICOLON       shift and go to state 400
    RBRACE          reduce using rule 146 (default -> DEFAULT .)
    ENDSWITCH       reduce using rule 146 (default -> DEFAULT .)


state 370

    (124) case -> CASE . valor COLON body BREAK SEMICOLON
    (125) case -> CASE . valor SEMICOLON body BREAK SEMICOLON
    (126) case -> CASE . valor COLON body
    (127) case -> CASE . valor SEMICOLON
    (128) case -> CASE . valor
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    valor                          shift and go to state 401
    llamadaFuncion                 shift and go to state 107

state 371

    (116) switch -> SWITCH LPAREN valor RPAREN COLON caseLists . ENDSWITCH SEMICOLON

    ENDSWITCH       shift and go to state 402


state 372

    (123) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 403


state 373

    (109) forStatement -> FOR LPAREN forcondition RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 404


state 374

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON . VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON . VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS

    VARIABLE        shift and go to state 405


state 375

    (36) asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .

    VARIABLE        reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ECHO            reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PRINT           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    TRY             reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    RETURN          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ID              reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CLASS           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    THROW           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CONST           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    THIS            reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    INT             reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FLOAT           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    STRING          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    BOOL            reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    NULL            reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ARRAY           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    STATIC          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FINAL           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    IF              reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    DO              reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    SWITCH          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FOREACH         reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    BREAK           reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    CASE            reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 36 (asignacion_fgets -> VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON .)


state 376

    (201) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion . SEMICOLON
    (31) expresion -> comparacion .

    SEMICOLON       shift and go to state 406
    EQ              reduce using rule 31 (expresion -> comparacion .)
    NEQ             reduce using rule 31 (expresion -> comparacion .)
    STRICTEQ        reduce using rule 31 (expresion -> comparacion .)
    STRICTNEQ       reduce using rule 31 (expresion -> comparacion .)
    LT              reduce using rule 31 (expresion -> comparacion .)
    GT              reduce using rule 31 (expresion -> comparacion .)
    LEQ             reduce using rule 31 (expresion -> comparacion .)
    GEQ             reduce using rule 31 (expresion -> comparacion .)
    AND             reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_AND     reduce using rule 31 (expresion -> comparacion .)
    OR              reduce using rule 31 (expresion -> comparacion .)
    LOGICAL_OR      reduce using rule 31 (expresion -> comparacion .)


state 377

    (132) array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .

    VARIABLE        reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ECHO            reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PRINT           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    TRY             reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    RETURN          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ID              reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CLASS           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    THROW           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CONST           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    THIS            reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    INT             reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FLOAT           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    STRING          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    BOOL            reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    NULL            reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ARRAY           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    LPAREN          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    STATIC          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FINAL           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    IF              reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    WHILE           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    DO              reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    SWITCH          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FOREACH         reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    FOR             reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    RBRACE          reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    BREAK           reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    CASE            reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 132 (array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON .)


state 378

    (138) map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .

    VARIABLE        reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ECHO            reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PRINT           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    TRY             reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    RETURN          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ID              reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CLASS           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    THROW           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CONST           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    THIS            reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    INT             reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FLOAT           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    STRING          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    BOOL            reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    NULL            reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ARRAY           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    LPAREN          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    STATIC          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FINAL           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    IF              reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    WHILE           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    DO              reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    SWITCH          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FOREACH         reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    FOR             reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    RBRACE          reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    BREAK           reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    CASE            reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 138 (map -> VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON .)


state 379

    (168) objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .

    VARIABLE        reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ECHO            reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PRINT           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    TRY             reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    RETURN          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ID              reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CLASS           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    THROW           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CONST           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    THIS            reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    INT             reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FLOAT           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    STRING          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    BOOL            reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    NULL            reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ARRAY           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    LPAREN          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    STATIC          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FINAL           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    IF              reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    WHILE           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    DO              reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    SWITCH          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FOREACH         reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    FOR             reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    RBRACE          reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    BREAK           reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    CASE            reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 168 (objeto -> VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON .)


state 380

    (37) operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .

    EQ              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    NEQ             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    STRICTEQ        reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    STRICTNEQ       reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    LT              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    GT              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    LEQ             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    GEQ             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    AND             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    LOGICAL_AND     reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    OR              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    LOGICAL_OR      reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    RPAREN          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    SEMICOLON       reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    VARIABLE        reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    ECHO            reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    PRINT           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    TRY             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    FUNCTION        reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    RETURN          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    ID              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    CLASS           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    INTERFACE       reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    INCLUDE         reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    NAMESPACE       reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    THROW           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    CONST           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    THIS            reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    INT             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    FLOAT           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    STRING          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    BOOL            reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    NULL            reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    ARRAY           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    LPAREN          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    ABSTRACT        reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    PRIVATE         reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    PROTECTED       reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    PUBLIC          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    STATIC          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    FINAL           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    IF              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    WHILE           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    DO              reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    SWITCH          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    FOREACH         reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    FOR             reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    CLOSETAG        reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    RBRACE          reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    BREAK           reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    ENDSWITCH       reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    CASE            reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)
    DEFAULT         reduce using rule 37 (operador_ternario -> LPAREN conditions RPAREN QUESTION valor COLON valor .)


state 381

    (164) try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 407
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 382

    (165) catch -> CATCH LPAREN EXCEPTION . VARIABLE RPAREN LBRACE body RBRACE

    VARIABLE        shift and go to state 408


state 383

    (169) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 409


state 384

    (181) classMember -> type FUNCTION ID LPAREN . argumentos RPAREN LBRACE body RBRACE
    (147) argumentos -> . argumento
    (148) argumentos -> . argumento COMMA argumentos
    (149) argumentos -> . empty
    (150) argumento -> . type VARIABLE
    (151) argumento -> . VARIABLE EQUALS valor
    (152) argumento -> . type VARIABLE EQUALS valor
    (153) argumento -> . operaArit
    (154) argumento -> . valor
    (155) argumento -> . llamadaFuncion
    (156) argumento -> . VARIABLE
    (71) empty -> .
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    VARIABLE        shift and go to state 192
    RPAREN          reduce using rule 71 (empty -> .)
    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    LPAREN          shift and go to state 174
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    type                           shift and go to state 191
    argumentos                     shift and go to state 410
    argumento                      shift and go to state 189
    empty                          shift and go to state 190
    valor                          shift and go to state 193
    operaArit                      shift and go to state 194
    llamadaFuncion                 shift and go to state 195

state 385

    (183) objectInstantiation -> NEW ID LPAREN argumentos . RPAREN

    RPAREN          shift and go to state 411


state 386

    (184) objectInstantiation -> NEW ID LPAREN RPAREN .

    INT_TYPE        reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    FLOAT_TYPE      reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    STRING_TYPE     reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    BOOL_TYPE       reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    ARRAY_TYPE      reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    VOID            reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    NEW             reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)
    RBRACE          reduce using rule 184 (objectInstantiation -> NEW ID LPAREN RPAREN .)


state 387

    (175) classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ECHO            reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PRINT           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    TRY             reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    RETURN          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ID              reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CLASS           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    THROW           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CONST           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    THIS            reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    INT             reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    STRING          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    BOOL            reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    NULL            reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    STATIC          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FINAL           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    IF              reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    WHILE           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    DO              reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    FOR             reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    BREAK           reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    CASE            reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 175 (classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE .)


state 388

    (186) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 412
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 389

    (185) classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 185 (classInterface -> CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 390

    (187) classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 413


state 391

    (188) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface . LBRACE classBody RBRACE

    LBRACE          shift and go to state 414


state 392

    (202) throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .

    VARIABLE        reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ECHO            reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PRINT           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    TRY             reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    RETURN          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ID              reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CLASS           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    THROW           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CONST           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    THIS            reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    INT             reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FLOAT           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    STRING          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    BOOL            reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    NULL            reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ARRAY           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    LPAREN          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    STATIC          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FINAL           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    IF              reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    WHILE           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    DO              reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    SWITCH          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FOREACH         reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    FOR             reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    RBRACE          reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    BREAK           reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    CASE            reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 202 (throw -> THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON .)


state 393

    (80) if -> IF LPAREN conditions RPAREN LBRACE body RBRACE . else_blocks
    (82) else_blocks -> . ELSE LBRACE body RBRACE
    (83) else_blocks -> . ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (84) else_blocks -> . empty
    (71) empty -> .

    ELSE            shift and go to state 416
    ELSEIF          shift and go to state 417
    VARIABLE        reduce using rule 71 (empty -> .)
    ECHO            reduce using rule 71 (empty -> .)
    PRINT           reduce using rule 71 (empty -> .)
    TRY             reduce using rule 71 (empty -> .)
    FUNCTION        reduce using rule 71 (empty -> .)
    RETURN          reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)
    CLASS           reduce using rule 71 (empty -> .)
    INTERFACE       reduce using rule 71 (empty -> .)
    INCLUDE         reduce using rule 71 (empty -> .)
    NAMESPACE       reduce using rule 71 (empty -> .)
    THROW           reduce using rule 71 (empty -> .)
    CONST           reduce using rule 71 (empty -> .)
    THIS            reduce using rule 71 (empty -> .)
    INT             reduce using rule 71 (empty -> .)
    FLOAT           reduce using rule 71 (empty -> .)
    STRING          reduce using rule 71 (empty -> .)
    BOOL            reduce using rule 71 (empty -> .)
    NULL            reduce using rule 71 (empty -> .)
    ARRAY           reduce using rule 71 (empty -> .)
    LPAREN          reduce using rule 71 (empty -> .)
    ABSTRACT        reduce using rule 71 (empty -> .)
    PRIVATE         reduce using rule 71 (empty -> .)
    PROTECTED       reduce using rule 71 (empty -> .)
    PUBLIC          reduce using rule 71 (empty -> .)
    STATIC          reduce using rule 71 (empty -> .)
    FINAL           reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    WHILE           reduce using rule 71 (empty -> .)
    DO              reduce using rule 71 (empty -> .)
    SWITCH          reduce using rule 71 (empty -> .)
    FOREACH         reduce using rule 71 (empty -> .)
    FOR             reduce using rule 71 (empty -> .)
    CLOSETAG        reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    BREAK           reduce using rule 71 (empty -> .)
    ENDSWITCH       reduce using rule 71 (empty -> .)
    CASE            reduce using rule 71 (empty -> .)
    DEFAULT         reduce using rule 71 (empty -> .)

    else_blocks                    shift and go to state 415
    empty                          shift and go to state 418

state 394

    (112) while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    LPAREN          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 112 (while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE .)


state 395

    (114) dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition . RPAREN SEMICOLON

    RPAREN          shift and go to state 419


state 396

    (115) switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .

    VARIABLE        reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ECHO            reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PRINT           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    TRY             reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FUNCTION        reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    RETURN          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ID              reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CLASS           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    INTERFACE       reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    INCLUDE         reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    NAMESPACE       reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    THROW           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CONST           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    THIS            reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    INT             reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FLOAT           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    STRING          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    BOOL            reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    NULL            reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ARRAY           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    LPAREN          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ABSTRACT        reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PRIVATE         reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PROTECTED       reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    PUBLIC          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    STATIC          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FINAL           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    IF              reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    WHILE           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    DO              reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    SWITCH          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FOREACH         reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    FOR             reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CLOSETAG        reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    RBRACE          reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    BREAK           reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    ENDSWITCH       reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    CASE            reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)
    DEFAULT         reduce using rule 115 (switch -> SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE .)


state 397

    (118) caseLists -> cases default .

    RBRACE          reduce using rule 118 (caseLists -> cases default .)
    ENDSWITCH       reduce using rule 118 (caseLists -> cases default .)


state 398

    (122) cases -> case cases .

    DEFAULT         reduce using rule 122 (cases -> case cases .)
    RBRACE          reduce using rule 122 (cases -> case cases .)
    ENDSWITCH       reduce using rule 122 (cases -> case cases .)


state 399

    (142) default -> DEFAULT COLON . body BREAK SEMICOLON
    (144) default -> DEFAULT COLON . body
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    BREAK           reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    ENDSWITCH       reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 420
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 400

    (143) default -> DEFAULT SEMICOLON . body BREAK SEMICOLON
    (145) default -> DEFAULT SEMICOLON . body
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    BREAK           reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    ENDSWITCH       reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 421
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 401

    (124) case -> CASE valor . COLON body BREAK SEMICOLON
    (125) case -> CASE valor . SEMICOLON body BREAK SEMICOLON
    (126) case -> CASE valor . COLON body
    (127) case -> CASE valor . SEMICOLON
    (128) case -> CASE valor .

    COLON           shift and go to state 422
    SEMICOLON       shift and go to state 423
    CASE            reduce using rule 128 (case -> CASE valor .)
    DEFAULT         reduce using rule 128 (case -> CASE valor .)
    RBRACE          reduce using rule 128 (case -> CASE valor .)
    ENDSWITCH       reduce using rule 128 (case -> CASE valor .)


state 402

    (116) switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH . SEMICOLON

    SEMICOLON       shift and go to state 424


state 403

    (123) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 425
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 404

    (109) forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    LPAREN          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 109 (forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE .)


state 405

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE . opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE . opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS
    (92) opSymbol -> . EQ
    (93) opSymbol -> . NEQ
    (94) opSymbol -> . STRICTEQ
    (95) opSymbol -> . STRICTNEQ
    (96) opSymbol -> . LT
    (97) opSymbol -> . GT
    (98) opSymbol -> . LEQ
    (99) opSymbol -> . GEQ

    EQ              shift and go to state 87
    NEQ             shift and go to state 88
    STRICTEQ        shift and go to state 89
    STRICTNEQ       shift and go to state 90
    LT              shift and go to state 91
    GT              shift and go to state 92
    LEQ             shift and go to state 93
    GEQ             shift and go to state 94

    opSymbol                       shift and go to state 426

state 406

    (201) anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .

    VARIABLE        reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ECHO            reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PRINT           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    TRY             reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FUNCTION        reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    RETURN          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ID              reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CLASS           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    INTERFACE       reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    INCLUDE         reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    NAMESPACE       reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    THROW           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CONST           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    THIS            reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    INT             reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FLOAT           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    STRING          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    BOOL            reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    NULL            reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ARRAY           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    LPAREN          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ABSTRACT        reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PRIVATE         reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PROTECTED       reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    PUBLIC          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    STATIC          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FINAL           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    IF              reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    WHILE           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    DO              reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    SWITCH          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FOREACH         reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    FOR             reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CLOSETAG        reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    RBRACE          reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    BREAK           reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    ENDSWITCH       reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    CASE            reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)
    DEFAULT         reduce using rule 201 (anonymousFunction -> VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON .)


state 407

    (164) try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body . RBRACE

    RBRACE          shift and go to state 427


state 408

    (165) catch -> CATCH LPAREN EXCEPTION VARIABLE . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 428


state 409

    (169) funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    LPAREN          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 169 (funcionDeclaration -> FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)


state 410

    (181) classMember -> type FUNCTION ID LPAREN argumentos . RPAREN LBRACE body RBRACE

    RPAREN          shift and go to state 429


state 411

    (183) objectInstantiation -> NEW ID LPAREN argumentos RPAREN .

    INT_TYPE        reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    FLOAT_TYPE      reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    STRING_TYPE     reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    BOOL_TYPE       reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    ARRAY_TYPE      reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    VOID            reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    NEW             reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)
    RBRACE          reduce using rule 183 (objectInstantiation -> NEW ID LPAREN argumentos RPAREN .)


state 412

    (186) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 430


state 413

    (187) classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 187 (classInterface -> data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 414

    (188) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE . classBody RBRACE
    (178) classBody -> . classMember
    (179) classBody -> . classMember classBody
    (180) classMember -> . type VARIABLE SEMICOLON
    (181) classMember -> . type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (182) classMember -> . objectInstantiation
    (157) type -> . INT_TYPE
    (158) type -> . FLOAT_TYPE
    (159) type -> . STRING_TYPE
    (160) type -> . BOOL_TYPE
    (161) type -> . ARRAY_TYPE
    (162) type -> . VOID
    (183) objectInstantiation -> . NEW ID LPAREN argumentos RPAREN
    (184) objectInstantiation -> . NEW ID LPAREN RPAREN

    INT_TYPE        shift and go to state 196
    FLOAT_TYPE      shift and go to state 197
    STRING_TYPE     shift and go to state 198
    BOOL_TYPE       shift and go to state 199
    ARRAY_TYPE      shift and go to state 200
    VOID            shift and go to state 201
    NEW             shift and go to state 258

    classBody                      shift and go to state 431
    classMember                    shift and go to state 255
    type                           shift and go to state 256
    objectInstantiation            shift and go to state 257

state 415

    (80) if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .

    VARIABLE        reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ECHO            reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRINT           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    TRY             reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FUNCTION        reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RETURN          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ID              reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLASS           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INTERFACE       reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INCLUDE         reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NAMESPACE       reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THROW           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CONST           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THIS            reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INT             reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FLOAT           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STRING          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BOOL            reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NULL            reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ARRAY           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    LPAREN          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ABSTRACT        reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRIVATE         reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PROTECTED       reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PUBLIC          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STATIC          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FINAL           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    IF              reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    WHILE           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DO              reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    SWITCH          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOREACH         reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOR             reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLOSETAG        reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RBRACE          reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BREAK           reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ENDSWITCH       reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CASE            reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DEFAULT         reduce using rule 80 (if -> IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)


state 416

    (82) else_blocks -> ELSE . LBRACE body RBRACE

    LBRACE          shift and go to state 432


state 417

    (83) else_blocks -> ELSEIF . LPAREN conditions RPAREN LBRACE body RBRACE else_blocks

    LPAREN          shift and go to state 433


state 418

    (84) else_blocks -> empty .

    VARIABLE        reduce using rule 84 (else_blocks -> empty .)
    ECHO            reduce using rule 84 (else_blocks -> empty .)
    PRINT           reduce using rule 84 (else_blocks -> empty .)
    TRY             reduce using rule 84 (else_blocks -> empty .)
    FUNCTION        reduce using rule 84 (else_blocks -> empty .)
    RETURN          reduce using rule 84 (else_blocks -> empty .)
    ID              reduce using rule 84 (else_blocks -> empty .)
    CLASS           reduce using rule 84 (else_blocks -> empty .)
    INTERFACE       reduce using rule 84 (else_blocks -> empty .)
    INCLUDE         reduce using rule 84 (else_blocks -> empty .)
    NAMESPACE       reduce using rule 84 (else_blocks -> empty .)
    THROW           reduce using rule 84 (else_blocks -> empty .)
    CONST           reduce using rule 84 (else_blocks -> empty .)
    THIS            reduce using rule 84 (else_blocks -> empty .)
    INT             reduce using rule 84 (else_blocks -> empty .)
    FLOAT           reduce using rule 84 (else_blocks -> empty .)
    STRING          reduce using rule 84 (else_blocks -> empty .)
    BOOL            reduce using rule 84 (else_blocks -> empty .)
    NULL            reduce using rule 84 (else_blocks -> empty .)
    ARRAY           reduce using rule 84 (else_blocks -> empty .)
    LPAREN          reduce using rule 84 (else_blocks -> empty .)
    ABSTRACT        reduce using rule 84 (else_blocks -> empty .)
    PRIVATE         reduce using rule 84 (else_blocks -> empty .)
    PROTECTED       reduce using rule 84 (else_blocks -> empty .)
    PUBLIC          reduce using rule 84 (else_blocks -> empty .)
    STATIC          reduce using rule 84 (else_blocks -> empty .)
    FINAL           reduce using rule 84 (else_blocks -> empty .)
    IF              reduce using rule 84 (else_blocks -> empty .)
    WHILE           reduce using rule 84 (else_blocks -> empty .)
    DO              reduce using rule 84 (else_blocks -> empty .)
    SWITCH          reduce using rule 84 (else_blocks -> empty .)
    FOREACH         reduce using rule 84 (else_blocks -> empty .)
    FOR             reduce using rule 84 (else_blocks -> empty .)
    CLOSETAG        reduce using rule 84 (else_blocks -> empty .)
    RBRACE          reduce using rule 84 (else_blocks -> empty .)
    BREAK           reduce using rule 84 (else_blocks -> empty .)
    ENDSWITCH       reduce using rule 84 (else_blocks -> empty .)
    CASE            reduce using rule 84 (else_blocks -> empty .)
    DEFAULT         reduce using rule 84 (else_blocks -> empty .)


state 419

    (114) dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 434


state 420

    (142) default -> DEFAULT COLON body . BREAK SEMICOLON
    (144) default -> DEFAULT COLON body .

    BREAK           shift and go to state 435
    RBRACE          reduce using rule 144 (default -> DEFAULT COLON body .)
    ENDSWITCH       reduce using rule 144 (default -> DEFAULT COLON body .)


state 421

    (143) default -> DEFAULT SEMICOLON body . BREAK SEMICOLON
    (145) default -> DEFAULT SEMICOLON body .

    BREAK           shift and go to state 436
    RBRACE          reduce using rule 145 (default -> DEFAULT SEMICOLON body .)
    ENDSWITCH       reduce using rule 145 (default -> DEFAULT SEMICOLON body .)


state 422

    (124) case -> CASE valor COLON . body BREAK SEMICOLON
    (126) case -> CASE valor COLON . body
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    BREAK           reduce using rule 71 (empty -> .)
    CASE            reduce using rule 71 (empty -> .)
    DEFAULT         reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    ENDSWITCH       reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    valor                          shift and go to state 30
    body                           shift and go to state 437
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 423

    (125) case -> CASE valor SEMICOLON . body BREAK SEMICOLON
    (127) case -> CASE valor SEMICOLON .
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    CASE            reduce using rule 127 (case -> CASE valor SEMICOLON .)
    DEFAULT         reduce using rule 127 (case -> CASE valor SEMICOLON .)
    RBRACE          reduce using rule 127 (case -> CASE valor SEMICOLON .)
    ENDSWITCH       reduce using rule 127 (case -> CASE valor SEMICOLON .)
    BREAK           reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    valor                          shift and go to state 30
    body                           shift and go to state 438
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 424

    (116) switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .

    VARIABLE        reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ECHO            reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PRINT           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    TRY             reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FUNCTION        reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    RETURN          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ID              reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CLASS           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    INTERFACE       reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    INCLUDE         reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    NAMESPACE       reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    THROW           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CONST           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    THIS            reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    INT             reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FLOAT           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    STRING          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    BOOL            reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    NULL            reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ARRAY           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    LPAREN          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ABSTRACT        reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PRIVATE         reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PROTECTED       reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    PUBLIC          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    STATIC          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FINAL           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    IF              reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    WHILE           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    DO              reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    SWITCH          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FOREACH         reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    FOR             reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CLOSETAG        reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    RBRACE          reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    BREAK           reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    ENDSWITCH       reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    CASE            reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)
    DEFAULT         reduce using rule 116 (switch -> SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON .)


state 425

    (123) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 439


state 426

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol . INT SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol . INT SEMICOLON VARIABLE DOUBLEMINUS

    INT             shift and go to state 440


state 427

    (164) try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .

    VARIABLE        reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ECHO            reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PRINT           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    TRY             reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FUNCTION        reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    RETURN          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ID              reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CLASS           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    INTERFACE       reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    INCLUDE         reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    THROW           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CONST           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    THIS            reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    INT             reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FLOAT           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    STRING          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    BOOL            reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    NULL            reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ARRAY           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    LPAREN          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PRIVATE         reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PROTECTED       reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    PUBLIC          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    STATIC          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FINAL           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    IF              reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    WHILE           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    DO              reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    SWITCH          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FOREACH         reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    FOR             reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    RBRACE          reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    BREAK           reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    CASE            reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)
    DEFAULT         reduce using rule 164 (try -> TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE .)


state 428

    (165) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 441


state 429

    (181) classMember -> type FUNCTION ID LPAREN argumentos RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 442


state 430

    (186) classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 186 (classInterface -> CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 431

    (188) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody . RBRACE

    RBRACE          shift and go to state 443


state 432

    (82) else_blocks -> ELSE LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 444
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 433

    (83) else_blocks -> ELSEIF LPAREN . conditions RPAREN LBRACE body RBRACE else_blocks
    (85) conditions -> . condition
    (86) conditions -> . condition opLogic conditions
    (87) conditions -> . LPAREN conditions RPAREN
    (88) condition -> . valor
    (89) condition -> . valor opSymbol valor
    (90) condition -> . NOT condition
    (91) condition -> . LPAREN conditions RPAREN
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN

    LPAREN          shift and go to state 176
    NOT             shift and go to state 108
    INT             shift and go to state 49
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    ID              shift and go to state 37

    conditions                     shift and go to state 445
    condition                      shift and go to state 106
    valor                          shift and go to state 169
    llamadaFuncion                 shift and go to state 107

state 434

    (114) dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .

    VARIABLE        reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ECHO            reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PRINT           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    TRY             reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    RETURN          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ID              reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CLASS           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    INTERFACE       reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    INCLUDE         reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    NAMESPACE       reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    THROW           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CONST           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    THIS            reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    INT             reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FLOAT           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    STRING          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    BOOL            reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    NULL            reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ARRAY           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    LPAREN          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ABSTRACT        reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PRIVATE         reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PROTECTED       reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    STATIC          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FINAL           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    IF              reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    WHILE           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    DO              reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    SWITCH          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FOREACH         reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    FOR             reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CLOSETAG        reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    RBRACE          reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    BREAK           reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    ENDSWITCH       reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    CASE            reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)
    DEFAULT         reduce using rule 114 (dowhile -> DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON .)


state 435

    (142) default -> DEFAULT COLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 446


state 436

    (143) default -> DEFAULT SEMICOLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 447


state 437

    (124) case -> CASE valor COLON body . BREAK SEMICOLON
    (126) case -> CASE valor COLON body .

    BREAK           shift and go to state 448
    CASE            reduce using rule 126 (case -> CASE valor COLON body .)
    DEFAULT         reduce using rule 126 (case -> CASE valor COLON body .)
    RBRACE          reduce using rule 126 (case -> CASE valor COLON body .)
    ENDSWITCH       reduce using rule 126 (case -> CASE valor COLON body .)


state 438

    (125) case -> CASE valor SEMICOLON body . BREAK SEMICOLON

    BREAK           shift and go to state 449


state 439

    (123) foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .

    VARIABLE        reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    LPAREN          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 123 (foreach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE .)


state 440

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT . SEMICOLON VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT . SEMICOLON VARIABLE DOUBLEMINUS

    SEMICOLON       shift and go to state 450


state 441

    (165) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 451
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 442

    (181) classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE . body RBRACE
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 452
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 443

    (188) classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .

    VARIABLE        reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ECHO            reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRINT           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    TRY             reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FUNCTION        reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RETURN          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ID              reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLASS           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INTERFACE       reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INCLUDE         reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NAMESPACE       reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THROW           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CONST           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    THIS            reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    INT             reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FLOAT           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STRING          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BOOL            reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    NULL            reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ARRAY           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    LPAREN          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ABSTRACT        reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PRIVATE         reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PROTECTED       reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    PUBLIC          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    STATIC          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FINAL           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    IF              reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    WHILE           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DO              reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    SWITCH          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOREACH         reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    FOR             reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CLOSETAG        reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    RBRACE          reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    BREAK           reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    ENDSWITCH       reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    CASE            reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)
    DEFAULT         reduce using rule 188 (classInterface -> data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE .)


state 444

    (82) else_blocks -> ELSE LBRACE body . RBRACE

    RBRACE          shift and go to state 453


state 445

    (83) else_blocks -> ELSEIF LPAREN conditions . RPAREN LBRACE body RBRACE else_blocks

    RPAREN          shift and go to state 454


state 446

    (142) default -> DEFAULT COLON body BREAK SEMICOLON .

    RBRACE          reduce using rule 142 (default -> DEFAULT COLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 142 (default -> DEFAULT COLON body BREAK SEMICOLON .)


state 447

    (143) default -> DEFAULT SEMICOLON body BREAK SEMICOLON .

    RBRACE          reduce using rule 143 (default -> DEFAULT SEMICOLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 143 (default -> DEFAULT SEMICOLON body BREAK SEMICOLON .)


state 448

    (124) case -> CASE valor COLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 455


state 449

    (125) case -> CASE valor SEMICOLON body BREAK . SEMICOLON

    SEMICOLON       shift and go to state 456


state 450

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON . VARIABLE DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON . VARIABLE DOUBLEMINUS

    VARIABLE        shift and go to state 457


state 451

    (165) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 458


state 452

    (181) classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 459


state 453

    (82) else_blocks -> ELSE LBRACE body RBRACE .

    VARIABLE        reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    ECHO            reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    PRINT           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    TRY             reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    FUNCTION        reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    RETURN          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    ID              reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    CLASS           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    INTERFACE       reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    INCLUDE         reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    THROW           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    CONST           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    THIS            reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    INT             reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    FLOAT           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    STRING          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    BOOL            reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    NULL            reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    ARRAY           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    LPAREN          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    PRIVATE         reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    PROTECTED       reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    PUBLIC          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    STATIC          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    FINAL           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    IF              reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    WHILE           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    DO              reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    SWITCH          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    FOREACH         reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    FOR             reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    RBRACE          reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    BREAK           reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    CASE            reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)
    DEFAULT         reduce using rule 82 (else_blocks -> ELSE LBRACE body RBRACE .)


state 454

    (83) else_blocks -> ELSEIF LPAREN conditions RPAREN . LBRACE body RBRACE else_blocks

    LBRACE          shift and go to state 460


state 455

    (124) case -> CASE valor COLON body BREAK SEMICOLON .

    CASE            reduce using rule 124 (case -> CASE valor COLON body BREAK SEMICOLON .)
    DEFAULT         reduce using rule 124 (case -> CASE valor COLON body BREAK SEMICOLON .)
    RBRACE          reduce using rule 124 (case -> CASE valor COLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 124 (case -> CASE valor COLON body BREAK SEMICOLON .)


state 456

    (125) case -> CASE valor SEMICOLON body BREAK SEMICOLON .

    CASE            reduce using rule 125 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)
    DEFAULT         reduce using rule 125 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)
    RBRACE          reduce using rule 125 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)
    ENDSWITCH       reduce using rule 125 (case -> CASE valor SEMICOLON body BREAK SEMICOLON .)


state 457

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE . DOUBLEPLUS
    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE . DOUBLEMINUS

    DOUBLEPLUS      shift and go to state 461
    DOUBLEMINUS     shift and go to state 462


state 458

    (165) catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .

    CATCH           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FINALLY         reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    VARIABLE        reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ECHO            reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PRINT           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    TRY             reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FUNCTION        reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    RETURN          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CLASS           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    INTERFACE       reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    INCLUDE         reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    NAMESPACE       reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    THROW           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    THIS            reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FLOAT           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    NULL            reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ARRAY           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    LPAREN          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ABSTRACT        reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PRIVATE         reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PROTECTED       reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    PUBLIC          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    STATIC          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FINAL           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    IF              reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    WHILE           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    DO              reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    SWITCH          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FOREACH         reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    FOR             reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CLOSETAG        reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    BREAK           reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    ENDSWITCH       reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    CASE            reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)
    DEFAULT         reduce using rule 165 (catch -> CATCH LPAREN EXCEPTION VARIABLE RPAREN LBRACE body RBRACE .)


state 459

    (181) classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .

    INT_TYPE        reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    FLOAT_TYPE      reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    STRING_TYPE     reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    BOOL_TYPE       reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    ARRAY_TYPE      reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    VOID            reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    NEW             reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 181 (classMember -> type FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE .)


state 460

    (83) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE . body RBRACE else_blocks
    (104) body -> . sentenciaList
    (105) body -> . empty
    (106) sentenciaList -> . sentencia
    (107) sentenciaList -> . sentencia sentenciaList
    (71) empty -> .
    (4) sentencia -> . asignacion
    (5) sentencia -> . asignacion_fgets
    (6) sentencia -> . comparacion
    (7) sentencia -> . impresion
    (8) sentencia -> . estructurasPrograma
    (9) sentencia -> . try
    (10) sentencia -> . funcionDeclaration
    (11) sentencia -> . returnStatement
    (12) sentencia -> . llamadaFuncion
    (13) sentencia -> . classDeclarate
    (14) sentencia -> . interface
    (15) sentencia -> . objeto
    (16) sentencia -> . includes
    (17) sentencia -> . namespace
    (18) sentencia -> . anonymousFunction
    (19) sentencia -> . throw
    (20) sentencia -> . instance
    (21) sentencia -> . constdeclaration
    (22) sentencia -> . thisdeclaration
    (23) sentencia -> . concatenate
    (24) sentencia -> . minuse
    (25) sentencia -> . pluse
    (28) asignacion -> . VARIABLE EQUALS expresion SEMICOLON
    (36) asignacion_fgets -> . VARIABLE EQUALS FGETS LPAREN STDIN RPAREN SEMICOLON
    (60) comparacion -> . valor opSymbol valor
    (61) comparacion -> . expresion opSymbol expresion
    (62) impresion -> . ECHO imprimir SEMICOLON
    (63) impresion -> . PRINT imprimir SEMICOLON
    (72) estructurasPrograma -> . controlStructure
    (73) estructurasPrograma -> . dataStructure
    (163) try -> . TRY LBRACE body RBRACE catchs
    (164) try -> . TRY LBRACE body RBRACE catchs FINALLY LBRACE body RBRACE
    (169) funcionDeclaration -> . FUNCTION ID LPAREN argumentos RPAREN LBRACE body RBRACE
    (26) returnStatement -> . RETURN expresion SEMICOLON
    (27) returnStatement -> . RETURN SEMICOLON
    (170) llamadaFuncion -> . ID LPAREN argumentos RPAREN SEMICOLON
    (171) llamadaFuncion -> . ID LPAREN argumentos RPAREN
    (172) llamadaFuncion -> . ID LPAREN RPAREN SEMICOLON
    (173) llamadaFuncion -> . ID LPAREN RPAREN
    (174) classDeclarate -> . CLASS ID LBRACE classBody RBRACE
    (175) classDeclarate -> . CLASS ID EXTENDS ID LBRACE classBody RBRACE
    (176) classDeclarate -> . data CLASS ID LBRACE classBody RBRACE
    (177) classDeclarate -> . classInterface
    (197) interface -> . INTERFACE ID LBRACE classBody RBRACE
    (168) objeto -> . VARIABLE ARROW ID LPAREN argumentos RPAREN SEMICOLON
    (198) includes -> . INCLUDE STRING SEMICOLON
    (199) includes -> . INCLUDE STRING DOT STRING SEMICOLON
    (200) namespace -> . NAMESPACE ID SEMICOLON
    (201) anonymousFunction -> . VARIABLE EQUALS FN LPAREN RPAREN ARROWMAP comparacion SEMICOLON
    (202) throw -> . THROW NEW EXCEPTION LPAREN repiteValores RPAREN SEMICOLON
    (203) throw -> . THROW valor SEMICOLON
    (204) instance -> . VARIABLE INSTANCEOF ID
    (205) constdeclaration -> . CONST ID EQUALS valor SEMICOLON
    (206) thisdeclaration -> . THIS ARROW ID SEMICOLON
    (207) thisdeclaration -> . THIS ARROW ID LPAREN RPAREN SEMICOLON
    (208) concatenate -> . VARIABLE CONCATENATEEQUAL STRING
    (209) minuse -> . VARIABLE MINUSEQUAL INT
    (210) pluse -> . VARIABLE PLUSEQUAL INT
    (46) valor -> . INT
    (47) valor -> . VARIABLE
    (48) valor -> . FLOAT
    (49) valor -> . STRING
    (50) valor -> . BOOL
    (51) valor -> . NULL
    (52) valor -> . ARRAY
    (53) valor -> . llamadaFuncion
    (29) expresion -> . valor
    (30) expresion -> . expresion opLogic expresion
    (31) expresion -> . comparacion
    (32) expresion -> . LPAREN comparacion RPAREN
    (33) expresion -> . operaArit
    (34) expresion -> . LPAREN expresion RPAREN
    (35) expresion -> . operador_ternario
    (74) controlStructure -> . if
    (75) controlStructure -> . for
    (76) controlStructure -> . while
    (77) controlStructure -> . dowhile
    (78) controlStructure -> . switch
    (79) controlStructure -> . foreach
    (129) dataStructure -> . array
    (191) data -> . ABSTRACT
    (192) data -> . PRIVATE
    (193) data -> . PROTECTED
    (194) data -> . PUBLIC
    (195) data -> . STATIC
    (196) data -> . FINAL
    (185) classInterface -> . CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (186) classInterface -> . CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (187) classInterface -> . data CLASS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (188) classInterface -> . data CLASS ID EXTENDS ID IMPLEMENTS impInterface LBRACE classBody RBRACE
    (40) operaArit -> . valor
    (41) operaArit -> . valor operador operaArit
    (42) operaArit -> . LPAREN operaArit RPAREN
    (37) operador_ternario -> . LPAREN conditions RPAREN QUESTION valor COLON valor
    (38) operador_ternario -> . LPAREN conditions RPAREN QUESTION COLON valor
    (39) operador_ternario -> . LPAREN VARIABLE RPAREN QUESTION COLON valor
    (80) if -> . IF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (81) if -> . IF LPAREN conditions RPAREN body
    (108) for -> . forStatement
    (112) while -> . WHILE LPAREN condition RPAREN LBRACE body RBRACE
    (113) while -> . WHILE LPAREN condition RPAREN LBRACE RBRACE
    (114) dowhile -> . DO LBRACE body RBRACE WHILE LPAREN condition RPAREN SEMICOLON
    (115) switch -> . SWITCH LPAREN valor RPAREN LBRACE caseLists RBRACE
    (116) switch -> . SWITCH LPAREN valor RPAREN COLON caseLists ENDSWITCH SEMICOLON
    (123) foreach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN LBRACE body RBRACE
    (130) array -> . VARIABLE EQUALS arrays SEMICOLON
    (131) array -> . VARIABLE EQUALS LBRACKET arrayAnidado RBRACKET SEMICOLON
    (132) array -> . VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON
    (133) array -> . map
    (109) forStatement -> . FOR LPAREN forcondition RPAREN LBRACE body RBRACE
    (137) map -> . VARIABLE EQUALS LBRACKET maps RBRACKET SEMICOLON
    (138) map -> . VARIABLE EQUALS ARRAY LPAREN maps RPAREN SEMICOLON

    RBRACE          reduce using rule 71 (empty -> .)
    VARIABLE        shift and go to state 27
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    TRY             shift and go to state 35
    FUNCTION        shift and go to state 36
    RETURN          shift and go to state 38
    ID              shift and go to state 37
    CLASS           shift and go to state 39
    INTERFACE       shift and go to state 42
    INCLUDE         shift and go to state 43
    NAMESPACE       shift and go to state 45
    THROW           shift and go to state 46
    CONST           shift and go to state 47
    THIS            shift and go to state 48
    INT             shift and go to state 49
    FLOAT           shift and go to state 50
    STRING          shift and go to state 44
    BOOL            shift and go to state 51
    NULL            shift and go to state 52
    ARRAY           shift and go to state 53
    LPAREN          shift and go to state 29
    ABSTRACT        shift and go to state 63
    PRIVATE         shift and go to state 64
    PROTECTED       shift and go to state 65
    PUBLIC          shift and go to state 66
    STATIC          shift and go to state 67
    FINAL           shift and go to state 68
    IF              shift and go to state 69
    WHILE           shift and go to state 71
    DO              shift and go to state 72
    SWITCH          shift and go to state 73
    FOREACH         shift and go to state 74
    FOR             shift and go to state 76

    body                           shift and go to state 463
    sentenciaList                  shift and go to state 183
    empty                          shift and go to state 184
    sentencia                      shift and go to state 185
    asignacion                     shift and go to state 5
    asignacion_fgets               shift and go to state 6
    comparacion                    shift and go to state 7
    impresion                      shift and go to state 8
    estructurasPrograma            shift and go to state 9
    try                            shift and go to state 10
    funcionDeclaration             shift and go to state 11
    returnStatement                shift and go to state 12
    llamadaFuncion                 shift and go to state 13
    classDeclarate                 shift and go to state 14
    interface                      shift and go to state 15
    objeto                         shift and go to state 16
    includes                       shift and go to state 17
    namespace                      shift and go to state 18
    anonymousFunction              shift and go to state 19
    throw                          shift and go to state 20
    instance                       shift and go to state 21
    constdeclaration               shift and go to state 22
    thisdeclaration                shift and go to state 23
    concatenate                    shift and go to state 24
    minuse                         shift and go to state 25
    pluse                          shift and go to state 26
    expresion                      shift and go to state 28
    valor                          shift and go to state 30
    controlStructure               shift and go to state 33
    dataStructure                  shift and go to state 34
    data                           shift and go to state 40
    classInterface                 shift and go to state 41
    operaArit                      shift and go to state 54
    operador_ternario              shift and go to state 55
    if                             shift and go to state 56
    for                            shift and go to state 57
    while                          shift and go to state 58
    dowhile                        shift and go to state 59
    switch                         shift and go to state 60
    foreach                        shift and go to state 61
    array                          shift and go to state 62
    forStatement                   shift and go to state 70
    map                            shift and go to state 75

state 461

    (110) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS .

    RPAREN          reduce using rule 110 (forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS .)


state 462

    (111) forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS .

    RPAREN          reduce using rule 111 (forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS .)


state 463

    (83) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body . RBRACE else_blocks

    RBRACE          shift and go to state 464


state 464

    (83) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE . else_blocks
    (82) else_blocks -> . ELSE LBRACE body RBRACE
    (83) else_blocks -> . ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks
    (84) else_blocks -> . empty
    (71) empty -> .

    ELSE            shift and go to state 416
    ELSEIF          shift and go to state 417
    VARIABLE        reduce using rule 71 (empty -> .)
    ECHO            reduce using rule 71 (empty -> .)
    PRINT           reduce using rule 71 (empty -> .)
    TRY             reduce using rule 71 (empty -> .)
    FUNCTION        reduce using rule 71 (empty -> .)
    RETURN          reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)
    CLASS           reduce using rule 71 (empty -> .)
    INTERFACE       reduce using rule 71 (empty -> .)
    INCLUDE         reduce using rule 71 (empty -> .)
    NAMESPACE       reduce using rule 71 (empty -> .)
    THROW           reduce using rule 71 (empty -> .)
    CONST           reduce using rule 71 (empty -> .)
    THIS            reduce using rule 71 (empty -> .)
    INT             reduce using rule 71 (empty -> .)
    FLOAT           reduce using rule 71 (empty -> .)
    STRING          reduce using rule 71 (empty -> .)
    BOOL            reduce using rule 71 (empty -> .)
    NULL            reduce using rule 71 (empty -> .)
    ARRAY           reduce using rule 71 (empty -> .)
    LPAREN          reduce using rule 71 (empty -> .)
    ABSTRACT        reduce using rule 71 (empty -> .)
    PRIVATE         reduce using rule 71 (empty -> .)
    PROTECTED       reduce using rule 71 (empty -> .)
    PUBLIC          reduce using rule 71 (empty -> .)
    STATIC          reduce using rule 71 (empty -> .)
    FINAL           reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    WHILE           reduce using rule 71 (empty -> .)
    DO              reduce using rule 71 (empty -> .)
    SWITCH          reduce using rule 71 (empty -> .)
    FOREACH         reduce using rule 71 (empty -> .)
    FOR             reduce using rule 71 (empty -> .)
    CLOSETAG        reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    BREAK           reduce using rule 71 (empty -> .)
    ENDSWITCH       reduce using rule 71 (empty -> .)
    CASE            reduce using rule 71 (empty -> .)
    DEFAULT         reduce using rule 71 (empty -> .)

    else_blocks                    shift and go to state 465
    empty                          shift and go to state 418

state 465

    (83) else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .

    VARIABLE        reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ECHO            reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRINT           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    TRY             reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FUNCTION        reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RETURN          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ID              reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLASS           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INTERFACE       reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INCLUDE         reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NAMESPACE       reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THROW           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CONST           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    THIS            reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    INT             reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FLOAT           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STRING          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BOOL            reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    NULL            reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ARRAY           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    LPAREN          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ABSTRACT        reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PRIVATE         reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PROTECTED       reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    PUBLIC          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    STATIC          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FINAL           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    IF              reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    WHILE           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DO              reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    SWITCH          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOREACH         reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    FOR             reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CLOSETAG        reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    RBRACE          reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    BREAK           reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    ENDSWITCH       reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    CASE            reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)
    DEFAULT         reduce using rule 83 (else_blocks -> ELSEIF LPAREN conditions RPAREN LBRACE body RBRACE else_blocks .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 30 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 30 resolved as shift
WARNING: shift/reduce conflict for STRICTEQ in state 30 resolved as shift
WARNING: shift/reduce conflict for STRICTNEQ in state 30 resolved as shift
WARNING: shift/reduce conflict for LT in state 30 resolved as shift
WARNING: shift/reduce conflict for GT in state 30 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 30 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 30 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 100 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 102 resolved as shift
WARNING: shift/reduce conflict for EQ in state 104 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for STRICTEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for STRICTNEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for LT in state 104 resolved as shift
WARNING: shift/reduce conflict for GT in state 104 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 104 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 105 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 127 resolved as shift
WARNING: shift/reduce conflict for EQ in state 130 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for STRICTEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for STRICTNEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for LT in state 130 resolved as shift
WARNING: shift/reduce conflict for GT in state 130 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 130 resolved as shift
WARNING: shift/reduce conflict for AND in state 158 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_AND in state 158 resolved as shift
WARNING: shift/reduce conflict for OR in state 158 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OR in state 158 resolved as shift
WARNING: shift/reduce conflict for EQ in state 158 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 158 resolved as shift
WARNING: shift/reduce conflict for STRICTEQ in state 158 resolved as shift
WARNING: shift/reduce conflict for STRICTNEQ in state 158 resolved as shift
WARNING: shift/reduce conflict for LT in state 158 resolved as shift
WARNING: shift/reduce conflict for GT in state 158 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 158 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 158 resolved as shift
WARNING: shift/reduce conflict for AND in state 159 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_AND in state 159 resolved as shift
WARNING: shift/reduce conflict for OR in state 159 resolved as shift
WARNING: shift/reduce conflict for LOGICAL_OR in state 159 resolved as shift
WARNING: shift/reduce conflict for EQ in state 159 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 159 resolved as shift
WARNING: shift/reduce conflict for STRICTEQ in state 159 resolved as shift
WARNING: shift/reduce conflict for STRICTNEQ in state 159 resolved as shift
WARNING: shift/reduce conflict for LT in state 159 resolved as shift
WARNING: shift/reduce conflict for GT in state 159 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 159 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 159 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 185 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 185 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 185 resolved as shift
WARNING: shift/reduce conflict for TRY in state 185 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 185 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 185 resolved as shift
WARNING: shift/reduce conflict for ID in state 185 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 185 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 185 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 185 resolved as shift
WARNING: shift/reduce conflict for NAMESPACE in state 185 resolved as shift
WARNING: shift/reduce conflict for THROW in state 185 resolved as shift
WARNING: shift/reduce conflict for CONST in state 185 resolved as shift
WARNING: shift/reduce conflict for THIS in state 185 resolved as shift
WARNING: shift/reduce conflict for INT in state 185 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 185 resolved as shift
WARNING: shift/reduce conflict for STRING in state 185 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 185 resolved as shift
WARNING: shift/reduce conflict for NULL in state 185 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 185 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 185 resolved as shift
WARNING: shift/reduce conflict for ABSTRACT in state 185 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 185 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 185 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 185 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 185 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 185 resolved as shift
WARNING: shift/reduce conflict for IF in state 185 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 185 resolved as shift
WARNING: shift/reduce conflict for DO in state 185 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 185 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 185 resolved as shift
WARNING: shift/reduce conflict for FOR in state 185 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 188 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 249 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 271 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 271 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 271 resolved as shift
WARNING: shift/reduce conflict for TRY in state 271 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 271 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 271 resolved as shift
WARNING: shift/reduce conflict for ID in state 271 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 271 resolved as shift
WARNING: shift/reduce conflict for INTERFACE in state 271 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 271 resolved as shift
WARNING: shift/reduce conflict for NAMESPACE in state 271 resolved as shift
WARNING: shift/reduce conflict for THROW in state 271 resolved as shift
WARNING: shift/reduce conflict for CONST in state 271 resolved as shift
WARNING: shift/reduce conflict for THIS in state 271 resolved as shift
WARNING: shift/reduce conflict for INT in state 271 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 271 resolved as shift
WARNING: shift/reduce conflict for STRING in state 271 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 271 resolved as shift
WARNING: shift/reduce conflict for NULL in state 271 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 271 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 271 resolved as shift
WARNING: shift/reduce conflict for ABSTRACT in state 271 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 271 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 271 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 271 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 271 resolved as shift
WARNING: shift/reduce conflict for FINAL in state 271 resolved as shift
WARNING: shift/reduce conflict for IF in state 271 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 271 resolved as shift
WARNING: shift/reduce conflict for DO in state 271 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 271 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 271 resolved as shift
WARNING: shift/reduce conflict for FOR in state 271 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 322 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 350 resolved as shift
WARNING: reduce/reduce conflict in state 30 resolved using rule (expresion -> valor)
WARNING: rejected rule (operaArit -> valor) in state 30
WARNING: reduce/reduce conflict in state 104 resolved using rule (expresion -> valor)
WARNING: rejected rule (operaArit -> valor) in state 104
WARNING: reduce/reduce conflict in state 104 resolved using rule (expresion -> valor)
WARNING: rejected rule (condition -> valor) in state 104
WARNING: reduce/reduce conflict in state 130 resolved using rule (expresion -> valor)
WARNING: rejected rule (operaArit -> valor) in state 130
WARNING: reduce/reduce conflict in state 179 resolved using rule (repiteValores -> valor)
WARNING: rejected rule (condition -> valor) in state 179
WARNING: reduce/reduce conflict in state 192 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (argumento -> VARIABLE) in state 192
WARNING: reduce/reduce conflict in state 193 resolved using rule (operaArit -> valor)
WARNING: rejected rule (argumento -> valor) in state 193
WARNING: reduce/reduce conflict in state 195 resolved using rule (valor -> llamadaFuncion)
WARNING: rejected rule (argumento -> llamadaFuncion) in state 195
WARNING: reduce/reduce conflict in state 235 resolved using rule (conditions -> LPAREN conditions RPAREN)
WARNING: rejected rule (condition -> LPAREN conditions RPAREN) in state 235
WARNING: reduce/reduce conflict in state 237 resolved using rule (comparacion -> valor opSymbol valor)
WARNING: rejected rule (condition -> valor opSymbol valor) in state 237
WARNING: reduce/reduce conflict in state 294 resolved using rule (conditions -> LPAREN conditions RPAREN)
WARNING: rejected rule (condition -> LPAREN conditions RPAREN) in state 294
WARNING: Rule (argumento -> VARIABLE) is never reduced
WARNING: Rule (argumento -> valor) is never reduced
WARNING: Rule (argumento -> llamadaFuncion) is never reduced
