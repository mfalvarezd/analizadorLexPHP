
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAY ARROW ARROWMAP AS BOOL BOOLEAN BREAK CASE CATCH CLASS CLONE CLOSETAG COLON COMMA CONCATENATEEQUAL CONST CONTINUE DECLARE DEFAULT DIVIDE DO DOT DOUBLEDOT DOUBLEMINUS DOUBLEPLUS ECHO ELSE ELSEIF EMPTY ENDSWITCH EQ EQUALS EXCEPTION EXTENDS FALSE FGETS FINAL FINALLY FLOAT FLOATING FN FOR FOREACH FUNCTION GEQ GLOBAL GT ID IF IMPLEMENTS INCLUDE INSTANCEOF INT INTEGER INTERFACE ISSET LBRACE LBRACKET LEQ LIST LPAREN LT MINUS MINUSEQUAL MODULO NAMESPACE NEQ NEW NOT OPENTAG OR PLUS PLUSEQUAL POTENCIA PRINT PRIVATE PROTECTED PUBLIC QUESTION RBRACE RBRACKET RETURN RPAREN SEMICOLON STATIC STDIN STRICTEQ STRICTNEQ STRING STRINGS SWITCH THIS THROW TIMES TRUE TRY VARIABLE VOID WHILEprograma : sentencia\n| sentencia programasentencia : asignacion\n| impresion\n| comparacion\n| estructurasProgramsentencias : sentencia\n| sentencia sentencias\n| emptyasignacion : VARIABLE EQUALS operaArit SEMICOLONimpresion : ECHO imprimir SEMICOLON\n| PRINT imprimir SEMICOLONestructurasProgram : controlStructure\n| dataStructure\n| funcionDeclarate\n| classDeclaratecontrolStructure : if\n| for\n| while\n| switchif : statementif ELSE body\n| statementif ELSE if\n| statementif ELSEIF if\n| statementifstatementif : IF LPAREN conditionProdu RPAREN LBRACE body RBRACEconditionProdu : condition\n| condition opLogic conditionProducondition : valor opSymbol valor\n| LPAREN conditionProdu RPARENopSymbol : EQ\n| NEQ\n| STRICTEQ\n| STRICTNEQ\n| LT\n| GT\n| LEQ\n| GEQopLogic : AND\n| OR\n| NOTfor : forStatementforStatement : FOR LPAREN forcondition RPAREN LBRACE body RBRACEforcondition : VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS\n| VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUSwhile : WHILE LPAREN condition RPAREN LBRACE body RBRACE\n| WHILE LPAREN condition RPAREN LBRACE RBRACEswitch : SWITCH LPAREN condition RPAREN LBRACE caseLists RBRACE\n| SWITCH LPAREN condition RPAREN LBRACE RBRACEcaseLists : cases default\n| cases\n| default\n| emptycases : case cases\n| casecase : CASE valor COLON body BREAK SEMICOLONdefault : DEFAULT COLON body BREAK SEMICOLONdataStructure : array\n| mapfuncionDeclarate : FUNCTION ID LPAREN parametros RPAREN LBRACE funcionBody RBRACE\n| FUNCTION ID LPAREN parametros RPAREN DOUBLEDOT dataType LBRACE funcionBody RBRACEfuncionBody : body\n| RETURN expresion SEMICOLONparametros : parametro\n| parametro COMMA parametros\n| emptyparametro : ID\n| dataType ID\n| ID EQUALS valor\n| dataType ID EQUALS valorarrowfunction : FN LPAREN parametros RPAREN ARROWMAP expresion SEMICOLONbrace : LBRACE body RBRACEfuncionParen : ID LPAREN parametros RPARENclassDeclarate : CLASS ID LBRACE classBody RBRACE\n| CLASS ID EXTENDS ID LBRACE classBody RBRACEclassBody : classMember classBody\n| emptyclassMember : dataType VARIABLE SEMICOLON\n| dataType FUNCTION ID LPAREN parametros RPAREN braceaccessMember : VARIABLE ARROW ID\n| VARIABLE ARROW funcionParenarray : VARIABLE EQUALS LBRACKET repiteValores RBRACKET SEMICOLON\n| VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON map : VARIABLE EQUALS LBRACKET mapProduc RBRACKET SEMICOLON\n| VARIABLE EQUALS ARRAY LPAREN mapProduc RPAREN SEMICOLONmapProduc : mapArrow\n| mapArrow COMMA mapProducmapArrow : valor ARROWMAP valorbody : sentencia\n| sentencia sentencias\n| emptyimprimir : LPAREN repiteValores RPAREN\n| LPAREN RPAREN\n| repiteValoresvalor : INT\n| FLOAT\n| VARIABLE\n| STRING\n| TRUE\n| FALSE\n| THIS\n| funcionParendataType : INTEGER\n| FLOATING\n| STRINGS\n| BOOLEAN\n| VOIDcomparacion : INT operador INT\n| FLOAT operador FLOAT\n| INT operador FLOAT\n| FLOAT operador INTrepiteValores : valor COMMA repiteValores\n| valor\noperaArit : valor\n|  valor operador operaArit\n| valor DOT valorexpresion : valor\n| operaArit\n| conditionProdu\n| ternario\n| accessMemberoperador :  PLUS\n| MINUS\n| TIMES\n| DIVIDE\n| MODULOternario : conditionProdu QUESTION expresion COLON expresionempty :'
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,8,9,12,13,14,15,16,17,18,19,20,21,24,25,31,33,47,48,49,50,51,55,57,58,59,60,62,65,68,70,71,72,73,74,78,79,80,81,82,83,91,96,97,98,106,107,108,109,110,115,117,118,119,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,152,157,159,162,164,166,167,175,176,182,184,190,193,194,195,199,202,203,204,207,209,210,212,220,223,226,236,238,241,242,],[7,7,-3,-4,-5,-6,38,38,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,38,38,-121,-122,-123,-124,-125,7,38,38,38,90,38,-11,38,-12,-107,-109,-108,-110,-21,-17,7,-90,-23,38,-10,38,38,38,-102,-103,-104,-105,-106,154,7,-89,-9,38,-30,-31,-32,-33,-34,-35,-36,-37,38,-38,-39,-40,38,38,38,-73,-8,7,7,7,-81,-83,38,7,-46,-48,38,211,-82,-84,219,-74,-45,-47,7,-25,-42,-59,7,7,219,-60,7,245,219,]),'ECHO':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[8,8,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,8,-11,-12,-107,-109,-108,-110,-21,-17,8,-90,-23,-10,8,-89,-9,-73,-8,8,8,8,-81,-83,8,-46,-48,-82,-84,-74,-45,-47,8,-25,-42,-59,8,8,-60,8,]),'PRINT':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[9,9,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,9,-11,-12,-107,-109,-108,-110,-21,-17,9,-90,-23,-10,9,-89,-9,-73,-8,9,9,9,-81,-83,9,-46,-48,-82,-84,-74,-45,-47,9,-25,-42,-59,9,9,-60,9,]),'INT':([0,2,3,4,5,6,8,9,12,13,14,15,16,17,18,19,20,21,24,25,31,33,46,47,48,49,50,51,52,55,57,58,59,62,65,68,70,71,72,73,74,78,79,80,81,82,83,91,96,97,98,117,118,119,122,123,124,125,126,127,128,129,130,133,134,135,136,138,141,142,147,152,157,159,162,164,166,167,175,176,182,184,190,194,195,199,202,203,204,207,209,210,212,220,223,224,226,236,238,242,],[10,10,-3,-4,-5,-6,36,36,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,36,36,71,-121,-122,-123,-124,-125,74,10,36,36,36,36,-11,36,-12,-107,-109,-108,-110,-21,-17,10,-90,-23,36,-10,36,36,36,10,-89,-9,36,-30,-31,-32,-33,-34,-35,-36,-37,36,-38,-39,-40,165,36,36,36,-73,-8,10,10,10,-81,-83,36,10,-46,-48,36,-82,-84,36,-74,-45,-47,10,-25,-42,-59,10,10,232,36,-60,10,36,]),'FLOAT':([0,2,3,4,5,6,8,9,12,13,14,15,16,17,18,19,20,21,24,25,31,33,46,47,48,49,50,51,52,55,57,58,59,62,65,68,70,71,72,73,74,78,79,80,81,82,83,91,96,97,98,117,118,119,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,152,157,159,162,164,166,167,175,176,182,184,190,194,195,199,202,203,204,207,209,210,212,220,223,226,236,238,242,],[11,11,-3,-4,-5,-6,37,37,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,37,37,72,-121,-122,-123,-124,-125,73,11,37,37,37,37,-11,37,-12,-107,-109,-108,-110,-21,-17,11,-90,-23,37,-10,37,37,37,11,-89,-9,37,-30,-31,-32,-33,-34,-35,-36,-37,37,-38,-39,-40,37,37,37,-73,-8,11,11,11,-81,-83,37,11,-46,-48,37,-82,-84,37,-74,-45,-47,11,-25,-42,-59,11,11,37,-60,11,37,]),'FUNCTION':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,106,107,108,109,110,115,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[22,22,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,22,-11,-12,-107,-109,-108,-110,-21,-17,22,-90,-23,-10,-102,-103,-104,-105,-106,155,22,-89,-9,-73,-8,22,22,22,-81,-83,22,-46,-48,-82,-84,-74,-45,-47,22,-25,-42,-59,22,22,-60,22,]),'CLASS':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[23,23,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,23,-11,-12,-107,-109,-108,-110,-21,-17,23,-90,-23,-10,23,-89,-9,-73,-8,23,23,23,-81,-83,23,-46,-48,-82,-84,-74,-45,-47,23,-25,-42,-59,23,23,-60,23,]),'WHILE':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[26,26,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,26,-11,-12,-107,-109,-108,-110,-21,-17,26,-90,-23,-10,26,-89,-9,-73,-8,26,26,26,-81,-83,26,-46,-48,-82,-84,-74,-45,-47,26,-25,-42,-59,26,26,-60,26,]),'SWITCH':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[27,27,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,27,-11,-12,-107,-109,-108,-110,-21,-17,27,-90,-23,-10,27,-89,-9,-73,-8,27,27,27,-81,-83,27,-46,-48,-82,-84,-74,-45,-47,27,-25,-42,-59,27,27,-60,27,]),'IF':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,56,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[28,28,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,28,28,-11,-12,-107,-109,-108,-110,-21,-17,28,-90,-23,-10,28,-89,-9,-73,-8,28,28,28,-81,-83,28,-46,-48,-82,-84,-74,-45,-47,28,-25,-42,-59,28,28,-60,28,]),'FOR':([0,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,159,162,164,166,167,176,182,184,194,195,202,203,204,207,209,210,212,220,223,236,238,],[29,29,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,29,-11,-12,-107,-109,-108,-110,-21,-17,29,-90,-23,-10,29,-89,-9,-73,-8,29,29,29,-81,-83,29,-46,-48,-82,-84,-74,-45,-47,29,-25,-42,-59,29,29,-60,29,]),'$end':([1,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,30,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,166,167,182,184,194,195,202,203,204,209,210,212,236,],[0,-1,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,-2,-127,-11,-12,-107,-109,-108,-110,-21,-17,-88,-90,-23,-10,-7,-89,-9,-73,-8,-81,-83,-46,-48,-82,-84,-74,-45,-47,-25,-42,-59,-60,]),'RBRACE':([3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,76,78,79,80,81,82,91,112,113,114,117,118,119,152,153,156,157,159,161,162,164,166,167,176,178,180,181,182,183,184,185,186,187,188,191,192,194,195,197,198,202,203,204,205,206,209,210,212,220,225,228,236,237,238,239,243,244,247,],[-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,-127,-11,-12,-107,-109,-108,-110,-127,-21,-17,-88,-90,-23,-10,152,-127,-76,-7,-89,-9,-73,-75,-127,-8,182,184,-127,-127,-81,-83,-127,-77,202,203,-46,204,-48,-50,-51,-52,-54,209,210,-82,-84,212,-61,-74,-45,-47,-49,-53,-25,-42,-59,-127,-62,236,-60,-78,-127,-56,247,-55,-71,]),'BREAK':([3,4,5,6,12,13,14,15,16,17,18,19,20,21,24,25,55,65,70,71,72,73,74,78,79,80,81,82,91,117,118,119,152,157,166,167,182,184,194,195,202,203,204,207,209,210,212,222,223,231,236,],[-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-24,-41,-127,-11,-12,-107,-109,-108,-110,-21,-17,-88,-90,-23,-10,-7,-89,-9,-73,-8,-81,-83,-46,-48,-82,-84,-74,-45,-47,-127,-25,-42,-59,230,-127,240,-60,]),'EQUALS':([7,90,101,150,],[31,138,147,175,]),'LPAREN':([8,9,26,27,28,29,44,53,57,58,59,63,83,133,134,135,136,179,199,226,234,242,],[33,33,57,58,59,60,69,75,83,83,83,96,83,83,-38,-39,-40,201,83,83,69,83,]),'STRING':([8,9,31,33,47,48,49,50,51,57,58,59,62,68,83,96,97,98,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,175,190,199,226,242,],[39,39,39,39,-121,-122,-123,-124,-125,39,39,39,39,39,39,39,39,39,39,-30,-31,-32,-33,-34,-35,-36,-37,39,-38,-39,-40,39,39,39,39,39,39,39,39,]),'TRUE':([8,9,31,33,47,48,49,50,51,57,58,59,62,68,83,96,97,98,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,175,190,199,226,242,],[40,40,40,40,-121,-122,-123,-124,-125,40,40,40,40,40,40,40,40,40,40,-30,-31,-32,-33,-34,-35,-36,-37,40,-38,-39,-40,40,40,40,40,40,40,40,40,]),'FALSE':([8,9,31,33,47,48,49,50,51,57,58,59,62,68,83,96,97,98,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,175,190,199,226,242,],[41,41,41,41,-121,-122,-123,-124,-125,41,41,41,41,41,41,41,41,41,41,-30,-31,-32,-33,-34,-35,-36,-37,41,-38,-39,-40,41,41,41,41,41,41,41,41,]),'THIS':([8,9,31,33,47,48,49,50,51,57,58,59,62,68,83,96,97,98,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,175,190,199,226,242,],[42,42,42,42,-121,-122,-123,-124,-125,42,42,42,42,42,42,42,42,42,42,-30,-31,-32,-33,-34,-35,-36,-37,42,-38,-39,-40,42,42,42,42,42,42,42,42,]),'ID':([8,9,22,23,31,33,47,48,49,50,51,57,58,59,62,68,69,75,77,83,96,97,98,105,106,107,108,109,110,122,123,124,125,126,127,128,129,130,133,134,135,136,141,142,147,149,155,175,190,199,201,226,227,242,],[44,44,53,54,44,44,-121,-122,-123,-124,-125,44,44,44,44,44,101,101,116,44,44,44,44,150,-102,-103,-104,-105,-106,44,-30,-31,-32,-33,-34,-35,-36,-37,44,-38,-39,-40,44,44,44,101,179,44,44,44,101,44,234,44,]),'PLUS':([10,11,36,37,38,39,40,41,42,43,64,148,214,219,],[47,47,-94,-95,-96,-97,-98,-99,-100,-101,47,-72,47,-96,]),'MINUS':([10,11,36,37,38,39,40,41,42,43,64,148,214,219,],[48,48,-94,-95,-96,-97,-98,-99,-100,-101,48,-72,48,-96,]),'TIMES':([10,11,36,37,38,39,40,41,42,43,64,148,214,219,],[49,49,-94,-95,-96,-97,-98,-99,-100,-101,49,-72,49,-96,]),'DIVIDE':([10,11,36,37,38,39,40,41,42,43,64,148,214,219,],[50,50,-94,-95,-96,-97,-98,-99,-100,-101,50,-72,50,-96,]),'MODULO':([10,11,36,37,38,39,40,41,42,43,64,148,214,219,],[51,51,-94,-95,-96,-97,-98,-99,-100,-101,51,-72,51,-96,]),'ELSE':([24,209,],[55,-25,]),'ELSEIF':([24,209,],[56,-25,]),'LBRACKET':([31,],[62,]),'ARRAY':([31,],[63,]),'SEMICOLON':([32,34,35,36,37,38,39,40,41,42,43,45,61,64,67,88,99,100,139,140,145,146,148,154,158,160,163,165,171,172,213,214,215,216,217,218,219,230,232,234,235,240,246,],[65,-93,-112,-94,-95,-96,-97,-98,-99,-100,-101,70,91,-113,-92,-26,-91,-111,166,167,-114,-115,-72,178,-29,-28,-27,193,194,195,225,-113,-117,-118,-119,-120,-96,239,241,-79,-80,244,-126,]),'RPAREN':([33,35,36,37,38,39,40,41,42,43,66,69,75,84,86,87,88,89,94,95,100,101,102,103,104,111,120,143,144,148,149,150,158,160,163,168,169,173,174,196,201,221,248,249,],[67,-112,-94,-95,-96,-97,-98,-99,-100,-101,99,-127,-127,121,131,132,-26,137,-112,-85,-111,-66,148,-63,-65,151,158,171,172,-72,-127,-67,-29,-28,-27,-87,-86,-68,-64,-69,-127,229,-43,-44,]),'COMMA':([35,36,37,38,39,40,41,42,43,94,95,101,103,148,150,168,173,196,],[68,-94,-95,-96,-97,-98,-99,-100,-101,68,142,-66,149,-72,-67,-87,-68,-69,]),'RBRACKET':([35,36,37,38,39,40,41,42,43,92,93,94,95,100,148,168,169,],[-112,-94,-95,-96,-97,-98,-99,-100,-101,139,140,-112,-85,-111,-72,-87,-86,]),'DOT':([36,37,38,39,40,41,42,43,64,148,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,98,-72,98,-96,]),'EQ':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,123,-72,123,123,-96,]),'NEQ':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,124,-72,124,124,-96,]),'STRICTEQ':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,125,-72,125,125,-96,]),'STRICTNEQ':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,126,-72,126,126,-96,]),'LT':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,127,-72,127,127,-96,]),'GT':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,128,-72,128,128,-96,]),'LEQ':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,129,-72,129,129,-96,]),'GEQ':([36,37,38,39,40,41,42,43,85,148,211,214,219,],[-94,-95,-96,-97,-98,-99,-100,-101,130,-72,130,130,-96,]),'ARROWMAP':([36,37,38,39,40,41,42,43,94,148,170,],[-94,-95,-96,-97,-98,-99,-100,-101,141,-72,141,]),'COLON':([36,37,38,39,40,41,42,43,64,88,145,146,148,158,160,163,189,208,214,215,216,217,218,219,233,234,235,246,],[-94,-95,-96,-97,-98,-99,-100,-101,-113,-26,-114,-115,-72,-29,-28,-27,207,223,-113,-117,-118,-119,-120,-96,242,-79,-80,-126,]),'AND':([36,37,38,39,40,41,42,43,88,148,158,160,],[-94,-95,-96,-97,-98,-99,-100,-101,134,-72,-29,-28,]),'OR':([36,37,38,39,40,41,42,43,88,148,158,160,],[-94,-95,-96,-97,-98,-99,-100,-101,135,-72,-29,-28,]),'NOT':([36,37,38,39,40,41,42,43,88,148,158,160,],[-94,-95,-96,-97,-98,-99,-100,-101,136,-72,-29,-28,]),'QUESTION':([36,37,38,39,40,41,42,43,88,148,158,160,163,216,],[-94,-95,-96,-97,-98,-99,-100,-101,-26,-72,-29,-28,-27,226,]),'LBRACE':([54,106,107,108,109,110,116,121,131,132,137,151,200,229,],[76,-102,-103,-104,-105,-106,156,159,161,162,164,176,220,238,]),'EXTENDS':([54,],[77,]),'INTEGER':([69,75,76,113,149,156,177,178,201,237,247,],[106,106,106,106,106,106,106,-77,106,-78,-71,]),'FLOATING':([69,75,76,113,149,156,177,178,201,237,247,],[107,107,107,107,107,107,107,-77,107,-78,-71,]),'STRINGS':([69,75,76,113,149,156,177,178,201,237,247,],[108,108,108,108,108,108,108,-77,108,-78,-71,]),'BOOLEAN':([69,75,76,113,149,156,177,178,201,237,247,],[109,109,109,109,109,109,109,-77,109,-78,-71,]),'VOID':([69,75,76,113,149,156,177,178,201,237,247,],[110,110,110,110,110,110,110,-77,110,-78,-71,]),'DOUBLEDOT':([151,],[177,]),'DEFAULT':([161,185,188,206,244,],[189,189,-54,-53,-55,]),'CASE':([161,188,244,],[190,190,-55,]),'RETURN':([176,220,],[199,199,]),'ARROW':([219,],[227,]),'DOUBLEPLUS':([245,],[248,]),'DOUBLEMINUS':([245,],[249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,],[1,30,]),'sentencia':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[2,2,80,117,117,80,80,80,80,80,80,80,80,]),'asignacion':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'impresion':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'comparacion':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'estructurasProgram':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'controlStructure':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'dataStructure':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'funcionDeclarate':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'classDeclarate':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'if':([0,2,55,56,80,117,159,162,164,176,207,220,223,238,],[16,16,79,82,16,16,16,16,16,16,16,16,16,16,]),'for':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'while':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'switch':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'map':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'statementif':([0,2,55,56,80,117,159,162,164,176,207,220,223,238,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'forStatement':([0,2,55,80,117,159,162,164,176,207,220,223,238,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'imprimir':([8,9,],[32,45,]),'repiteValores':([8,9,33,62,68,96,],[34,34,66,92,100,143,]),'valor':([8,9,31,33,57,58,59,62,68,83,96,97,98,122,133,141,142,147,175,190,199,226,242,],[35,35,64,35,85,85,85,94,35,85,94,64,146,160,85,168,170,173,196,208,214,214,214,]),'funcionParen':([8,9,31,33,57,58,59,62,68,83,96,97,98,122,133,141,142,147,175,190,199,226,227,242,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,235,43,]),'operador':([10,11,64,214,],[46,52,97,97,]),'operaArit':([31,97,199,226,242,],[61,145,215,215,215,]),'body':([55,159,162,164,176,207,220,223,238,],[78,181,191,192,198,222,198,231,243,]),'empty':([55,69,75,76,80,113,117,149,156,159,161,162,164,176,201,207,220,223,238,],[81,104,104,114,119,114,119,104,114,81,187,81,81,81,104,81,81,81,81,]),'condition':([57,58,59,83,133,199,226,242,],[84,86,88,88,88,88,88,88,]),'conditionProdu':([59,83,133,199,226,242,],[87,120,163,216,216,216,]),'forcondition':([60,],[89,]),'mapProduc':([62,96,142,],[93,144,169,]),'mapArrow':([62,96,142,],[95,95,95,]),'parametros':([69,75,149,201,],[102,111,174,221,]),'parametro':([69,75,149,201,],[103,103,103,103,]),'dataType':([69,75,76,113,149,156,177,201,],[105,105,115,115,105,115,200,105,]),'classBody':([76,113,156,],[112,153,180,]),'classMember':([76,113,156,],[113,113,113,]),'sentencias':([80,117,],[118,157,]),'opSymbol':([85,211,214,],[122,224,122,]),'opLogic':([88,],[133,]),'caseLists':([161,],[183,]),'cases':([161,188,],[185,206,]),'default':([161,185,],[186,205,]),'case':([161,188,],[188,188,]),'funcionBody':([176,220,],[197,228,]),'expresion':([199,226,242,],[213,233,246,]),'ternario':([199,226,242,],[217,217,217,]),'accessMember':([199,226,242,],[218,218,218,]),'brace':([229,],[237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> sentencia','programa',1,'p_programa','main.py',6),
  ('programa -> sentencia programa','programa',2,'p_programa','main.py',7),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','main.py',10),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','main.py',11),
  ('sentencia -> comparacion','sentencia',1,'p_sentencia','main.py',12),
  ('sentencia -> estructurasProgram','sentencia',1,'p_sentencia','main.py',13),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','main.py',16),
  ('sentencias -> sentencia sentencias','sentencias',2,'p_sentencias','main.py',17),
  ('sentencias -> empty','sentencias',1,'p_sentencias','main.py',18),
  ('asignacion -> VARIABLE EQUALS operaArit SEMICOLON','asignacion',4,'p_asignacion','main.py',21),
  ('impresion -> ECHO imprimir SEMICOLON','impresion',3,'p_impresion','main.py',26),
  ('impresion -> PRINT imprimir SEMICOLON','impresion',3,'p_impresion','main.py',27),
  ('estructurasProgram -> controlStructure','estructurasProgram',1,'p_estructurasProgram','main.py',31),
  ('estructurasProgram -> dataStructure','estructurasProgram',1,'p_estructurasProgram','main.py',32),
  ('estructurasProgram -> funcionDeclarate','estructurasProgram',1,'p_estructurasProgram','main.py',33),
  ('estructurasProgram -> classDeclarate','estructurasProgram',1,'p_estructurasProgram','main.py',34),
  ('controlStructure -> if','controlStructure',1,'p_controlStructure','main.py',37),
  ('controlStructure -> for','controlStructure',1,'p_controlStructure','main.py',38),
  ('controlStructure -> while','controlStructure',1,'p_controlStructure','main.py',39),
  ('controlStructure -> switch','controlStructure',1,'p_controlStructure','main.py',40),
  ('if -> statementif ELSE body','if',3,'p_if','main.py',44),
  ('if -> statementif ELSE if','if',3,'p_if','main.py',45),
  ('if -> statementif ELSEIF if','if',3,'p_if','main.py',46),
  ('if -> statementif','if',1,'p_if','main.py',47),
  ('statementif -> IF LPAREN conditionProdu RPAREN LBRACE body RBRACE','statementif',7,'p_statementif','main.py',50),
  ('conditionProdu -> condition','conditionProdu',1,'p_conditionProdu','main.py',53),
  ('conditionProdu -> condition opLogic conditionProdu','conditionProdu',3,'p_conditionProdu','main.py',54),
  ('condition -> valor opSymbol valor','condition',3,'p_condition','main.py',56),
  ('condition -> LPAREN conditionProdu RPAREN','condition',3,'p_condition','main.py',57),
  ('opSymbol -> EQ','opSymbol',1,'p_opSymbol','main.py',60),
  ('opSymbol -> NEQ','opSymbol',1,'p_opSymbol','main.py',61),
  ('opSymbol -> STRICTEQ','opSymbol',1,'p_opSymbol','main.py',62),
  ('opSymbol -> STRICTNEQ','opSymbol',1,'p_opSymbol','main.py',63),
  ('opSymbol -> LT','opSymbol',1,'p_opSymbol','main.py',64),
  ('opSymbol -> GT','opSymbol',1,'p_opSymbol','main.py',65),
  ('opSymbol -> LEQ','opSymbol',1,'p_opSymbol','main.py',66),
  ('opSymbol -> GEQ','opSymbol',1,'p_opSymbol','main.py',67),
  ('opLogic -> AND','opLogic',1,'p_opLogic','main.py',69),
  ('opLogic -> OR','opLogic',1,'p_opLogic','main.py',70),
  ('opLogic -> NOT','opLogic',1,'p_opLogic','main.py',71),
  ('for -> forStatement','for',1,'p_for','main.py',75),
  ('forStatement -> FOR LPAREN forcondition RPAREN LBRACE body RBRACE','forStatement',7,'p_forStatement','main.py',78),
  ('forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEPLUS','forcondition',10,'p_forcondition','main.py',81),
  ('forcondition -> VARIABLE EQUALS INT SEMICOLON VARIABLE opSymbol INT SEMICOLON VARIABLE DOUBLEMINUS','forcondition',10,'p_forcondition','main.py',82),
  ('while -> WHILE LPAREN condition RPAREN LBRACE body RBRACE','while',7,'p_while','main.py',86),
  ('while -> WHILE LPAREN condition RPAREN LBRACE RBRACE','while',6,'p_while','main.py',87),
  ('switch -> SWITCH LPAREN condition RPAREN LBRACE caseLists RBRACE','switch',7,'p_switch','main.py',90),
  ('switch -> SWITCH LPAREN condition RPAREN LBRACE RBRACE','switch',6,'p_switch','main.py',91),
  ('caseLists -> cases default','caseLists',2,'p_caseLists','main.py',93),
  ('caseLists -> cases','caseLists',1,'p_caseLists','main.py',94),
  ('caseLists -> default','caseLists',1,'p_caseLists','main.py',95),
  ('caseLists -> empty','caseLists',1,'p_caseLists','main.py',96),
  ('cases -> case cases','cases',2,'p_cases','main.py',98),
  ('cases -> case','cases',1,'p_cases','main.py',99),
  ('case -> CASE valor COLON body BREAK SEMICOLON','case',6,'p_case','main.py',101),
  ('default -> DEFAULT COLON body BREAK SEMICOLON','default',5,'p_default','main.py',103),
  ('dataStructure -> array','dataStructure',1,'p_dataStructure','main.py',106),
  ('dataStructure -> map','dataStructure',1,'p_dataStructure','main.py',107),
  ('funcionDeclarate -> FUNCTION ID LPAREN parametros RPAREN LBRACE funcionBody RBRACE','funcionDeclarate',8,'p_funcionDeclarate','main.py',110),
  ('funcionDeclarate -> FUNCTION ID LPAREN parametros RPAREN DOUBLEDOT dataType LBRACE funcionBody RBRACE','funcionDeclarate',10,'p_funcionDeclarate','main.py',111),
  ('funcionBody -> body','funcionBody',1,'p_funcionBody','main.py',113),
  ('funcionBody -> RETURN expresion SEMICOLON','funcionBody',3,'p_funcionBody','main.py',114),
  ('parametros -> parametro','parametros',1,'p_parametros','main.py',117),
  ('parametros -> parametro COMMA parametros','parametros',3,'p_parametros','main.py',118),
  ('parametros -> empty','parametros',1,'p_parametros','main.py',119),
  ('parametro -> ID','parametro',1,'p_parametro','main.py',121),
  ('parametro -> dataType ID','parametro',2,'p_parametro','main.py',122),
  ('parametro -> ID EQUALS valor','parametro',3,'p_parametro','main.py',123),
  ('parametro -> dataType ID EQUALS valor','parametro',4,'p_parametro','main.py',124),
  ('arrowfunction -> FN LPAREN parametros RPAREN ARROWMAP expresion SEMICOLON','arrowfunction',7,'p_arrowfunction','main.py',126),
  ('brace -> LBRACE body RBRACE','brace',3,'p_brace','main.py',129),
  ('funcionParen -> ID LPAREN parametros RPAREN','funcionParen',4,'p_funcionParen','main.py',132),
  ('classDeclarate -> CLASS ID LBRACE classBody RBRACE','classDeclarate',5,'p_classDeclarate','main.py',135),
  ('classDeclarate -> CLASS ID EXTENDS ID LBRACE classBody RBRACE','classDeclarate',7,'p_classDeclarate','main.py',136),
  ('classBody -> classMember classBody','classBody',2,'p_classBody','main.py',138),
  ('classBody -> empty','classBody',1,'p_classBody','main.py',139),
  ('classMember -> dataType VARIABLE SEMICOLON','classMember',3,'p_classMember','main.py',141),
  ('classMember -> dataType FUNCTION ID LPAREN parametros RPAREN brace','classMember',7,'p_classMember','main.py',142),
  ('accessMember -> VARIABLE ARROW ID','accessMember',3,'p_accessMember','main.py',144),
  ('accessMember -> VARIABLE ARROW funcionParen','accessMember',3,'p_accessMember','main.py',145),
  ('array -> VARIABLE EQUALS LBRACKET repiteValores RBRACKET SEMICOLON','array',6,'p_array','main.py',148),
  ('array -> VARIABLE EQUALS ARRAY LPAREN repiteValores RPAREN SEMICOLON','array',7,'p_array','main.py',149),
  ('map -> VARIABLE EQUALS LBRACKET mapProduc RBRACKET SEMICOLON','map',6,'p_map','main.py',152),
  ('map -> VARIABLE EQUALS ARRAY LPAREN mapProduc RPAREN SEMICOLON','map',7,'p_map','main.py',153),
  ('mapProduc -> mapArrow','mapProduc',1,'p_mapProduc','main.py',156),
  ('mapProduc -> mapArrow COMMA mapProduc','mapProduc',3,'p_mapProduc','main.py',157),
  ('mapArrow -> valor ARROWMAP valor','mapArrow',3,'p_mapArrow','main.py',160),
  ('body -> sentencia','body',1,'p_body','main.py',163),
  ('body -> sentencia sentencias','body',2,'p_body','main.py',164),
  ('body -> empty','body',1,'p_body','main.py',165),
  ('imprimir -> LPAREN repiteValores RPAREN','imprimir',3,'p_imprimir','main.py',168),
  ('imprimir -> LPAREN RPAREN','imprimir',2,'p_imprimir','main.py',169),
  ('imprimir -> repiteValores','imprimir',1,'p_imprimir','main.py',170),
  ('valor -> INT','valor',1,'p_valor','main.py',173),
  ('valor -> FLOAT','valor',1,'p_valor','main.py',174),
  ('valor -> VARIABLE','valor',1,'p_valor','main.py',175),
  ('valor -> STRING','valor',1,'p_valor','main.py',176),
  ('valor -> TRUE','valor',1,'p_valor','main.py',177),
  ('valor -> FALSE','valor',1,'p_valor','main.py',178),
  ('valor -> THIS','valor',1,'p_valor','main.py',179),
  ('valor -> funcionParen','valor',1,'p_valor','main.py',180),
  ('dataType -> INTEGER','dataType',1,'p_dataType','main.py',183),
  ('dataType -> FLOATING','dataType',1,'p_dataType','main.py',184),
  ('dataType -> STRINGS','dataType',1,'p_dataType','main.py',185),
  ('dataType -> BOOLEAN','dataType',1,'p_dataType','main.py',186),
  ('dataType -> VOID','dataType',1,'p_dataType','main.py',187),
  ('comparacion -> INT operador INT','comparacion',3,'p_comparacion','main.py',190),
  ('comparacion -> FLOAT operador FLOAT','comparacion',3,'p_comparacion','main.py',191),
  ('comparacion -> INT operador FLOAT','comparacion',3,'p_comparacion','main.py',192),
  ('comparacion -> FLOAT operador INT','comparacion',3,'p_comparacion','main.py',193),
  ('repiteValores -> valor COMMA repiteValores','repiteValores',3,'p_repiteValores','main.py',198),
  ('repiteValores -> valor','repiteValores',1,'p_repiteValores','main.py',199),
  ('operaArit -> valor','operaArit',1,'p_operaArit','main.py',203),
  ('operaArit -> valor operador operaArit','operaArit',3,'p_operaArit','main.py',204),
  ('operaArit -> valor DOT valor','operaArit',3,'p_operaArit','main.py',205),
  ('expresion -> valor','expresion',1,'p_expresion','main.py',207),
  ('expresion -> operaArit','expresion',1,'p_expresion','main.py',208),
  ('expresion -> conditionProdu','expresion',1,'p_expresion','main.py',209),
  ('expresion -> ternario','expresion',1,'p_expresion','main.py',210),
  ('expresion -> accessMember','expresion',1,'p_expresion','main.py',211),
  ('operador -> PLUS','operador',1,'p_operador','main.py',213),
  ('operador -> MINUS','operador',1,'p_operador','main.py',214),
  ('operador -> TIMES','operador',1,'p_operador','main.py',215),
  ('operador -> DIVIDE','operador',1,'p_operador','main.py',216),
  ('operador -> MODULO','operador',1,'p_operador','main.py',217),
  ('ternario -> conditionProdu QUESTION expresion COLON expresion','ternario',5,'p_ternario','main.py',219),
  ('empty -> <empty>','empty',0,'p_empty','main.py',223),
]
